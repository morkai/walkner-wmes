define(["require","exports","module"],function(t,e,i){"use strict";function n(t,e){this.cancelled=!1,this.id=t,this.topic=e,this.messageFilter=null,this.messageLimit=0,this.messageCount=0,this.doFilter=null,this.listeners={cancel:null,message:null}}i.exports=n,n.compileFilter=function(){throw new Error("Subscription.compileFilter() is not implemented!")},n.prototype.toJSON=function(){var t=this.getFilter();return"function"==typeof t&&(t=t.toString()),{id:this.getId(),topic:this.getTopic(),limit:this.getLimit(),filter:t}},n.prototype.getId=function(){return this.id},n.prototype.getTopic=function(){return this.topic},n.prototype.getFilter=function(){return this.messageFilter},n.prototype.setFilter=function(t){if(this.messageFilter=t,"function"==typeof t)this.doFilter=t;else if(this.doFilter=n.compileFilter(t),"function"!=typeof this.doFilter)throw new Error("Subscription.compileFilter() must return a function.");return this},n.prototype.getLimit=function(){return this.messageLimit},n.prototype.setLimit=function(t){if(t<1)throw new Error("Subscription limit must be greater than 0.");return this.messageLimit=t,this},n.prototype.getMessageCount=function(){return this.messageCount},n.prototype.on=function(t,e){if(this.cancelled)return this;var i=this.listeners[t],n=typeof i;if("undefined"===n)throw new Error("Unknown event: "+t);return"function"===n?this.listeners[t]=[i,e]:null===i?this.listeners[t]=e:this.listeners[t].push(e),this},n.prototype.off=function(t,e){if(this.cancelled)return this;var i=this.listeners[t],n=typeof i;if("undefined"===n)throw new Error("Unknown event: "+t);if("function"===n&&i===e)this.listeners[t]=null;else if("object"===n&&null!==i){for(var s=-1,r=i.length,o=0;o<r;++o)if(i[o]===e){s=o;break}s!==-1&&(i.splice(s,1),2===r&&(this.listeners[t]=i[0]))}return this},n.prototype.cancel=function(){this.cancelled||(this.cancelled=!0,this.emit("cancel",this),this.listeners=null,this.doFilter=null)},n.prototype.send=function(t,e,i){this.cancelled||null!==this.doFilter&&!this.doFilter(e,t,i,this)||(++this.messageCount,this.emit("message",e,t,i,this),this.messageCount===this.messageLimit&&this.cancel())},n.prototype.emit=function(t){var e=this.listeners[t];if(null!==e){var i=arguments.length;if("function"==typeof e)return void(5===i?e(arguments[1],arguments[2],arguments[3],arguments[4]):e(arguments[1]));for(var n=0,s=e.length;n<s;++n)5===i?e[n](arguments[1],arguments[2],arguments[3],arguments[4]):e[n](arguments[1])}}});