const CACHE_KEY="frontend-1",CACHE_OTF_RE=new RegExp(`^${self.location.origin}/(?:vendor/|[a-z0-9-.]+$)`),messageHandlers={},notificationActions={};let errorCount=0;function showError(e){e.tag="error-"+ ++errorCount,self.registration.showNotification("WMES Error",e),setTimeout(()=>{self.registration.getNotifications().then(t=>{const n=t.find(t=>t.tag===e.tag);n&&n.close()})},1e4)}function focusOrOpen(e){return self.clients.matchAll({type:"window"}).then(t=>t.find(t=>t.url.includes(e))).then(t=>t?t.focus():self.clients.openWindow(e))}function inspect(e){self.fetch("/dev/inspect",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"same-origin",redirect:"manual",body:JSON.stringify(e)})}self.addEventListener("install",e=>{e.waitUntil(self.caches.open(CACHE_KEY).then(e=>e.addAll(["/"])))}),self.addEventListener("activate",e=>{e.waitUntil(self.caches.keys().then(e=>Promise.all(e.map(e=>e===CACHE_KEY?null:self.caches.delete(e)))))}),self.addEventListener("fetch",e=>{e.respondWith(self.caches.open(CACHE_KEY).then(async t=>{const n=await t.match(e.request);if(n)return n;const i=await fetch(e.request);return CACHE_OTF_RE.test(i.url)&&t.put(e.request,i.clone()),i}))}),self.addEventListener("message",e=>{const t={error:null,result:null};messageHandlers[e.data.action]?messageHandlers[e.data.action](e,(n,i)=>{t.error=n,t.result=i,e.ports.forEach(e=>e.postMessage(t))}):(t.error=new Error("Unknown action: "+e.data.action),e.ports.forEach(e=>e.postMessage(t)))}),self.addEventListener("notificationclick",e=>{const t=e.notification,n=t.data||{},i=n.onAction&&n.onAction[e.action]||n.onClick||{};!1!==i.close&&t.close();const s=[];i.open?s.push(focusOrOpen(i.open)):i.focus&&s.push(self.clients.get("string"==typeof i.focus?i.focus:n.bestClientId).then(e=>e.focus())),i.notify&&("object"!=typeof i.notify&&(i.notify={}),s.push(self.clients.get(i.notify.clientId||n.bestClientId).then(t=>t.postMessage({action:"notifications.userAction",userAction:i.notify.userAction||e.action,notificationAction:e.action,notificationReply:e.reply,data:i.notify.data||{}})))),i.act&&notificationActions[i.act.action]&&s.push(notificationActions[i.act.action](e,i.act.data||{})),e.waitUntil(Promise.all(s))}),self.addEventListener("notificationclose",e=>{e.waitUntil(self.skipWaiting())}),messageHandlers.getClientId=((e,t)=>{t(null,{clientId:e.source.id})}),messageHandlers.getClients=((e,t)=>{self.clients.matchAll(e.data&&e.data.filter||{type:"window"}).then(e=>{t(null,e.map(e=>({_id:e.id,type:e.type,url:e.url,focused:!0===e.focused,visibilityState:e.visibilityState||"undetermined"})))}).catch(t)}),notificationActions.wmesFapComment=((e,t)=>{if(!t.entryId)return Promise.resolve();const n=(e.reply||"").trim();if(!n.replace(/[^a-zA-Z0-9]+/g,"").length)return Promise.resolve();const i={method:"PATCH",headers:{"Content-Type":"application/json"},credentials:"same-origin",redirect:"manual",body:JSON.stringify({data:{comment:n}})};return self.fetch("/fap/entries/"+t.entryId,i).then(e=>{if(204!==e.status)throw new Error(`Unexpected response status: ${e.status}`);return focusOrOpen("/#fap/entries/"+t.entryId)}).catch(e=>showError({body:`Failed to comment FAP entry: ${t.entryId}.\n\nReason: ${e&&e.message||e}`,data:{onClick:{open:"/#fap/entries/"+t.entryId}}}))});