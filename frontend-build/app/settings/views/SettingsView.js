// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["js2form","app/core/View","app/core/templates/colorPicker","bootstrap-colorpicker"],function(t,e,i){"use strict";return e.extend({clientUrl:"#settings",defaultTab:null,updateSettingField:function(){},events:{"click a[data-tab]":function(t){var e=t.target.dataset.tab;return t.target.classList.contains("disabled")||(this.broker.publish("router.navigate",{url:this.clientUrl+"?tab="+e,trigger:!1,replace:!0}),this.changeTab(e)),!1},"change .colorpicker-component > .form-control":function(t){t.originalEvent&&this.$(t.target).closest(".colorpicker-component").colorpicker("setValue",t.target.value)},"keyup .form-control":function(t){var e=t.target,i=e.dataset.value;e.dataset.value=e.value,e.value!==i&&this.scheduleUpdateSetting(e,parseInt(e.dataset.keyupDelay,10)||1200)},'change .form-control, input[type="checkbox"], input[type="radio"]':function(t){var e=parseInt(t.target.dataset.changeDelay,10);(isNaN(e)||0>e)&&(e=300),this.scheduleUpdateSetting(t.target,e)}},initialize:function(){this.currentTab=this.options.initialTab,this.inProgress={},this.listenTo(this.settings,"add change",this.onSettingsChange)},destroy:function(){var t=this.$(".colorpicker-component");t.length&&t.colorpicker("destroy")},serialize:function(){return{idPrefix:this.idPrefix,renderColorPicker:i}},afterRender:function(){this.toggleTabPrivileges(),this.$(".colorpicker-component").colorpicker(),t(this.el,this.serializeFormData()),this.$("[name]").each(function(){this.dataset.value=this.value}),this.changeTab(this.currentTab||this.defaultTab||this.$(".list-group-item[data-tab]").attr("data-tab"))},toggleTabPrivileges:function(){},serializeFormData:function(){var t={},e=this;return this.settings.forEach(function(i){var a=i.get("value");if(Array.isArray(a)){var r=e.el.querySelector('input[name="'+i.id+'"]');"SELECT"!==r.tagName&&"checkbox"!==r.type&&(a=String(a))}else a=String(a);t[i.id]=a}),t},changeTab:function(t){var e=this.$(".list-group-item.active"),i=this.$('.list-group-item[data-tab="'+t+'"]');if(i.hasClass("disabled")){if(e.length)return;return void this.$(".list-group-item").filter(":not(.disabled)").first().click()}e.removeClass("active"),i.addClass("active"),this.$(".panel-body.active").removeClass("active"),this.$('.panel-body[data-tab="'+t+'"]').addClass("active"),this.currentTab=t},onSettingsChange:function(t){if(t&&!this.inProgress[t.id]){var e=this.$('.form-control[name="'+t.id+'"]'),i=t.get("value")||"";e.length&&e.val(i);var a=e.parent();if(a.hasClass("colorpicker-component")&&a.colorpicker("setValue",i),!e.length){var r=this.$('input[name="'+t.id+'"]');if(r.length){if("checkbox"===r[0].type)return void this.updateCheckboxSetting(t,r);if("radio"===r[0].type)return void this.updateRadioSetting(t,r);var n=r.first().prev();n.hasClass("select2-container")&&(n.hasClass("select2-container-multi")&&!Array.isArray(i)&&(i=i.split(",")),n.select2("val",i))}this.updateSettingField(t)}}},updateCheckboxSetting:function(t,e){var i=t.get("value");if(1===e.length)e[0].checked=!!i;else{Array.isArray(i)||(i=i?"string"==typeof i?i.split(","):[i]:[]);for(var a=0;a<e.length;++a){var r=e[a];r.checked=-1!==i.indexOf(r.value)}}},updateRadioSetting:function(t,e){e.filter('[value="'+t.get("value")+'"]').prop("checked",!0)},getValueFromSettingField:function(t){return"checkbox"===t.type?this.getValueFromCheckboxSetting(t):"radio"===t.type?this.getValueFromRadioSetting(t):t.value},getValueFromCheckboxSetting:function(t){var e=this.$('input[name="'+t.name+'"]');if(0===e.length)return null;if(1===e.length)return this.getCheckboxValue(e[0]);for(var i=[],a=0;a<e.length;++a){var r=this.getCheckboxValue(e[a]);r&&i.push(r)}return i},getCheckboxValue:function(t){return"true"===t.value?t.checked:"1"===t.value?t.checked?1:0:t.checked?t.value:null},getValueFromRadioSetting:function(t){return this.$('input[name="'+t.name+'"]:checked').val()},scheduleUpdateSetting:function(t,e){var i=t.name,a=this.getValueFromSettingField(t);return this.timers[i]&&clearTimeout(this.timers[i]),0===e?(delete this.timers[i],void this.updateSetting(i,a)):void(this.timers[i]=setTimeout(this.updateSetting.bind(this,i,a),e))},updateSetting:function(t,e){clearTimeout(this.timers[t]),this.inProgress[t]||(this.inProgress[t]=0),++this.inProgress[t];var i=this;this.promised(this.settings.update(t,e)).always(function(){--i.inProgress[t]})}})});