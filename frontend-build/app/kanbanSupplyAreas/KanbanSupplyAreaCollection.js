define(["../core/Collection","./KanbanSupplyArea"],function(e,t){"use strict";return e.extend({model:t,rqlQuery:"sort(name,workCenter)&limit(-1337)",initialize:function(){this.cached=null},setUpPubsub:function(e){e.subscribe("kanban.supplyAreas.*",this.handleMessage.bind(this))},getAsSelect2:function(e,t){var n={};return this.forEach(function(s){t.length&&-1===t.indexOf(s.get("name"))||s.get(e).length&&(n[s.get(e)]=1)}),Object.keys(n).sort().map(function(e){return{id:e,text:e}})},getNames:function(){return this.getAsSelect2("name",[])},getFamilies:function(e){return this.getAsSelect2("family",e)},getWorkCenters:function(e){return this.getAsSelect2("workCenter",e)},findByWorkCenters:function(e,t){var n=this.cache()[e];if(!n)return null;if(!t.length)return 1===n.list.length?n.list[0].sa:null;var s=[];return t.forEach(function(e){n.map[e]&&s.push(n.map[e])}),1===s.length?s[0]:null},handleMessage:function(e,t){var n=this.get(e.model._id);switch(this.cached=null,t){case"kanban.supplyAreas.deleted":this.remove(n);break;case"kanban.supplyAreas.added":case"kanban.supplyAreas.edited":n?n.set(e.model):this.add(e.model)}},cache:function(){if(null!==this.cached)return this.cached;var e=this.cached={};return this.forEach(function(t){var n=t.get("name"),s=t.get("workCenter");e[n]||(e[n]={map:{},list:[]}),e[n].map[s]=t,e[n].list.push({wc:s,sa:t})}),e}})});