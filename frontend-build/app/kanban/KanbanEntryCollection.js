// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../core/Collection","./KanbanEntry"],function(t,e,n){"use strict";return e.extend({model:n,paginate:!1,initialize:function(t,e){this.supplyAreas=e.supplyAreas,this.components=e.components,this.tableView=e.tableView,this.filtered=[],this.filteredMap={},this.tableView&&(this.tableView.on("change:filterMode",this.onFilterModeChange,this),this.tableView.on("change:filter",this.onFilterChange,this),this.tableView.on("change:sort",this.onSortChange,this),this.supplyAreas.on("add change remove",this.onSupplyAreaUpdate,this),this.components.on("add change remove",this.onComponentUpdate,this),this.on("change",this.onEntryChange),this.on("reset",this.onFilterChange),this.onFilterChange())},setUpPubsub:function(t){t.subscribe("kanban.import.success",this.onImport.bind(this)),t.subscribe("kanban.entries.updated",this.onUpdated.bind(this))},onFilterModeChange:function(){this.tableView.hasAnyFilter()&&this.onFilterChange()},onFilterChange:function(){var t=this.tableView.createFilter(this);this.filtered=[],this.filteredMap={};for(var e=0;e<this.length;++e){var n=this.models[e];t(n)&&(this.filtered.push(n),this.filteredMap[n.id]=n)}this.trigger("filter"),this.onSortChange()},onSortChange:function(){this.filtered.sort(this.tableView.createSort(this)),this.trigger("sort")},onSupplyAreaUpdate:function(t){this.forEach(function(e){e.get("supplyArea")===t.id&&(e.serialized=null)}),this.onFilterChange()},onComponentUpdate:function(t){this.forEach(function(e){e.get("nc12")===t.id&&(e.serialized=null)}),this.onFilterChange()},onEntryChange:function(t){t.serialized=null;var e=this.tableView;if(e){var n=!1,i=!1;Object.keys(t.changed).forEach(function(t){!n&&e.getFilter(t)?n=!0:!i&&e.getSortOrder(t)&&(i=!0)}),n?this.onFilterChange():i&&this.onSortChange()}},onImport:function(t){!t.entryCount&&t.componentCount},onUpdated:function(e){var n=this.get(e.entryId);if(n){var i={updates:t.clone(n.get("updates"))};-1===e.arrayIndex?(i[e.property]=e.newValue,i.updates[e.property]=e.updates):(i[e.property]=t.clone(n.get(e.property)),i[e.property][e.arrayIndex]=e.newValue,i.updates[e.property+"."+e.arrayIndex]=e.updates),n.set(i)}}})});