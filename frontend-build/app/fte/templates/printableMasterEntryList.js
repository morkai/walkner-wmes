define(["app/i18n"],function(t){return function anonymous(locals,filters,escape,rethrow){escape=escape||function(n){return String(n).replace(/&(?!#?[a-zA-Z0-9]+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<table class="table table-bordered table-condensed fte-masterEntry fte-masterEntry-print">\n  <thead>\n  <tr>\n    <th class="fte-masterEntry-column-task">',t("fte","masterEntry:column:task"),'\n    <th class="fte-masterEntry-column-noPlan">',t("fte","masterEntry:column:noPlan"),'\n    <th colspan="2">',t("fte","masterEntry:column:total"),"</th>\n    "),Object.keys(totalByProdFunction).forEach(function(n){buf.push('\n    <th colspan="',Object.keys(totalByProdFunction[n].companies).length,'">',totalByProdFunction[n].prodFunction,"</th>\n    ")}),buf.push("\n  <tr>\n    <th>\n    <th>\n    "),Object.keys(totalByCompany).forEach(function(n){buf.push("\n    <th>",totalByCompany[n].name,"\n    ")}),buf.push("\n    "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n    "),Object.keys(totalByProdFunction[n].companies).forEach(function(n){buf.push("\n    <th>",escape(totalByCompany[n].name),"\n    ")}),buf.push("\n    ")}),buf.push('\n  </thead>\n  <tbody>\n  <tr>\n    <th>\n    <th>\n    <th colspan="',companyCount,'">',round(total),"\n    "),Object.keys(totalByProdFunction).forEach(function(n){buf.push('\n    <th colspan="',Object.keys(totalByProdFunction[n].companies).length,'">',round(totalByProdFunction[n].total),"\n    ")}),buf.push("\n  <tr>\n    <th>\n    <th>\n    "),Object.keys(totalByCompany).forEach(function(n){buf.push("\n    <th>",round(totalByCompany[n].total),"\n    ")}),buf.push("\n    "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n    "),Object.keys(totalByProdFunction[n].companies).forEach(function(t){buf.push("\n    <th>",round(totalByProdFunction[n].companies[t]),"\n    ")}),buf.push("\n    ")}),buf.push("\n  "),tasks.forEach(function(n){buf.push('\n  <tr>\n    <td class="fte-masterEntry-cell-task">\n      '),"prodFlow"===n.type?buf.push("\n      ",escape(n.name),"\n      "):buf.push("\n      <em>",escape(n.name),"</em>\n      "),buf.push('\n    <td><i class="fa fa-',n.noPlan?"check":"times",'"></i>\n    '),Object.keys(n.totalByCompany).forEach(function(t){buf.push("\n    <td>",round(n.totalByCompany[t]),"</td>\n    ")}),buf.push("\n    "),n.functions.forEach(function(n){buf.push("\n    "),n.companies.forEach(function(n){buf.push("\n    <td>",round(n.count),"\n    ")}),buf.push("\n    ")}),buf.push("\n  ")}),buf.push('\n  <tr class="fte-masterEntry-print-absence-separator">\n    <td colspan="999">&nbsp;\n  <tr class="fte-masterEntry-print-absence-header">\n    <th colspan="999">Absencja personalna\n  <tr class="fte-masterEntry-print-absence-columns">\n    <th>',t("users","PROPERTY:personellId"),'\n    <th colspan="999">',t("users","PROPERTY:name"),"\n  "),absentUsers.forEach(function(n){buf.push('\n  <tr class="fte-masterEntry-print-absence-row">\n    <td>',n.personellId,'\n    <td colspan="999">',n.name,"\n  ")}),buf.push("\n</table>\n")}();return buf.join("")}});