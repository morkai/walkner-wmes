define(["app/i18n"],function(t){return function anonymous(locals,escape,include,rethrow){function encode_char(n){return _ENCODE_HTML_RULES[n]||n}escape=escape||function(n){return void 0==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__output=[],__append=__output.push.bind(__output);with(locals||{})__append('<table class="table table-bordered table-condensed fte-masterEntry fte-masterEntry-print">\n  <thead>\n  <tr>\n    <th class="fte-masterEntry-column-task">'),__append(t("fte","masterEntry:column:task")),__append('\n    <th class="fte-masterEntry-column-noPlan">'),__append(t("fte","masterEntry:column:noPlan")),__append('\n    <th colspan="2">'),__append(t("fte","masterEntry:column:total")),__append("</th>\n    "),Object.keys(totalByProdFunction).forEach(function(n){__append('\n    <th colspan="'),__append(Object.keys(totalByProdFunction[n].companies).length),__append('">'),__append(totalByProdFunction[n].prodFunction),__append("</th>\n    ")}),__append("\n  <tr>\n    <th>\n    <th>\n    "),Object.keys(totalByCompany).forEach(function(n){__append("\n    <th>"),__append(totalByCompany[n].name),__append("\n    ")}),__append("\n    "),Object.keys(totalByProdFunction).forEach(function(n){__append("\n    "),Object.keys(totalByProdFunction[n].companies).forEach(function(n){__append("\n    <th>"),__append(escape(totalByCompany[n].name)),__append("\n    ")}),__append("\n    ")}),__append('\n  </thead>\n  <tbody>\n  <tr>\n    <th>\n    <th>\n    <th colspan="'),__append(companyCount),__append('">'),__append(round(total)),__append("\n    "),Object.keys(totalByProdFunction).forEach(function(n){__append('\n    <th colspan="'),__append(Object.keys(totalByProdFunction[n].companies).length),__append('">'),__append(round(totalByProdFunction[n].total)),__append("\n    ")}),__append("\n  <tr>\n    <th>\n    <th>\n    "),Object.keys(totalByCompany).forEach(function(n){__append("\n    <th>"),__append(round(totalByCompany[n].total)),__append("\n    ")}),__append("\n    "),Object.keys(totalByProdFunction).forEach(function(n){__append("\n    "),Object.keys(totalByProdFunction[n].companies).forEach(function(t){__append("\n    <th>"),__append(round(totalByProdFunction[n].companies[t])),__append("\n    ")}),__append("\n    ")}),__append("\n  "),tasks.forEach(function(n,t){__append('\n  <tr>\n    <td class="fte-masterEntry-cell-task">\n      '),"prodFlow"===n.type?(__append("\n      "),__append(escape(n.name)),__append("\n      ")):(__append("\n      <em>"),__append(escape(n.name)),__append("</em>\n      ")),__append('\n    <td><i class="fa fa-'),__append(n.noPlan?"check":"times"),__append('"></i>\n    '),Object.keys(n.totalByCompany).forEach(function(t){__append("\n    <td>"),__append(round(n.totalByCompany[t])),__append("</td>\n    ")}),__append("\n    "),n.functions.forEach(function(n,t){__append("\n    "),n.companies.forEach(function(n,t){__append("\n    <td>"),__append(round(n.count)),__append("\n    ")}),__append("\n    ")}),__append("\n  ")}),__append('\n  <!--\n  <tr class="fte-masterEntry-print-absence-separator">\n    <td colspan="999">&nbsp;\n  <tr class="fte-masterEntry-print-absence-header">\n    <th colspan="999">Absencja personalna\n  <tr class="fte-masterEntry-print-absence-columns">\n    <th>'),__append(t("users","PROPERTY:personellId")),__append('\n    <th colspan="999">'),__append(t("users","PROPERTY:name")),__append("\n  "),absentUsers.forEach(function(n){__append('\n  <tr class="fte-masterEntry-print-absence-row">\n    <td>'),__append(n.personellId),__append('\n    <td colspan="999">'),__append(n.name),__append("\n  ")}),__append("\n  //-->\n</table>\n");return __output.join("")}});