define(["app/i18n"],function(t){return function anonymous(locals,filters,escape,rethrow){escape=escape||function(n){return String(n).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;")};var buf=[];with(locals||{})!function(){buf.push('<table class="table table-bordered table-condensed table-hover fte-leaderEntry-print">\n  <thead>\n    <tr>\n      <th class="fte-leaderEntry-column-task" rowspan="',divisions.length?6:4,'">',t("fte","leaderEntry:column:task"),'\n      <th class="fte-leaderEntry-column-total even" colspan="',companyCount*(divisions.length||1),'">',t("fte","leaderEntry:column:taskTotal"),"</th>\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-column-prodFunction" colspan="',Object.keys(totalByProdFunction[n].companies).length*(divisions.length||1),'">',totalByProdFunction[n].prodFunction,"</th>\n      ")}),buf.push('\n    </tr>\n    <tr>\n      <th class="fte-leaderEntry-total even" colspan="',companyCount*(divisions.length||1),'">',round(total),"\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-total-prodFunction" colspan="',Object.keys(totalByProdFunction[n].companies).length*(divisions.length||1),'">',round(totalByProdFunction[n].total),"\n      ")}),buf.push("\n    </tr>\n    <tr>\n      "),Object.keys(totalByCompany).forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-column-company even" colspan="',divisions.length,'">',totalByCompany[n].name,"\n      ")}),buf.push("\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n      "),Object.keys(totalByProdFunction[n].companies).forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-column-company" colspan="',divisions.length,'">',escape(totalByCompany[n].name),"\n      ")}),buf.push("\n      ")}),buf.push("\n    </tr>\n    <tr>\n      "),Object.keys(totalByCompany).forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-total-company" colspan="',divisions.length,'">',round(totalByCompany[n].total),"\n      ")}),buf.push("\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n      "),Object.keys(totalByProdFunction[n].companies).forEach(function(t){buf.push('\n      <th class="fte-leaderEntry-total-prodFunction-company" colspan="',divisions.length,'">',round(totalByProdFunction[n].companies[t].total),"\n      ")}),buf.push("\n      ")}),buf.push("\n    </tr>\n    "),divisions.length&&(buf.push("\n    <tr>\n      "),Object.keys(totalByCompany).forEach(function(){buf.push("\n      "),divisions.forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-column-division">',n,"\n      ")}),buf.push("\n      ")}),buf.push("\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n      "),Object.keys(totalByProdFunction[n].companies).forEach(function(){buf.push("\n      "),divisions.forEach(function(n){buf.push('\n      <th class="fte-leaderEntry-column-division">',n,"\n      ")}),buf.push("\n      ")}),buf.push("\n      ")}),buf.push("\n    </tr>\n    <tr>\n      "),Object.keys(totalByCompany).forEach(function(n){buf.push("\n      "),divisions.forEach(function(t){buf.push('\n      <th class="fte-leaderEntry-total-division">',round(totalByCompany[n].divisions[t]),"\n      ")}),buf.push("\n      ")}),buf.push("\n      "),Object.keys(totalByProdFunction).forEach(function(n){buf.push("\n      "),Object.keys(totalByProdFunction[n].companies).forEach(function(t){buf.push("\n      "),divisions.forEach(function(o){buf.push('\n      <th class="fte-leaderEntry-total-prodFunction-division">',round(totalByProdFunction[n].companies[t].divisions[o]),"\n      ")}),buf.push("\n      ")}),buf.push("\n      ")}),buf.push("\n    </tr>\n    ")),buf.push("\n  </thead>\n  <tbody>\n    "),tasks.forEach(function(n){buf.push('\n    <tr class="',n.parent?"is-child":n.hasChildren?"is-parent":"is-single"," ",n.lastChild?"is-last-child":"",'">\n      <td class="fte-leaderEntry-cell-task">\n        '),n.parent&&buf.push("\n        ",n.lastChild?"┗":"┣","\n        "),buf.push("\n        ",escape(n.name),"\n      </td>\n      "),Object.keys(n.totalByCompany).forEach(function(t){buf.push("\n      "),n.fteDiv?(buf.push("\n      "),divisions.forEach(function(o){buf.push("\n      <td>",round(n.totalByCompany[t].divisions[o]),"</td>\n      ")}),buf.push("\n      ")):buf.push('\n      <td colspan="',divisions.length,'">',round(n.totalByCompany[t].total),"</td>\n      "),buf.push("\n      ")}),buf.push("\n      "),n.functions.forEach(function(t){buf.push("\n      "),t.companies.forEach(function(t){buf.push("\n      "),n.fteDiv?(buf.push("\n      "),t.count.forEach(function(n){buf.push("\n      <td>",round(n.value),"</td>\n      ")}),buf.push("\n      ")):buf.push('\n      <td colspan="',divisions.length,'">',round(t.count),"</td>\n      "),buf.push("\n      ")}),buf.push("\n      ")}),buf.push("\n    </tr>\n    ")}),buf.push("\n  </tbody>\n</table>\n")}();return buf.join("")}});