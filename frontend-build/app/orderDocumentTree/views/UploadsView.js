define(["underscore","jquery","form2js","app/i18n","app/user","app/viewport","app/core/View","../util/pasteDateEvents","app/orderDocumentTree/templates/uploads","app/orderDocumentTree/templates/upload"],function(e,t,o,s,i,a,n,d,r,l){"use strict";return n.extend({template:r,events:e.assign({'click button[data-action="remove"]':function(e){var t=this.model.uploads.get(this.$upload(e.target).attr("data-id"));t&&this.model.uploads.remove(t)},"change .orderDocumentTree-uploads-field":function(e){var t=this.model.uploads.get(this.$upload(e.target).attr("data-id"));t&&t.set(e.target.name,e.target.value,{source:"user"})},"click #-setDate":function(){this.model.uploads.setDate(this.$id("date").val())},"click #-clear":function(){this.model.uploads.reset()},"click .orderDocumentTree-uploads-nc15[readonly]":function(e){var t=this.model.files.get(e.currentTarget.value);if(t){var o=this.$upload(e.target)[0].dataset.id,s=this.model.uploads.get(o);t.trigger("focus",t,s.get("hash"))}},submit:function(e){e.preventDefault();var t=this.$id("setDate").prop("disabled",!0),o=this.$id("submit").prop("disabled",!0),s=this.model.addFiles();a.msg.saving(),s.fail(function(){a.msg.savingFailed()}),s.done(function(){a.msg.saved()}),s.always(function(){t.prop("disabled",!1),o.prop("disabled",!1)})}},d),initialize:function(){var e=this.model,o=this.onDrag.bind(this);this.uploadIndex=this.model.uploads.length,this.listenTo(e.uploads,"reset",this.onReset),this.listenTo(e.uploads,"add",this.onAdd),this.listenTo(e.uploads,"remove",this.onRemove),this.listenTo(e.uploads,"focus",this.onFocus),this.listenTo(e.uploads,"upload:start",this.onUploadStart),this.listenTo(e.uploads,"change:date",this.onDateChange),this.listenTo(e.uploads,"change:name",this.onNameChange),this.listenTo(e.uploads,"change:error change:progress",this.onProgressChange),t(document).on("dragenter."+this.idPrefix,o).on("dragleave."+this.idPrefix,o).on("dragover."+this.idPrefix,o).on("drop."+this.idPrefix,this.onDrop.bind(this))},destroy:function(){t(document).off("."+this.idPrefix),this.model.uploads.stopUploading()},getTemplateData:function(){return{uploads:this.model.uploads.invoke("serializeDetails"),renderUpload:l}},$upload:function(e){return"string"==typeof e?this.$('.orderDocumentTree-uploads-upload[data-id="'+e+'"]'):this.$(e).closest(".orderDocumentTree-uploads-upload")},onDrag:function(e){e.preventDefault(),e.stopPropagation()},onDrop:function(e){if((e=e.originalEvent).dataTransfer.files.length)if(e.preventDefault(),e.stopPropagation(),i.isAllowedTo("DOCUMENTS:MANAGE")){var t=this.model,o=t.getSelectedFolder();if(o)if(t.isInTrash(o))a.msg.show({type:"warning",time:3e3,text:s("orderDocumentTree","uploads:msg:folderIsTrash")});else{var n=t.uploads,d=e.dataTransfer.files;n.remove(n.filter(function(e){return e.isError()}),{animate:!1});for(var r=0;r<d.length;++r)n.addFromFile(d[r],o)}else a.msg.show({type:"warning",time:3e3,text:s("orderDocumentTree","uploads:msg:noFolder")})}else a.msg.show({type:"warning",time:3e3,text:s("orderDocumentTree","uploads:msg:notAllowed")})},onReset:function(){var e=this;e.model.uploads.stopUploading(),e.$id("uploads").html(""),e.model.uploads.forEach(function(t){e.addUpload(t)})},onAdd:function(e){this.$id("uploads").append(this.renderPartialHtml(l,{upload:e.serializeDetails(),i:this.uploadIndex++})),this.model.uploads.startUploading(this.promised.bind(this)),clearTimeout(this.timers.fillNames),this.timers.fillNames=setTimeout(this.fillNames.bind(this),1),this.onFocus(e)},fillNames:function(){this.promised(this.model.uploads.fillNames())},onRemove:function(e,o,s){s&&!1===s.animate?this.$upload(e.id).remove():this.$upload(e.id).fadeOut("fast",function(){t(this).remove()})},onFocus:function(e){this.$upload(e.id).find('input[name="date"]').focus()},onDateChange:function(e,t,o){o&&"user"!==o.source&&this.$upload(e.id).find('input[name="date"]').val(e.get("date"))},onNameChange:function(e,t,o){o&&"user"!==o.source&&this.$upload(e.id).find('input[name="name"]').val(e.get("name"))},onProgressChange:function(e){this.$upload(e.id).toggleClass("is-reuploadable",e.isReuploadable()).find(".progress-bar").prop("className","progress-bar progress-bar-"+e.getStatusClassName()).css("width",e.getProgress()+"%").text(e.getMessage())},onUploadStart:function(e,t){this.promised(t)}})});