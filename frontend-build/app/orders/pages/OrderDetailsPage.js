// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","app/i18n","app/core/util/bindLoadingMessage","app/core/pages/DetailsPage","app/delayReasons/storage","app/printers/views/PrinterPickerView","../Order","../OrderCollection","../ComponentCollection","../util/openOrderPrint","../views/OrderDetailsView","../views/OperationListView","../views/DocumentListView","../views/ComponentListView","../views/OrderChangesView","../views/EtoView","app/orders/templates/detailsJumpList"],function(e,t,i,n,s,o,r,d,a,h,c,u,l,m,p,w,f,V){"use strict";return s.extend({pageId:"orderDetails",actions:function(){var e=this,t=e.model.id;return[r.pageAction({view:e,tag:"orders"},function(e){c([t],e)})]},remoteTopics:function(){var e={"orders.updated.*":"onOrderUpdated","orders.synced":"onSynced","orders.*.synced":"onSynced","orderDocuments.synced":"onSynced"};return e["orders.quantityDone."+this.model.id]="onQuantityDoneChanged",e},events:{"click #-jumpList > a":function(e){var i=e.currentTarget.getAttribute("href").substring(1),n=this.$("."+i),s=n.offset().top-14,o=t(".navbar-fixed-top");return o.length&&(s-=o.outerHeight()),t("html, body").stop(!0,!1).animate({scrollTop:s}),!1}},initialize:function(){this.model=n(new d({_id:this.options.modelId}),this),this.delayReasons=n(o.acquire(),this),this.paintOrders=n(new a(null,{rqlQuery:"select(bom)&operations.workCenter=PAINT&leadingOrder="+this.options.modelId}),this),this.paintOrder=new d({bom:new h}),this.detailsView=new u({model:this.model,delayReasons:this.delayReasons}),this.operationsView=new l({model:this.model,showQtyMax:!0}),this.documentsView=new m({model:this.model}),this.componentsView=new p({model:this.model,linkDocuments:!0}),this.paintComponentsView=new p({model:this.paintOrder,paint:!0}),this.etoView=new f({model:this.model}),this.changesView=new w({model:this.model,delayReasons:this.delayReasons}),this.insertView(this.detailsView),this.insertView(this.operationsView),this.insertView(this.documentsView),this.insertView(this.componentsView),this.insertView(this.paintComponentsView),this.insertView(this.etoView),this.insertView(this.changesView),this.listenTo(this.paintOrders,"reset",this.onPaintOrdersReset),this.listenTo(this.documentsView,"documentOpened",this.onDocumentOpened),this.listenTo(this.documentsView,"documentClosed",this.onDocumentClosed),this.listenTo(this.componentsView,"bestDocumentRequested",this.onBestDocumentRequested)},destroy:function(){o.release()},load:function(e){return e(this.model.fetch(),this.paintOrders.fetch({reset:!0}),this.delayReasons.isEmpty()?this.delayReasons.fetch({reset:!0}):null)},afterRender:function(){o.acquire(),this.renderJumpList()},onOrderUpdated:function(t){var i=this.model;if(i.id===t._id&&t.change){var n={};e.forEach(t.change.newValues,function(t,s){if("qtyMax"===s){var o={};o[t.operationNo]=t.value,t=e.defaults(o,i.get("qtyMax"))}n[s]=t}),i.set(n),i.get("changes").push(t.change),i.trigger("push:change",t.change)}},onQuantityDoneChanged:function(e){this.model.set("qtyDone",e)},onSynced:function(){this.promised(this.model.fetch())},renderJumpList:function(){this.$id("jumpList").remove(),this.$el.append(V({idPrefix:this.idPrefix}))},onPaintOrdersReset:function(){var t=new h,i=0;this.paintOrders.forEach(function(n){n.get("bom").forEach(function(n){t.add(e.assign({},n.toJSON(),{index:i++}))})}),this.paintOrder.set("bom",t)},onDocumentOpened:function(e,t){this.componentsView.markDocument(e,t)},onDocumentClosed:function(e,t){this.componentsView.unmarkDocument(e,t)},onBestDocumentRequested:function(e,t){this.documentsView.openBestDocument(e,t)}})});