// Part of <http://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["jquery","app/i18n","app/core/util/bindLoadingMessage","app/core/pages/DetailsPage","app/delayReasons/storage","../Order","../util/openOrderPrint","../views/OrderDetailsView","../views/OperationListView","../views/DocumentListView","../views/ComponentListView","../views/OrderChangesView","../views/EtoView","app/orders/templates/detailsJumpList"],function(e,i,t,s,n,o,r,d,a,h,l,c,p,m){"use strict";return s.extend({pageId:"orderDetails",actions:function(){return{label:i.bound("orders","PAGE_ACTION:print"),icon:"print",href:"/orders/"+this.model.id+".html?print",callback:function(e){return r(e,this.querySelector("a"))}}},remoteTopics:{"orders.updated.*":"onOrderUpdated","orders.synced":"onSynced","orders.*.synced":"onSynced","orderDocuments.synced":"onSynced"},events:{"click #-jumpList > a":function(i){var t=i.currentTarget.getAttribute("href").substring(1),s=this.$("."+t),n=s.offset().top-14,o=e(".navbar-fixed-top");return o.length&&(n-=o.outerHeight()),e("html, body").stop(!0,!1).animate({scrollTop:n}),!1}},initialize:function(){this.model=t(new o({_id:this.options.modelId}),this),this.delayReasons=t(n.acquire(),this),this.detailsView=new d({model:this.model,delayReasons:this.delayReasons}),this.operationsView=new a({model:this.model}),this.documentsView=new h({model:this.model}),this.componentsView=new l({model:this.model}),this.etoView=new p({model:this.model}),this.changesView=new c({model:this.model,delayReasons:this.delayReasons}),this.insertView(this.detailsView),this.insertView(this.operationsView),this.insertView(this.documentsView),this.insertView(this.componentsView),this.insertView(this.etoView),this.insertView(this.changesView)},destroy:function(){n.release()},load:function(e){return e(this.model.fetch(),this.delayReasons.isEmpty()?this.delayReasons.fetch({reset:!0}):null)},afterRender:function(){n.acquire(),this.renderJumpList()},onOrderUpdated:function(e){this.model.id===e._id&&(this.model.set("delayReason",e.delayReason),this.model.get("changes").push(e.change),this.model.trigger("push:change",e.change))},onSynced:function(){this.promised(this.model.fetch())},renderJumpList:function(){this.$id("jumpList").remove(),this.$el.append(m({idPrefix:this.idPrefix}))}})});