define(["underscore","jquery","app/i18n","app/core/util/bindLoadingMessage","app/core/pages/DetailsPage","app/delayReasons/storage","app/printers/views/PrinterPickerView","app/wmes-fap-entries/dictionaries","app/wmes-fap-entries/EntryCollection","../Order","../OrderCollection","../ComponentCollection","../util/openOrderPrint","../views/OrderDetailsView","../views/OrderListView","../views/OperationListView","../views/DocumentListView","../views/ComponentListView","../views/OrderChangesView","../views/EtoView","../views/FapEntryListView","app/orders/templates/detailsJumpList","i18n!app/nls/wmes-fap-entries"],function(e,i,t,s,n,o,r,d,a,h,l,c,p,u,m,w,f,V,g,y,O,v){"use strict";return n.extend({pageId:"orderDetails",actions:function(){var e=this.model.id;return[r.pageAction({view:this,tag:"orders"},function(i){p([e],i)})]},remoteTopics:function(){var e={"orders.updated.*":"onOrderUpdated","orders.synced":"onSynced","orders.*.synced":"onSynced","orderDocuments.synced":"onSynced"};return e["orders.quantityDone."+this.model.id]="onQuantityDoneChanged",e},events:{"click #-jumpList > a":function(e){var t=e.currentTarget.getAttribute("href").substring(1),s=this.$("."+t).offset().top-14,n=i(".navbar-fixed-top");return n.length&&(s-=n.outerHeight()),i("html, body").stop(!0,!1).animate({scrollTop:s}),!1}},initialize:function(){this.defineModels(),this.defineViews(),this.defineBindings(),this.insertView(this.detailsView),this.insertView(this.fapEntriesView),this.insertView(this.childOrdersView),this.insertView(this.operationsView),this.insertView(this.documentsView),this.insertView(this.componentsView),this.insertView(this.paintComponentsView),this.insertView(this.etoView),this.insertView(this.changesView)},destroy:function(){o.release(),d.unload()},defineModels:function(){this.model=s(new h({_id:this.options.modelId}),this),this.delayReasons=s(o.acquire(),this),this.fapEntries=s(new a(null,{rqlQuery:"exclude(changes)&sort(_id)&orderNo=string:"+this.model.id}),this),this.childOrders=s(new l(null,{paginate:!1,rqlQuery:"exclude(operations,bom,documents,changes)&sort(mrp,scheduledStartDate)&limit(0)&_id!="+this.model.id+"&leadingOrder="+this.model.id}),this),this.paintOrders=s(new l(null,{rqlQuery:"select(mrp,bom)&limit(0)&operations.workCenter=PAINT&leadingOrder="+this.model.id}),this),this.paintOrder=new h({bom:new c})},defineViews:function(){this.detailsView=new u({model:this.model,delayReasons:this.delayReasons}),this.fapEntriesView=new O({collection:this.fapEntries}),this.childOrdersView=new m({collection:this.childOrders,delayReasons:this.delayReasons,panel:{title:this.t("PANEL:TITLE:childOrders"),className:"orders-childOrders"}}),this.operationsView=new w({model:this.model,showQtyMax:!0}),this.documentsView=new f({model:this.model}),this.componentsView=new V({model:this.model,linkDocuments:!0,linkPfep:!0}),this.paintComponentsView=new V({model:this.paintOrder,paint:!0,linkPfep:!0}),this.etoView=new y({model:this.model}),this.changesView=new g({model:this.model,delayReasons:this.delayReasons})},defineBindings:function(){this.listenTo(this.paintOrders,"reset",this.onPaintOrdersReset),this.listenTo(this.documentsView,"documentOpened",this.onDocumentOpened),this.listenTo(this.documentsView,"documentClosed",this.onDocumentClosed),this.listenTo(this.componentsView,"bestDocumentRequested",this.onBestDocumentRequested)},load:function(e){return e(this.model.fetch(),d.load(),this.fapEntries.fetch({reset:!0}),this.childOrders.fetch({reset:!0}),this.paintOrders.fetch({reset:!0}),this.delayReasons.isEmpty()?this.delayReasons.fetch({reset:!0}):null)},afterRender:function(){o.acquire(),d.load(),this.renderJumpList()},onOrderUpdated:function(i){var t=this.model;if(t.id===i._id&&i.change){var s={};e.forEach(i.change.newValues,function(i,n){if("qtyMax"===n){var o={};o[i.operationNo]=i.value,i=e.defaults(o,t.get("qtyMax"))}s[n]=i}),t.set(s),t.get("changes").push(i.change),t.trigger("push:change",i.change)}},onQuantityDoneChanged:function(e){this.model.set("qtyDone",e)},onSynced:function(){this.promised(this.model.fetch())},renderJumpList:function(){this.$id("jumpList").remove(),this.$el.append(v({idPrefix:this.idPrefix}))},onPaintOrdersReset:function(){var i=new c,t=0;this.paintOrders.forEach(function(s){s.get("bom").forEach(function(n){i.add(e.assign({orderNo:s.id,mrp:s.get("mrp"),index:t++},n.toJSON()))})}),this.paintOrder.set("bom",i)},onDocumentOpened:function(e,i){this.componentsView.markDocument(e,i)},onDocumentClosed:function(e,i){this.componentsView.unmarkDocument(e,i)},onBestDocumentRequested:function(e,i){this.documentsView.openBestDocument(e,i)}})});