define(["app/i18n"],function(t){return function anonymous(locals,escapeFn,include,rethrow){function encode_char(n){return _ENCODE_HTML_RULES[n]||n}escapeFn=escapeFn||function(n){return void 0==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__output=[],__append=__output.push.bind(__output);with(locals||{})__append('<div class="minutesForSafetyCards-details">\n  <div class="panel panel-success">\n    <div class="panel-heading">\n      '),__append(helpers.t("PANEL:TITLE:details")),__append('\n    </div>\n    <div class="panel-details">\n      <div class="row">\n        <div class="col-md-4">\n          '),__append(helpers.props(model,{first:!0,props:["status","section","subject"]})),__append('\n        </div>\n        <div class="col-md-4">\n          '),__append(helpers.props(model,["!owner","!creator","!updater"])),__append('\n        </div>\n        <div class="col-md-4">\n          '),__append(helpers.props(model,["date","createdAt","updatedAt"])),__append("\n        </div>\n      </div>\n    </div>\n  </div>\n  "),(model.observations.length||model.nearMiss)&&(__append('\n  <div class="panel panel-default">\n    <div class="panel-heading is-with-actions">\n      '),__append(helpers.t("PROPERTY:observations")),__append("\n      "),model.nearMiss&&(__append('\n      <div class="panel-actions">\n        <p>'),__append(helpers.t("PANEL:ACTION:nearMiss")),__append(' <a href="#kaizenOrders/'),__append(model.nearMiss),__append('">#'),__append(model.nearMiss),__append("</a></p>\n      </div>\n      ")),__append('\n    </div>\n    <table class="table table-bordered table-hover">\n      <thead>\n      <tr>\n        <th class="minutesForSafetyCards-half">'),__append(helpers.t("PROPERTY:observations:what")),__append('</th>\n        <th class="minutesForSafetyCards-half">'),__append(helpers.t("PROPERTY:observations:why")),__append("</th>\n      </tr>\n      </thead>\n      <tbody>\n      "),model.observations.length||(__append('\n      <tr>\n        <td colspan="2">'),__append(t("core","LIST:NO_DATA")),__append("</td>\n      </tr>\n      ")),__append("\n      "),model.observations.forEach(function(n){__append('\n      <tr>\n        <td class="text-lines">'),__append(escapeFn(n.what)),__append('</td>\n        <td class="text-lines">'),__append(escapeFn(n.why)),__append("</td>\n      </tr>\n      ")}),__append("\n      </tbody>\n    </table>\n  </div>\n  ")),__append("\n  "),model.safeBehavior&&(__append('\n  <div class="panel panel-default">\n    <div class="panel-heading">'),__append(helpers.t("PROPERTY:safeBehavior")),__append('</div>\n    <div class="panel-body">\n      <p class="text-lines">'),__append(escapeFn(model.safeBehavior)),__append("</p>\n    </div>\n  </div>\n  ")),__append("\n  "),(model.orgPropositions.length||model.suggestion)&&(__append('\n  <div class="panel panel-default">\n    <div class="panel-heading is-with-actions">\n      '),__append(helpers.t("PROPERTY:orgPropositions")),__append("\n      "),model.suggestion&&(__append('\n      <div class="panel-actions">\n        <p>'),__append(helpers.t("PANEL:ACTION:suggestion")),__append(' <a href="#suggestions/'),__append(model.suggestion),__append('">#'),__append(model.suggestion),__append("</a></p>\n      </div>\n      ")),__append('\n    </div>\n    <table class="table table-bordered table-hover">\n      <thead>\n      <tr>\n        <th>'),__append(helpers.t("PROPERTY:propositions:what")),__append("</th>\n      </tr>\n      </thead>\n      <tbody>\n      "),model.orgPropositions.length||(__append("\n      <tr>\n        <td>"),__append(t("core","LIST:NO_DATA")),__append("</td>\n      </tr>\n      ")),__append("\n      "),model.orgPropositions.forEach(function(n){__append('\n      <tr>\n        <td class="text-lines">'),__append(escapeFn(n.what)),__append("</td>\n      </tr>\n      ")}),__append("\n      </tbody>\n    </table>\n  </div>\n  ")),__append("\n  "),model.techPropositions.length&&(__append('\n  <div class="panel panel-default">\n    <div class="panel-heading">'),__append(helpers.t("PROPERTY:techPropositions")),__append('</div>\n    <table class="table table-bordered table-hover">\n      <thead>\n      <tr>\n        <th>'),__append(helpers.t("PROPERTY:propositions:what")),__append("</th>\n      </tr>\n      </thead>\n      <tbody>\n      "),model.techPropositions.forEach(function(n){__append('\n      <tr>\n        <td class="text-lines">'),__append(escapeFn(n.what)),__append("</td>\n      </tr>\n      ")}),__append("\n      </tbody>\n    </table>\n  </div>\n  ")),__append("\n  "),model.participants.length&&(__append('\n  <div class="panel panel-default">\n    <div class="panel-heading">'),__append(helpers.t("PROPERTY:participants")),__append('</div>\n    <div class="panel-body">\n      <p class="text-lines">'),__append(escapeFn(model.participants.map(function(n){return n.label}).join(", "))),__append("</p>\n    </div>\n  </div>\n  ")),__append("\n</div>\n");return __output.join("")}});