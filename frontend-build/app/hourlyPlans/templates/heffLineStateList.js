define(["app/i18n"],function(t){return function anonymous(locals,escapeFn,include,rethrow){function encode_char(n){return _ENCODE_HTML_RULES[n]||n}escapeFn=escapeFn||function(n){return void 0==n?"":String(n).replace(_MATCH_HTML,encode_char)};var _ENCODE_HTML_RULES={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},_MATCH_HTML=/[&<>'"]/g,__output=[],__append=__output.push.bind(__output);with(locals||{})__append('<div>\n  <div id="'),__append(idPrefix),__append('-list" class="heffLineStates-list"></div>\n  <div class="heffLineStates-message message message-info message-inline">\n    Dla każdej linii można ustawić planowaną ilość wyświetlaną na ekranie <a href="/heff">Wydajność godzinowa</a>.<br>\n    Jeżeli zostanie podana tylko jedna liczba, to zostanie ona podzielona na 8 godzin.\n    Na przykład <code>100</code> ustawi następujący plan godzinowy: <code>13, 13, 13, 13, 12, 12, 12, 12</code>.<br>\n    Jeżeli zostanie podanych więcej liczb (maks. 8) to kolejne liczby zostaną przypisane do kolejnej godziny zmiany.\n    Wartości dla brakujących godzin ustawiane są na 0.\n    Na przykład <code>10 10 15</code> ustawi następujący plan godzinowy: <code>10, 10, 15, 0, 0, 0, 0, 0</code>.<br>\n    Jeżeli żadna wartość nie zostanie podana, to wartości brane są ze szczegółowych danych planu godzinowego\n    (jeżeli istnieje).\n  </div>\n</div>\n');return __output.join("")}});