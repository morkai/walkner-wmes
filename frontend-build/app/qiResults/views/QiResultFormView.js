// Part of <http://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","app/i18n","app/time","app/user","app/core/util/buttonGroup","app/core/util/idAndLabel","app/core/views/FormView","app/users/util/setUpUserSelect2","app/qiResults/dictionaries","../QiResult","app/qiResults/templates/form","app/qiResults/templates/correctiveActionFormRow"],function(t,e,i,n,s,r,a,o,d,c,l,u,p){"use strict";return o.extend({template:u,events:t.extend({"input #-orderNo":function(){this.clearOrderFields(),this.scheduleFindOrder()},"change #-faultCode":function(){var t=c.faults.get(this.$id("faultCode").val());this.$id("faultDescription").val(t.get("description")||t.get("name"))},"click #-addAction":"addEmptyAction",'click [name="removeAction"]':function(t){var e=this,i=e.$(t.target).closest("tr");i.fadeOut("fast",function(){i.remove(),e.recountActions()})}},o.prototype.events),initialize:function(){o.prototype.initialize.apply(this,arguments),this.scheduleFindOrder=t.debounce(this.findOrder.bind(this),250),this.findOrderReq=null,this.statuses=null,this.actions=0},serialize:function(){return t.extend(o.prototype.serialize.call(this),{inspectedAtMin:"2000-01-01",inspectedAtMax:n.getMoment().startOf("day").add(1,"days").format("YYYY-MM-DD"),kinds:c.kinds.map(a),faults:c.faults.map(function(t){return{id:t.id,text:t.id+": "+t.get("name")}}),errorCategories:c.errorCategories.map(a),inspectors:this.serializeInspectors()})},serializeInspectors:function(){var t={},e=[];c.inspectors.forEach(function(i){var n=a(i);t[n.id]=!0,e.push(n)});var i=this.model.get("inspector");return this.options.editMode&&!t[i.id]&&e.unshift({id:i.id,text:i.text}),e},checkValidity:function(){return!0},submitRequest:function(t,e){var n=this,s=new FormData,r=0;if(this.$('input[type="file"]').each(function(){this.files.length&&(s.append(this.name,this.files[0]),++r)}),0===r)return o.prototype.submitRequest.call(n,t,e);var a=this.$el.find(".fa-spinner").removeClass("hidden"),d=this.ajax({type:"POST",url:"/qi/results;upload",data:s,processData:!1,contentType:!1});d.done(function(i){e.attachments=i,o.prototype.submitRequest.call(n,t,e)}),d.fail(function(){n.showErrorMessage(i("qiResults","FORM:ERROR:upload")),t.attr("disabled",!1)}),d.always(function(){a.addClass("is-uploading")})},serializeToForm:function(){var t=this.model.toJSON();if(t.inspector=t.inspector?t.inspector.id:"",t.inspectedAt=n.format(t.inspectedAt,"YYYY-MM-DD"),!this.options.editMode){var e=c.faults.at(0);t.faultDescription=e?e.get("description")||e.get("name"):""}return t.okFile="",t.nokFile="",t},serializeForm:function(e){var i=this.$id("inspector")[0].selectedOptions[0];e.inspector={id:i.value,label:i.label.trim()};var s=this.$id("actions").children();return e.correctiveActions=t.map(e.correctiveActions,function(e,i){var r=n.getMoment(e.when);return{what:e.what||"",when:r.isValid()?r.toDate():null,who:t.map(s.eq(i).find('input[name$="who"]').select2("data"),function(t){return{id:t.id,label:t.text}}),status:e.status}}).filter(function(t){return t.what.length>0}),e},afterRender:function(){o.prototype.afterRender.call(this),this.options.editMode?t.forEach(this.model.get("correctiveActions"),this.addAction,this):(this.findOrder(),this.addEmptyAction())},clearOrderFields:function(){this.$id("nc12").val(""),this.$id("productName").val(""),this.$id("productFamily").val(""),this.$id("division").val("")},findOrder:function(){var t=this;t.findOrderReq&&(t.findOrderReq.abort(),t.findOrderReq=null);var e=t.$id("orderNo");e[0].setCustomValidity(i("qiResults","FORM:ERROR:orderNo"));var n=t.$id("orderNo").val().replace(/[^0-9]+/g,"");if(9===n.length){var s=t.ajax({method:"GET",url:"/qi/results;order",data:{no:n}});s.always(function(){t.findOrderReq=null}),s.done(function(i){t.$id("nc12").val(i.nc12),t.$id("productName").val(i.productName),t.$id("productFamily").val(i.productFamily),t.$id("division").val(i.division),e[0].setCustomValidity("")}),t.findOrderReq=s}},addEmptyAction:function(){this.addAction({status:"",when:"",who:[],what:""})},addAction:function(t){this.statuses||(this.statuses=c.actionStatuses.map(a));var e=this.$id("actions");t.i=this.actions++,t.no=e.children().length+1,e.append(p({statuses:this.statuses,action:t}));var i=d(e.children().last().find('[name$="who"]'),{width:"300px",allowClear:!0,multiple:!0,textFormatter:function(t,e){return e}});i.select2("data",t.who.map(function(t){return{id:t.id,text:t.label}}))},recountActions:function(){this.$id("actions").children().each(function(t){this.firstElementChild.textContent=t+1})}})});