define(["underscore","jquery","app/time","app/viewport","app/core/views/FormView","app/wmes-osh-common/dictionaries","./ObserverEditorDialogView","app/wmes-osh-employments/templates/form","jquery.stickytableheaders"],function(e,t,n,r,i,s,a,o){"use strict";return i.extend({template:o,events:Object.assign({"change #-month":"loadExisting","change #-blur":"loadExistingNow","change #-enableRecount":function(e){this.$id("doRecount").prop("disabled",!e.target.checked)},"click #-doRecount":"recount",'change input[type="number"]':function(e){e.currentTarget.value>0||(e.currentTarget.value=0);const t=+this.$(e.currentTarget).closest("tr")[0].dataset.department;this.recountDepartment(t)},"click .js-observers":function(e){e.currentTarget.blur(),this.showObserverEditorDialog(this.$(e.target).closest(".js-department")[0].dataset.department)},"keydown input":function(e){if(e.currentTarget.name.endsWith("observers")&&e.currentTarget.click(),"Enter"===e.key||"Space"===e.key){const t=+this.$(e.currentTarget).closest("tr")[0].dataset.department;return this.recountDepartment(t),!1}}},i.prototype.events),initialize:function(){i.prototype.initialize.apply(this,arguments),this.setUpStickyTable()},getTemplateData:function(){const e=new Map,t=new Map,n=new Set;return(this.model.get("departments")||[]).forEach(r=>{if(!r.division)return;if(e.has(r.division)||e.set(r.division,{key:`d${r.division}w0d0`,_id:r.division,label:s.getLabel("divisions",r.division),workplaces:[]}),!r.workplace)return;const i=e.get(r.division);if(!t.has(r.workplace)){const e={key:`d${r.division}w${r.workplace}d0`,_id:r.workplace,label:s.getLabel("workplaces",r.workplace),departments:[]};t.set(r.workplace,e),i.workplaces.push(e)}r.department&&(t.get(r.workplace).departments.push({key:`d${r.division}w${r.workplace}d${r.department}`,_id:r.department,label:s.getLabel("departments",r.department),internal:r.internal,external:r.external,absent:r.absent,total:r.total,observers:r.observers,observerUsers:r.observerUsers}),n.add(r.department))}),s.departments.forEach(r=>{if(n.has(r.id))return;const i=r.get("workplace");let a=0;if(!t.has(i)){const n=s.workplaces.get(i);if(!n)return;if(a=n.get("division"),!s.divisions.get(a))return;const r={key:`d${a}w${i}d0`,_id:i,label:s.getLabel("workplaces",i),departments:[]};t.set(i,r),e.has(a)||e.set(a,{key:`d${a}w0d0`,_id:a,label:s.getLabel("divisions",a),workplaces:[]}),e.get(a).workplaces.push(r)}t.get(i).departments.push({key:`d${a}w${i}d${r.id}`,_id:r.id,label:r.getLabel(),internal:0,external:0,absent:0,total:0,observers:0})}),this.departments={d0w0d0:{division:0,workplace:0,department:0,internal:0,external:0,absent:0,total:0,observers:0,observerUsers:"[]"}},e.forEach(e=>{e.workplaces.sort((e,t)=>e.label.localeCompare(t.label,void 0,{numeric:!0,ignorePunctuation:!0})),this.departments[e.key]={division:e._id,workplace:0,department:0,internal:0,external:0,absent:0,total:0,observers:0,observerUsers:"[]"},e.workplaces.forEach(t=>{t.departments.sort((e,t)=>e.label.localeCompare(t.label,void 0,{numeric:!0,ignorePunctuation:!0})),this.departments[t.key]={division:e._id,workplace:t._id,department:0,internal:0,external:0,absent:0,total:0,observers:0,observerUsers:"[]"},t.departments.forEach(n=>{this.departments[n.key]={division:e._id,workplace:t._id,department:n._id,internal:n.internal,external:n.external,absent:n.absent,total:n.total,observers:(n.observerUsers||[]).length,observerUsers:JSON.stringify(n.observerUsers||[])}})})}),{divisions:Array.from(e.values()).sort((e,t)=>e.label.localeCompare(t.label,void 0,{numeric:!0,ignorePunctuation:!0}))}},serializeToForm:function(){return{month:this.options.editMode?n.utc.format(this.model.id,"YYYY-MM"):this.month||"",departments:this.departments}},serializeForm:function(e){return this.options.editMode||(e._id=e.month+"-01T00:00:00Z"),delete e.month,e.departments=Object.values(e.departments||{}),e.departments.forEach(e=>{e.division=+e.division,e.workplace=+e.workplace,e.department=+e.department,e.internal=parseInt(e.internal,10)||0,e.external=parseInt(e.external,10)||0,e.absent=parseInt(e.absent,10)||0,e.total=e.internal+e.external-e.absent,e.observers=parseInt(e.observers,10)||0,e.observerUsers=e.observerUsers?JSON.parse(e.observerUsers):[]}),e},checkValidity:()=>!0,afterRender:function(){i.prototype.afterRender.apply(this,arguments),this.recountWorkplaces(),this.recountDivisions(),this.recountOverall(),this.$el.popover({selector:".js-observers",container:document.body,trigger:"hover",html:!0,hasContent:function(){return this.value>0},content:function(){return'<ol style="font-size: 12px; list-style-position: inside; padding-left: 0">'+JSON.parse(this.previousElementSibling.value).map(t=>`<li>${e.escape(t.label)}`).join("")+"</ol>"}})},setUpStickyTable:function(){this.on("afterRender",()=>{this.$(".table").stickyTableHeaders({fixedOffset:t(".navbar-fixed-top"),scrollableAreaX:this.$el})}),this.on("beforeRender remove",()=>{this.$(".table").stickyTableHeaders("destroy")})},loadExisting:function(){clearTimeout(this.timers.loadExisting),this.timers.loadExisting=setTimeout(this.loadExistingNow.bind(this),333)},loadExistingNow:function(){clearTimeout(this.timers.loadExisting);const e=this.$id("month").val();if(!e)return;const t=n.utc.getMoment(`${e}-01`,"YYYY-MM-DD");if(!t.isValid())return;r.msg.loading();const i=this.ajax({url:`/osh/employments?_id<=${t.valueOf()}&sort(-_id)&limit(1)`});i.fail(()=>{r.msg.loadingFailed()}),i.done(e=>{r.msg.loaded();const n=e.collection&&e.collection[0]||{};n._id!==t.toISOString()&&(n._id=void 0),this.month=t.format("YYYY-MM"),this.model.set(n,{silent:!0}),this.render()})},recount:function(){r.msg.loading(),this.$id("enableRecount").prop("disabled",!0),this.$id("doRecount").prop("disabled",!0);const e=this.ajax({url:"/osh/employments;recount"});e.fail(()=>{r.msg.loadingFailed()}),e.done(e=>{r.msg.loaded(),this.$(".js-department").each((t,n)=>{const r=e[n.dataset.department]||{internal:0,external:0,observers:0,observerUsers:[]},i=+n.querySelector('input[name$="absent"]').value;n.querySelector('input[name$="internal"]').value=r.internal,n.querySelector('input[name$="external"]').value=r.external,n.querySelector('input[name$="total"]').value=r.internal+r.external-i,n.querySelector('input[name$="observers"]').value=r.observers,n.querySelector('input[name$="observerUsers"]').value=JSON.stringify(r.observerUsers)}),this.recountWorkplaces(),this.recountDivisions(),this.recountOverall()}),e.always(()=>{this.$id("enableRecount").prop("disabled",!1),this.$id("doRecount").prop("disabled",!1)})},recountDivisions:function(){this.$(".js-division").each((e,t)=>{this.recountDivision(t.dataset.division)})},recountWorkplaces:function(){this.$(".js-workplace").each((e,t)=>{this.recountWorkplace(t.dataset.workplace)})},recountOverall:function(){const e=this.$id("overall"),t={internal:0,external:0,absent:0,total:0,observers:0},n=Object.keys(t);this.$(".js-division").each((e,r)=>{n.forEach(e=>{t[e]+=parseInt(r.querySelector(`input[name$="${e}"]`).value,10)||0})}),n.forEach(n=>{e.find(`input[name$="${n}"]`).val(t[n])})},recountDivision:function(e){const t=this.$(`.js-division[data-division="${e}"]`),n={internal:0,external:0,absent:0,total:0,observers:0},r=Object.keys(n);this.$(`.js-workplace[data-division="${e}"]`).each((e,t)=>{r.forEach(e=>{n[e]+=parseInt(t.querySelector(`input[name$="${e}"]`).value,10)||0})}),r.forEach(e=>{t.find(`input[name$="${e}"]`).val(n[e])})},recountWorkplace:function(e){const t=this.$(`.js-workplace[data-workplace="${e}"]`),n={internal:0,external:0,absent:0,total:0,observers:0},r=Object.keys(n);this.$(`.js-department[data-workplace="${e}"]`).each((e,t)=>{r.forEach(e=>{n[e]+=parseInt(t.querySelector(`input[name$="${e}"]`).value,10)||0})}),r.forEach(e=>{t.find(`input[name$="${e}"]`).val(n[e])})},recountDepartment:function(e){const t=this.$(`.js-department[data-department="${e}"]`),n=+t.find('input[name$="internal"]').val(),r=+t.find('input[name$="external"]').val(),i=+t.find('input[name$="absent"]').val();t.find('input[name$="total"]').val(n+r-i),this.recountWorkplace(+t[0].dataset.workplace),this.recountDivision(+t[0].dataset.division),this.recountOverall()},showObserverEditorDialog:function(e){if(r.currentDialog instanceof a)return;const t=this.$(`.js-department[data-department="${e}"]`),n=t.children(),i=new a({model:{orgUnit:`${n[0].textContent} > ${n[1].textContent} > ${n[2].textContent}`,users:JSON.parse(t.find('input[name$="observerUsers"]').val())}});this.listenTo(i,"picked",n=>{r.closeDialog(),t.find('input[name$="observerUsers"]').val(JSON.stringify(n)),t.find('input[name$="observers"]').val(n.length).focus(),this.recountDepartment(e)}),this.broker.subscribe("viewport.dialog.hidden").setLimit(1).setFilter(e=>e===i).on("message",()=>t.find('input[name$="observers"]').focus()),r.showDialog(i,this.t("observerEditor:title"))}})});