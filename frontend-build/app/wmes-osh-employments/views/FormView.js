define(["app/time","app/viewport","app/core/views/FormView","app/wmes-osh-common/dictionaries","app/wmes-osh-employments/templates/form"],function(e,t,n,a,i){"use strict";return n.extend({template:i,events:Object.assign({"change #-month":"loadExisting","change #-blur":"loadExistingNow","change #-enableRecount":function(e){this.$id("doRecount").prop("disabled",!e.target.checked)},"click #-doRecount":"recount"},n.prototype.events),getTemplateData:function(){const e=new Map,t=new Set;return(this.model.get("departments")||[]).forEach(n=>{e.has(n.workplace)||e.set(n.workplace,{_id:n.workplace,label:a.getLabel("workplaces",n.workplace),division:a.workplaces.get(n.workplace).get("division"),departments:[]}),e.get(n.workplace).departments.push({_id:n.department,label:a.getLabel("departments",n.department),internal:n.internal,external:n.external,absent:n.absent,total:n.total,observers:n.observers}),t.add(n.department)}),a.departments.forEach(n=>{if(t.has(n.id))return;const i=n.get("workplace");e.has(i)||e.set(i,{_id:i,label:a.getLabel("workplaces",i),division:a.workplaces.get(i).get("division"),departments:[]}),e.get(i).departments.push({_id:n.id,label:n.getLabel(),internal:0,external:0,absent:0,total:0,observers:0})}),this.departments={},e.forEach(e=>{e.departments.sort((e,t)=>e.label.localeCompare(t.label,void 0,{numeric:!0,ignorePunctuation:!0})),e.departments.forEach(t=>{this.departments[`d${t._id}`]={division:e.division,workplace:e._id,department:t._id,internal:t.internal,external:t.external,absent:t.absent,total:t.total,observers:t.observers}})}),{workplaces:Array.from(e.values()).sort((e,t)=>e.label.localeCompare(t.label,void 0,{numeric:!0,ignorePunctuation:!0}))}},serializeToForm:function(){return{month:this.options.editMode?e.utc.format(this.model.id,"YYYY-MM"):this.month||"",departments:this.departments}},checkValidity:()=>!0,serializeForm:function(e){return this.options.editMode||(e._id=e.month+"-01T00:00:00Z"),delete e.month,e.departments=Object.values(e.departments||{}),e.departments.forEach(e=>{e.division=+e.division,e.workplace=+e.workplace,e.department=+e.department,e.internal=parseInt(e.internal,10)||0,e.external=parseInt(e.external,10)||0,e.absent=parseInt(e.absent,10)||0,e.total=e.internal+e.external-e.absent,e.observers=parseInt(e.observers,10)||0}),e},afterRender:function(){n.prototype.afterRender.apply(this,arguments)},loadExisting:function(){clearTimeout(this.timers.loadExisting),this.timers.loadExisting=setTimeout(this.loadExistingNow.bind(this),333)},loadExistingNow:function(){clearTimeout(this.timers.loadExisting);const n=this.$id("month").val();if(!n)return;const a=e.utc.getMoment(`${n}-01`,"YYYY-MM-DD");if(!a.isValid())return;t.msg.loading();const i=this.ajax({url:`/osh/employments?_id<=${a.valueOf()}&sort(-_id)&limit(1)`});i.fail(()=>{t.msg.loadingFailed()}),i.done(e=>{t.msg.loaded();const n=e.collection&&e.collection[0]||{};n._id!==a.toISOString()&&(n._id=void 0),this.month=a.format("YYYY-MM"),this.model.set(n,{silent:!0}),this.render()})},recount:function(){t.msg.loading(),this.$id("enableRecount").prop("disabled",!0),this.$id("doRecount").prop("disabled",!0);const e=this.ajax({url:"/osh/employments;recount"});e.fail(()=>{t.msg.loadingFailed()}),e.done(e=>{t.msg.loaded(),this.$("tr[data-id]").each((t,n)=>{const a=e[n.dataset.id]||{internal:0,external:0,observers:0};n.querySelector('input[name$="internal"]').value=a.internal,n.querySelector('input[name$="external"]').value=a.external,n.querySelector('input[name$="observers"]').value=a.observers})}),e.always(()=>{this.$id("enableRecount").prop("disabled",!1),this.$id("doRecount").prop("disabled",!1)})}})});