// Part of <http://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","../settings/SettingCollection","./ProductionSetting"],function(t,e,i,n){"use strict";return i.extend({model:n,topicSuffix:"production.**",initialize:function(t,e){i.prototype.initialize.apply(this,arguments),this.cache={},e.localStorage&&this.setUpLocalStorage()},getValue:function(t){var e=this.get("production."+t);return e?e.getValue():null},prepareValue:function(e,i){return/rearmDowntimeReason$/.test(e)?t.isEmpty(i)?null:i:/spigot(Not)?Patterns$/.test(e)?this.prepareSpigotPatterns(i):/spigotLines$/.test(e)?this.prepareSpigotLines(i):/spigotGroups$/.test(e)?this.prepareSpigotGroups(i):/spigotFinish$/.test(e)?!!i:/taktTime.coeffs$/.test(e)?this.prepareTaktTimeCoeffs(i):this.prepareNumericValue(i,0,60)},prepareSpigotPatterns:function(t){return"string"!=typeof t?void 0:t.split("\n").filter(function(t){try{new RegExp(t)}catch(e){return!1}return!!t.trim().length}).join("\n")},prepareSpigotLines:function(t){return"string"!=typeof t?void 0:t.split(",").filter(function(t){return!!t.length}).join(",")},prepareSpigotGroups:function(t){return(t||"").split("\n").map(function(t){var e=t.split(/[^0-9]+/).filter(function(t){return t.length>0});return 0===e.length?"":e.shift()+": "+e.join(", ")}).join("\n").replace(/\n{2,}/g,"\n")},getTaktTimeCoeff:function(t,e){var i=this.cache.taktTimeCoeffs;i||(i=this.cache.taktTimeCoeffs=this.mapTaktTimeCoeffs(this.getValue("taktTime.coeffs")));var n=i[t]||i["*"]||{};return n?n[e]||n["*"]||1:1},mapTaktTimeCoeffs:function(t){var e={};return t.split("\n").forEach(function(t){for(var i,n={},r=t,a=/([A-Z0-9]+[A-Z0-9_\- ]*|\*)\s*=\s*([0-9]+(?:(?:\.|,)[0-9]+)?)/gi,o=0;null!==(i=a.exec(t));)n[i[1].toUpperCase()]=parseFloat(i[2].replace(",",".")),r=r.replace(i[0],""),o+=1;var s=-1===r.indexOf("*")?r.split(/[^A-Za-z0-9]/)[0].toUpperCase():"*";o&&s.length&&(e[s]=n)}),e},prepareTaktTimeCoeffs:function(t){var e=this.mapTaktTimeCoeffs(t);return Object.keys(e).map(function(t){var i=t+":";return Object.keys(e[t]).forEach(function(n){i+=" "+n+"="+e[t][n]}),i}).join("\n")},setUpLocalStorage:function(){this.length||this.readLocalData(),this.on("reset change",this.saveLocalData.bind(this))},readLocalData:function(){try{this.reset(JSON.parse(localStorage["PRODUCTION:SETTINGS"]))}catch(t){}},saveLocalData:function(){localStorage["PRODUCTION:SETTINGS"]=JSON.stringify(this.models),this.cache={}}})});