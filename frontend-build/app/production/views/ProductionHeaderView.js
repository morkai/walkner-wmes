define(["app/i18n","app/viewport","app/core/View","app/data/prodLog","app/data/views/renderOrgUnitPath","app/users/UserCollection","./PersonelPickerView","app/production/templates/header"],function(e,t,n,r,i,o,a,s){return n.extend({template:s,localTopics:{"visibility.visible":function(){this.updateCurrentTime()},"visibility.hidden":function(){clearTimeout(this.timers.updateCurrentTime)},"divisions.synced":"updateOrgUnit","subdivisions.synced":"updateOrgUnit","mrpControllers.synced":"updateOrgUnit","prodFlows.synced":"updateOrgUnit","workCenters.synced":"updateOrgUnit","prodLines.synced":"updateOrgUnit","socket.connected":"fillPersonnelData"},events:{"click .production-property-master .btn-link":"showMasterPickerDialog","click .production-property-leader .btn-link":"showLeaderPickerDialog","click .production-property-operator .btn-link":"showOperatorPickerDialog"},initialize:function(){this.updateCurrentTime=this.updateCurrentTime.bind(this),this.listenTo(this.model.prodLine,"change:description",this.updatePageHeader),this.listenTo(this.model,"change:shift",this.updateShift),this.listenTo(this.model,"change:master",this.updateMaster),this.listenTo(this.model,"change:leader",this.updateLeader),this.listenTo(this.model,"change:operator",this.updateOperator),this.listenTo(this.model,"locked unlocked",function(){this.updateMaster(),this.updateLeader(),this.updateOperator()})},afterRender:function(){this.$currentTime=this.$property("currentTime"),this.updatePageHeader(),this.updateCurrentTime(),this.updateShift(),this.updateOrgUnit(),this.updateMaster(),this.updateLeader(),this.updateOperator(),this.socket.isConnected()&&this.fillPersonnelData()},updatePageHeader:function(){this.$(".production-pageHeader").text(this.model.getLabel())},updateCurrentTime:function(){this.$currentTime.text(this.model.getCurrentTime()),this.scheduleCurrentTimeUpdate()},updateShift:function(){var t=this.model.get("shift");t="number"==typeof t?e("core","SHIFT:"+t):"?",this.$property("shift").text(t)},updateOrgUnit:function(){this.$property("orgUnit").text(i(this.model.prodLine.getSubdivision(),!1,!1)||"?")},updateMaster:function(){this.updatePersonnel("master")},updateLeader:function(){this.updatePersonnel("leader")},updateOperator:function(){this.updatePersonnel("operator")},updatePersonnel:function(t){var n,r=!this.model.isLocked(),i=this.model.get(t),o=i&&i.label?i.label:null;o?(n=o,r&&(n+=' <button class="btn btn-link">'+e("production","property:"+t+":change")+"</button>")):(n=e("production","property:"+t+":noData:"+(r?"un":"")+"locked"),r&&(n='<button class="btn btn-link">'+n+"</a>")),this.$property(t).html(n)},scheduleCurrentTimeUpdate:function(){null!=this.timers.updateCurrentTime&&clearTimeout(this.timers.updateCurrentTime),this.timers.updateCurrentTime=setTimeout(function(e){e.timers.updateCurrentTime=null,e.updateCurrentTime()},999,this)},$property:function(e){return this.$(".production-property-"+e+" .production-property-value")},showMasterPickerDialog:function(e){e&&(e.preventDefault(),e.target.blur()),this.showPickerDialog("master",this.model.changeMaster.bind(this.model))},showLeaderPickerDialog:function(e){e&&(e.preventDefault(),e.target.blur()),this.showPickerDialog("leader",this.model.changeLeader.bind(this.model))},showOperatorPickerDialog:function(e){e&&(e.preventDefault(),e.target.blur()),this.showPickerDialog("operator",this.model.changeOperator.bind(this.model))},showPickerDialog:function(n,r){var i=new a;this.listenTo(i,"userPicked",function(e){t.closeDialog();var i=this.model.get(n);null===i?null!==e&&r(e):(e.id!==i.id||e.label!==i.label)&&r(e),this.$(".production-property-"+n+" .btn-link").focus()}),t.showDialog(i,e("production","personelPicker:title:"+n))},fillPersonnelData:function(){var e=[],t=[],n=this.model;["master","leader","operator"].forEach(function(r){var i=n.get(r);i&&null===i.id&&i.label.trim().length>0&&(e.push(i.label),t.push(r))}),e.length>0&&this.fillUserInfo(e,t)},fillUserInfo:function(e,t){if(r.isSyncing())return this.broker.subscribe("production.synced",this.fillPersonnelData.bind(this)).setLimit(1);var n=new o(null,{rqlQuery:{fields:{firstName:1,lastName:1,personellId:1},selector:{name:e.length>1?"in":"eq",args:["personellId",e.length>1?e:e[0]]}}}),i=this.model;this.promised(n.fetch()).then(function(){var r=0;e.forEach(function(e,r){var o=n.findWhere({personellId:e});o&&i.set(t[r],{id:o.id,label:o.get("firstName")+" "+o.get("lastName")})}),r&&i.saveLocalData()})}})});