// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["jquery","app/user","app/i18n","app/viewport","app/updater/index","app/core/View","app/data/prodLog","app/prodShifts/ProdShift","../views/ProductionControlsView","../views/ProductionHeaderView","../views/ProductionDataView","../views/ProdDowntimeListView","../views/ProductionQuantitiesView","app/production/templates/productionPage"],function(i,e,t,o,s,n,d,r,h,l,c,u,a,m){return n.extend({template:m,layoutName:"blank",localTopics:{"socket.connected":function(){this.joinProduction(),this.refreshDowntimes(),this.refreshPlannedQuantities()},"socket.disconnected":function(){this.productionJoined=!1},"updater.frontendReloading":function(){this.model.saveLocalData()}},breadcrumbs:function(){return[t("production","breadcrumbs:productionPage"),this.model.getLabel()]},initialize:function(){this.layout=null,this.shiftEditedSub=null,this.joinProductionAfterSyncSub=null,this.productionJoined=!1,s.disableViews(),d.enable(),this.defineModels(),this.defineViews(),this.defineBindings(),this.onBeforeUnload=this.onBeforeUnload.bind(this),i(window).on("beforeunload",this.onBeforeUnload)},setUpLayout:function(i){this.layout=i},destroy:function(){this.layout=null,this.shiftEditedSub=null,this.joinProductionAfterSyncSub=null,i(window).off("beforeunload",this.onBeforeUnload),this.model.stopShiftChangeMonitor(),s.enableViews(),d.disable(),this.leaveProduction()},serialize:function(){return{locked:this.model.isLocked(),state:this.model.get("state"),mechOrder:!!this.model.prodShiftOrder.get("mechOrder")}},defineModels:function(){this.model.readLocalData()},defineViews:function(){this.controlsView=new h({model:this.model}),this.headerView=new l({model:this.model}),this.dataView=new c({model:this.model}),this.downtimesView=new u({model:this.model}),this.quantitiesView=new a({model:this.model}),this.setView(".production-controls-container",this.controlsView),this.setView(".production-header-container",this.headerView),this.setView(".production-data-container",this.dataView),this.setView(".production-downtimes-container",this.downtimesView),this.setView(".production-quantities-container",this.quantitiesView)},defineBindings:function(){this.listenTo(this.model,"locked",function(){this.$el.removeClass("is-unlocked").addClass("is-locked"),this.leaveProduction()}),this.listenTo(this.model,"unlocked",function(){this.$el.removeClass("is-locked").addClass("is-unlocked"),this.refreshDowntimes(),this.refreshPlannedQuantities(),this.joinProduction()}),this.listenTo(this.model,"change:state",function(){null!==this.layout&&this.layout.setBreadcrumbs(this.breadcrumbs,this);var i=this.model.previous("state");null!==i&&this.$el.removeClass("is-"+i),this.$el.addClass("is-"+this.model.get("state"))}),this.listenTo(this.model,"change:shift",function(){o.closeAllDialogs(),this.model.get("shift")&&o.msg.show({type:"info",time:2e3,text:t("production","msg:shiftChange")})}),this.listenTo(this.model,"change:_id",this.subscribeForShiftChanges),this.model.id&&this.subscribeForShiftChanges(),this.listenTo(this.model.prodShiftOrder,"change:mechOrder",function(){this.$el.toggleClass("is-mechOrder",this.model.prodShiftOrder.isMechOrder())}),this.listenTo(this.downtimesView,"corroborated",function(){this.model.saveLocalData()})},afterRender:function(){this.socket.isConnected()&&(this.joinProduction(),this.refreshDowntimes(),this.refreshPlannedQuantities())},refreshDowntimes:function(){if(d.isSyncing())return this.broker.subscribe("production.synced",this.delayDowntimesRefresh.bind(this)).setLimit(1);if(this.model.isLocked())return this.listenToOnce(this.model,"unlocked",this.delayDowntimesRefresh.bind(this));this.timers.refreshingDowntimes&&clearTimeout(this.timers.refreshingDowntimes);var i=this;this.timers.refreshingDowntimes=setTimeout(function(){if(delete i.timers.refreshingDowntimes,i.socket.isConnected()&&!i.model.isLocked()){var e=i.model.prodDowntimes.fetch({reset:!0});i.promised(e).done(function(){i.model.saveLocalData()})}},3e3)},delayDowntimesRefresh:function(){this.timers.refreshDowntimes&&clearTimeout(this.timers.refreshDowntimes),this.timers.refreshDowntimes=setTimeout(function(i){i.timers.refreshDowntimes=null,i.refreshDowntimes()},2500,this)},refreshPlannedQuantities:function(){if(this.model.isLocked())return this.listenToOnce(this.model,"unlocked",this.refreshPlannedQuantities.bind(this));var i=this;this.socket.emit("production.getPlannedQuantities",this.model.id,function(e,t){!e&&i.shiftEditedSub&&i.model.updatePlannedQuantities(t)})},onBeforeUnload:function(){return this.model.isLocked()||(d.disable(),this.model.isIdle()||s.isFrontendReloading())?void 0:(this.timers.enableProdLog=setTimeout(d.enable.bind(d),1e3),this.model.isDowntime()?t("production","unload:downtime"):t("production","unload:order"))},joinProduction:function(){if(!this.productionJoined&&!this.model.isLocked()&&this.socket.isConnected()){if(d.isSyncing())return void(null===this.joinProductionAfterSyncSub&&(this.joinProductionAfterSyncSub=this.broker.subscribe("production.synced").setLimit(1).on("message",this.joinProduction.bind(this))));var i=this.model.prodDowntimes.findFirstUnfinished();this.socket.emit("production.join",{prodLineId:this.model.prodLine.id,prodShiftId:this.model.id,prodShiftOrderId:this.model.prodShiftOrder.id||null,prodDowntimeId:i?i.id:null}),this.joinProductionAfterSyncSub=null,this.productionJoined=!0}},leaveProduction:function(){this.productionJoined&&(this.socket.isConnected()&&this.socket.emit("production.leave",this.model.prodLine.id),this.productionJoined=!1)},subscribeForShiftChanges:function(){if(this.shiftEditedSub&&this.shiftEditedSub.cancel(),this.model.id){var i=this.model;this.shiftEditedSub=this.pubsub.subscribe("production.edited.shift."+this.model.id).on("message",function(e){i.set(e)})}}})});