define(["underscore","jquery","app/user","app/core/views/FilterView","app/core/util/forms/dateTimeRange","app/core/util/forms/dropdownRadio","app/core/util/idAndLabel","app/users/util/setUpUserSelect2","app/wmes-osh-common/dictionaries","app/wmes-osh-common/views/OrgUnitPickerFilterView","app/wmes-osh-observations/templates/filter","app/core/util/ExpandableSelect"],function(e,t,i,s,a,r,o,n,l,p,d){"use strict";return s.extend({filterList:["createdAt","locationPath","observationKind","limit"],filterMap:{createdAt:"date",finishedAt:"date"},template:d,events:Object.assign({"click a[data-date-time-range]":a.handleRangeEvent,'change input[name="userType"]':function(){this.toggleUserSelect2(!0)},"click #-clearObs":"clearObsFilter"},s.prototype.events),defaultFormData:function(){return{userType:"others",dateFilter:"createdAt"}},termToForm:{createdAt:a.rqlToForm,finishedAt:a.rqlToForm,workplace:(e,t,i)=>{i[e]="in"===t.name?t.args[1].join(","):t.args[1]},department:"workplace",building:"workplace",location:"workplace",station:"workplace",observationKind:(e,t,i)=>{i[e]="in"===t.name?t.args[1]:[t.args[1]]},status:"kind","creator.id":(e,t,i)=>{i.userType=e.split(".")[0],i.user=t.args[1]},"coordinators.id":"creator.id","users.user.id":(e,t,i)=>{"mine"===t.args[1]?(i.userType="mine",i.user=null):"unseen"===t.args[1]?(i.userType="unseen",i.user=null):(i.userType="others",i.user=t.args[1])},"@observation":(e,t,i)=>{i.obsType=t.args[0],i.obsFilter=t.args[1]||"any",i.obsCategory=(t.args[2]||[]).join(",")}},initialize:function(){s.prototype.initialize.apply(this,arguments),this.setView("#-locationPath",new p({filterView:this,emptyLabel:this.t("PROPERTY:locationPath")}))},destroy:function(){s.prototype.destroy.call(this),this.$(".is-expandable").expandableSelect("destroy")},getTemplateData:function(){return{statuses:l.statuses.observation.map(e=>({value:e,label:l.getLabel("status",e)})),observationKinds:l.observationKinds.map(e=>({value:e.id,label:e.getLabel({long:!1})}))}},serializeFormToQuery:function(e,t){const i=this.$('input[name="dateFilter"]:checked').val();t.sort={},t.sort[i]=-1,a.formToRql(this,e),["status","observationKind"].forEach(t=>{const i=this.$id(t);let s=i.val();s&&s.length&&("string"==typeof s&&(s=s.split(",")),"SELECT"===i[0].tagName&&i[0].options.length===s.length||(1===(s=s.map(e=>/^[0-9]+$/.test(e)?parseInt(e,10):e)).length?e.push({name:"eq",args:[t,s[0]]}):e.push({name:"in",args:[t,s]})))});const s=this.$id("user").val();let r=this.$('input[name="userType"]').val();"mine"===r||"unseen"===r?e.push({name:"eq",args:["users.user.id",r]}):s&&("others"===r&&(r="users.user"),e.push({name:"eq",args:[r+".id",s]})),this.serializeObsFilter(e)},afterRender:function(){s.prototype.afterRender.call(this),this.$(".is-expandable").expandableSelect(),n(this.$id("user"),{view:this,width:"100%"}),this.setUpUserType(),this.toggleUserSelect2(),this.setUpActivityKindSelect2(),this.setUpObsFilter()},setUpUserType:function(){const e=["mine","unseen","others","creator","coordinators"].map(e=>({value:e,title:this.t(`filter:user:${e}:title`),optionLabel:this.t(`filter:user:${e}`)}));r(this.$id("userType"),{label:this.t("filter:user:others"),options:e})},toggleUserSelect2:function(e){const t=this.$('input[name="userType"]').val(),s="mine"===t||"unseen"===t,a=this.$id("user").select2("enable",!s);(s||e&&!a.val())&&a.select2("data",{id:i.data._id,text:i.getLabel()})},setUpActivityKindSelect2:function(){this.$id("activityKind").select2({width:"250px",multiple:!0,placeholder:" ",data:l.activityKinds.filter(e=>e.get("active")).map(e=>({id:e.id,text:e.getLabel({long:!0}),model:e})),formatSelection:({model:e},t,i)=>i(e.getLabel())})},setUpObsFilter:function(){r(this.$id("obsType"),{label:this.t("filter:obsType:any"),options:["any","behaviors","workConditions"].map(e=>({value:e,optionLabel:this.t(`filter:obsType:${e}`)}))}),r(this.$id("obsFilter"),{label:this.t("filter:obsFilter:any"),options:["any","safe","risky","easy","hard","todo"].map(e=>({value:e,optionLabel:this.t(`filter:obsFilter:${e}`)}))}),this.$id("obsCategory").select2({width:"350px",multiple:!0,placeholder:this.t("filter:obsCategory"),data:l.observationCategories.filter(e=>e.get("active")).map(e=>({id:e.id,text:e.getLabel({long:!0}),model:e})),formatSelection:({model:e},t,i)=>i(e.getLabel({long:!1}))})},serializeObsFilter:function(e){const t=this.$id("obsType").val();if(!t)return;const i=this.$id("obsFilter").val(),s=this.$id("obsCategory").val().split(",").map(e=>+e).filter(e=>e>0);if(s.length||"any"!==t||"any"!==i){const a=[t];("any"!==i||s.length)&&(a.push(i),s.length&&a.push(s)),e.push({name:"observation",args:a})}},clearObsFilter:function(){this.$id("obsType").val("any").trigger("change"),this.$id("obsFilter").val("any").trigger("change"),this.$id("obsCategory").select2("data",[])},filterHasValue:function(e){if("date"===e){const e=this.$id("from-date"),t=this.$id("to-date");return e.val().length>0||t.val().length>0}return s.prototype.filterHasValue.apply(this,arguments)},showFilter:function(e){if("creator"===e||"implementers"===e||"coordinators"===e)return this.$id("userType").val(e).trigger("change"),void this.$id("user").select2("focus");const t=this.$('.dateTimeRange-label-input[value="'+e+'"]');t.length&&(t.prop("checked",!0),a.toggleLabel(this)),s.prototype.showFilter.apply(this,arguments)}})});