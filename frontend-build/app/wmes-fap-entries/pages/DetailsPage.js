define(["jquery","app/socket","app/core/pages/DetailsPage","app/core/util/onModelDeleted","app/core/util/pageActions","../dictionaries","../views/DetailsView"],function(t,e,i,s,n,o,a){"use strict";return i.extend({DetailsView:a,remoteTopics:function(){var t={"fap.entries.deleted":"onDeleted"};return t["fap.entries.updated."+this.model.id]="onUpdated",t["fap.entries.presence."+this.model.id]="onPresence",t},localTopics:{"socket.connected":"join"},actions:function(){var t=[],e=this.model.serializeDetails().auth,i=this.model.get("status");return"finished"===i?e.restart&&t.push({type:"info",label:this.t("PAGE_ACTION:restart"),callback:this.start.bind(this)}):e.status&&("pending"===i&&t.push({type:"info",label:this.t("PAGE_ACTION:start"),callback:this.start.bind(this)}),t.push({type:"success",label:this.t("PAGE_ACTION:finish"),callback:this.finish.bind(this)})),e.delete&&t.push(n.delete(this.model,!1)),t},initialize:function(){i.prototype.initialize.apply(this,arguments),this.listenTo(this.model,"updateFailure",function(){this.model.fetch()}),this.listenToOnce(this.model,"sync",function(){this.listenTo(this.model,"sync",this.render)}),this.listenTo(this.model,"change:status",this.updateStatus)},setUpLayout:function(t){this.layout=t},destroy:function(){this.leave(),o.unload()},load:function(e){var i=this;if(o.loaded)return e(i.model.fetch());var s=t.Deferred();return o.load().then(function(){return i.model.fetch()}).done(function(){s.resolve()}).fail(function(){s.reject()}),e(s.promise())},afterRender:function(){i.prototype.afterRender.apply(this,arguments),o.load(),this.join()},join:function(){this.socket.emit("fap.entries.join",this.model.id)},leave:function(){this.socket.emit("fap.entries.leave",this.model.id)},finish:function(){""===this.model.get("solution").trim()?this.view.showEditor(this.$('.fap-is-editable[data-prop="solution"]'),"solution"):this.model.multiChange({status:"finished",finishedAt:new Date})},start:function(){this.model.multiChange({status:"started",startedAt:new Date,finishedAt:null})},updateStatus:function(){this.layout&&this.layout.setActions(this.actions,this)},onDeleted:function(t){s(this.broker,this.model,t)},onUpdated:function(t){var i=t.change;e.getId()!==t.socketId?this.model.handleChange(i):i.data.subscribers&&this.model.handleChange({date:i.date,user:i.user,data:{subscribers:i.data.subscribers},comment:""})},onPresence:function(t){this.model.handlePresence(t.userId,t.presence)}})});