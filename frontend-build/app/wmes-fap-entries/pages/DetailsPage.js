define(["underscore","jquery","app/socket","app/user","app/core/pages/DetailsPage","app/core/util/onModelDeleted","app/core/util/pageActions","../dictionaries","../views/DetailsView","i18n!app/nls/wmes-fap-entries"],function(e,t,i,n,s,o,r,a,c){"use strict";return s.extend({DetailsView:c,remoteTopicsAfterSync:!0,remoteTopics:function(){var e={"fap.entries.deleted":"onDeleted"};return e["fap.entries.updated."+this.model.id]="onUpdated",e["fap.entries.presence."+this.model.id]="onPresence",e},localTopics:{"socket.connected":"join","fap.entries.seen":function(t){var i=this.model.id;e.some(t.seenEntries,function(e){return e===i})&&this.model.handleChange({date:new Date,user:n.getInfo(),data:{},comment:""})}},actions:function(){var e=[],t=this.model.serializeDetails(),i=t.auth;return e.push({icon:"eye",label:this.t("PAGE_ACTION:markAsSeen"),callback:this.markAsSeen.bind(this),disabled:!t.observer.notify}),"viewer"!==t.observer.role&&(this.model.get("unsubscribed")[n.data._id]?e.push({icon:"bell-o",label:this.t("PAGE_ACTION:subscribe"),callback:this.subscribe.bind(this)}):e.push({icon:"bell-slash-o",label:this.t("PAGE_ACTION:unsubscribe"),callback:this.unsubscribe.bind(this)})),e.push({icon:"calendar",label:this.t("PAGE_ACTION:history"),href:this.model.genClientUrl("history")}),i.delete&&e.push(r.delete(this.model,!1)),e},initialize:function(){var i=this;s.prototype.initialize.apply(i,arguments);var n=i.model;i.listenTo(n,"updateFailure",function(){n.fetch()});var o=24!==n.id.length;i.listenToOnce(n,"sync",function(){i.listenTo(n,"sync",i.render),o&&i.broker.publish("router.navigate",{url:n.genClientUrl(),replace:!0,trigger:!1})}),i.listenTo(n,"change:observers change:unsubscribed",e.debounce(i.updateActions.bind(i),1)),i.listenTo(n,"change",i.scheduleMarkAsSeen.bind(i)),t(window).on("focus."+i.idPrefix,i.onFocus.bind(i))},setUpLayout:function(e){this.layout=e},destroy:function(){t(window).off("."+this.idPrefix),this.leave(),a.unload()},load:function(e){var i=this;if(a.loaded)return e(i.model.fetch());var n=t.Deferred();return a.load().then(function(){return i.model.fetch()}).done(function(){n.resolve()}).fail(function(){n.reject()}),e(n.promise())},afterRender:function(){s.prototype.afterRender.apply(this,arguments),a.load(),this.join()},join:function(){this.socket.emit("fap.entries.join",this.model.id)},leave:function(){this.socket.emit("fap.entries.leave",this.model.id)},subscribe:function(){this.model.change("unsubscribed",!1,!0)},unsubscribe:function(){this.model.change("unsubscribed",!0,!1)},markAsSeen:function(){this.model.serializeDetails().observer.notify&&this.model.multiChange({})},scheduleMarkAsSeen:function(){var e=this;e.timers&&(clearTimeout(e.timers.markAsSeen),e.timers.markAsSeen=setTimeout(function(){document.hasFocus()&&e.markAsSeen()},1e4))},updateActions:function(){this.layout&&this.layout.setActions(this.actions,this)},onDeleted:function(e){o(this.broker,this.model,e)},onUpdated:function(t){var n=t.change;if(i.getId()===t.socketId){var s={};if(Object.keys(n.data).forEach(function(e){/^subscribers/.test(e)&&(s[e]=n.data[e])}),e.isEmpty(s))return;n.data=s,n.comment=""}this.model.handleChange(n,t.notify)},onPresence:function(e){this.model.handlePresence(e.userId,e.presence)},onFocus:function(){this.scheduleMarkAsSeen()}})});