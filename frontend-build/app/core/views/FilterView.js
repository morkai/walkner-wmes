define(["underscore","jquery","js2form","h5.rql/specialTerms","app/i18n","app/core/View","app/core/util","app/core/util/buttonGroup","app/core/templates/filterLimit","app/core/templates/filterButton","select2"],function(t,e,i,r,l,a,s,n,o,u){"use strict";return a.extend({minLimit:5,maxLimit:100,termToForm:{},defaultFormData:{},formData:null,filterList:[],filterMap:{},events:{submit:function(){return this.changeFilter(),!1},"click .filter-toggle":"toggleExpand","click a[data-filter]":function(t){t.preventDefault(),this.showFilter(t.currentTarget.dataset.filter)}},collapsed:!1,serialize:function(){var e=this;return t.assign(a.prototype.serialize.apply(e,arguments),{renderLimit:function(i){return e.renderPartialHtml(o,t.assign({min:e.minLimit,max:e.maxLimit,hidden:!1},i))},renderButton:function(i){return e.renderPartialHtml(u,t.assign({filters:e.filterList},i))}})},toggleButtonGroup:function(t){return n.toggle(this.$id(t))},getButtonGroupValue:function(t){return n.getValue(this.$id(t))},afterRender:function(){this.formData=this.serializeQueryToForm(),i(this.el,this.formData),this.filterList.length&&this.$id("limit").parent().attr("data-filter","limit"),this.$toggleFilter=e('<button class="btn btn-default btn-block filter-toggle" type="button"></button>').append('<i class="fa"></i>').append("<span></span>"),this.$el.append(this.$toggleFilter),this.toggleExpand(),this.toggleFilters()},toggleExpand:function(){window.innerWidth<768&&(this.collapsed=!this.collapsed,this.$el.toggleClass("is-collapsed",this.collapsed).toggleClass("is-expanded",!this.collapsed)),this.$toggleFilter.find("span").text(l("core","filter:"+(this.collapsed?"show":"hide"))),this.$toggleFilter.find(".fa").removeClass("fa-caret-up fa-caret-down").addClass("fa-caret-"+(this.collapsed?"down":"up"))},toggleFilters:function(){var t=this;t.filterList.forEach(function(e){t.$('.form-group[data-filter="'+e+'"]').toggleClass("hidden",!t.filterHasValue(e))})},filterHasValue:function(e){var i,r=this.$id(e);return i=r.hasClass("btn-group")?r.find("input:checked").val():r.find(".orgUnits-picker").length?1===r.find(".btn.active").length:r.val(),"limit"===e?+i!==t.result(this.model,"getDefaultPageLimit",20):!!i&&(!!i.length||!!i)},showFilter:function(t){this.$('.form-group[data-filter="'+(this.filterMap[t]||t)+'"]').removeClass("hidden").find("input, select").first().focus()},serializeQueryToForm:function(){var e=this.model.rqlQuery,i=t.assign({},t.result(this,"defaultFormData"),{limit:e.limit<5?5:e.limit>100?100:e.limit});return e.selector.args.forEach(function(t){r[t.name]||this.serializeTermToForm(t,i)},this),i},serializeTermToForm:function(t,e){if(t&&Array.isArray(t.args)){var i="string"==typeof t.args[0]?t.args[0]:null,r=this.termToForm[i];r&&("string"==typeof r&&(r=this.termToForm[r]),"function"==typeof r&&r.call(this,i,t,e))}},isValid:function(){return!0},changeFilter:function(){if(this.isValid()){var t=this.model.rqlQuery,e=[],i=this.$id("limit");this.copyPopulateTerms(e),this.serializeFormToQuery(e,t),this.trigger("filtering",e,t),t.selector={name:"and",args:e},t.skip=0,i.length&&(t.limit=Math.min(Math.max(parseInt(this.$id("limit").val(),10)||15,this.minLimit),this.maxLimit)),this.trigger("filterChanged",t),this.toggleFilters()}},copyPopulateTerms:function(t){this.model.rqlQuery.selector.args.forEach(function(e){"populate"===e.name&&t.push(e)})},serializeFormToQuery:function(t,e){},serializeRegexTerm:function(t,e,i,r,l,a){var s=this.$id(e.replace(/\./g,"-")),n=s.val().trim();"-"!==n&&null!==r&&(n=n.replace(void 0===r?/[^0-9]+/g:r,"")),s.val(n),"-"===n&&(n=null);var o=[e,n];null===n||!l&&n.length===i?t.push({name:"eq",args:o}):0!==n.length&&(l&&o.push("i"),o[1]=this.escapeRegExp(o[1]),n.length===i?o[1]="^"+o[1]+"$":a&&(o[1]="^"+o[1]),t.push({name:"regex",args:o}))},escapeRegExp:function(t){return s.escapeRegExp(t)},unescapeRegExp:function(t){return s.unescapeRegExp(t,!0)}})});