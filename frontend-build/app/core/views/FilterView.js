// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["underscore","js2form","h5.rql/specialTerms","app/core/View","app/core/templates/filterLimit","select2"],function(e,i,t,r,n){return r.extend({minLimit:5,maxLimit:100,termToForm:{},defaultFormData:{},formData:null,events:{submit:function(){return this.changeFilter(),!1}},destroy:function(){this.$('.select2-offscreen[tabindex="-1"]').select2("destroy")},serialize:function(){var e=this;return{idPrefix:this.idPrefix,renderLimit:function(){return n({idPrefix:e.idPrefix,min:e.minLimit,max:e.maxLimit})}}},toggleButtonGroup:function(e){this.$id(e).find("input:checked").parent().addClass("active")},getButtonGroupValue:function(e){var i=this.$id(e).find("input");return"radio"===i[0].type||1===i.length?i.filter(":checked").val():i.filter(":checked").map(function(){return this.value})},afterRender:function(){this.formData=this.serializeQueryToForm(),i(this.el,this.formData)},serializeQueryToForm:function(){var i=this.model.rqlQuery,r=e.extend({},e.result(this,"defaultFormData"),{limit:i.limit<5?5:i.limit>100?100:i.limit});return i.selector.args.forEach(function(e){t[e.name]||this.serializeTermToForm(e,r)},this),r},serializeTermToForm:function(e,i){var t="string"==typeof e.args[0]?e.args[0]:null,r=this.termToForm[t];r&&("string"==typeof r&&(r=this.termToForm[r]),"function"==typeof r&&r.call(this,t,e,i))},changeFilter:function(){var e=this.model.rqlQuery,i=[];this.copyPopulateTerms(i),this.serializeFormToQuery(i,e),e.selector={name:"and",args:i},e.skip=0,e.limit=Math.min(Math.max(parseInt(this.$id("limit").val(),10)||15,this.minLimit),this.maxLimit),this.trigger("filterChanged",e)},copyPopulateTerms:function(e){this.model.rqlQuery.selector.args.forEach(function(i){"populate"===i.name&&e.push(i)})},serializeFormToQuery:function(){},serializeRegexTerm:function(e,i,t,r){var n=this.$id(i.replace(/\./g,"-")),a=n.val().trim();"-"!==a&&null!==r&&(a=a.replace(void 0===r?/[^0-9]/g:r,"")),n.val(a),"-"===a&&(a=null),null===a||a.length===t?e.push({name:"eq",args:[i,a]}):a.length>0&&e.push({name:"regex",args:[i,a]})}})});