// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["underscore","js2form","h5.rql/specialTerms","app/core/View","app/core/util/buttonGroup","app/core/templates/filterLimit","select2"],function(e,t,i,r,n,o){return r.extend({minLimit:5,maxLimit:100,termToForm:{},defaultFormData:{},formData:null,events:{submit:function(){return this.changeFilter(),!1}},destroy:function(){this.$('.select2-offscreen[tabindex="-1"]').select2("destroy")},serialize:function(){var e=this;return{idPrefix:this.idPrefix,renderLimit:function(){return o({idPrefix:e.idPrefix,min:e.minLimit,max:e.maxLimit})}}},toggleButtonGroup:function(e){return n.toggle(this.$id(e))},getButtonGroupValue:function(e){return n.getValue(this.$id(e))},afterRender:function(){this.formData=this.serializeQueryToForm(),t(this.el,this.formData)},serializeQueryToForm:function(){var t=this.model.rqlQuery,r=e.extend({},e.result(this,"defaultFormData"),{limit:t.limit<5?5:t.limit>100?100:t.limit});return t.selector.args.forEach(function(e){i[e.name]||this.serializeTermToForm(e,r)},this),r},serializeTermToForm:function(e,t){var i="string"==typeof e.args[0]?e.args[0]:null,r=this.termToForm[i];r&&("string"==typeof r&&(r=this.termToForm[r]),"function"==typeof r&&r.call(this,i,e,t))},changeFilter:function(){var e=this.model.rqlQuery,t=[];this.copyPopulateTerms(t),this.serializeFormToQuery(t,e),e.selector={name:"and",args:t},e.skip=0,e.limit=Math.min(Math.max(parseInt(this.$id("limit").val(),10)||15,this.minLimit),this.maxLimit),this.trigger("filterChanged",e)},copyPopulateTerms:function(e){this.model.rqlQuery.selector.args.forEach(function(t){"populate"===t.name&&e.push(t)})},serializeFormToQuery:function(){},serializeRegexTerm:function(e,t,i,r){var n=this.$id(t.replace(/\./g,"-")),o=n.val().trim();"-"!==o&&null!==r&&(o=o.replace(void 0===r?/[^0-9]/g:r,"")),n.val(o),"-"===o&&(o=null),null===o||o.length===i?e.push({name:"eq",args:[t,o]}):o.length>0&&e.push({name:"regex",args:[t,o]})}})});