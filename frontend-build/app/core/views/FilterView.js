// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["underscore","jquery","js2form","h5.rql/specialTerms","app/i18n","app/core/View","app/core/util/buttonGroup","app/core/templates/filterLimit","select2"],function(t,e,i,r,l,a,o,s){"use strict";return a.extend({minLimit:5,maxLimit:100,termToForm:{},defaultFormData:{},formData:null,events:{submit:function(){return this.changeFilter(),!1},"click .filter-toggle":"toggle"},collapsed:!1,serialize:function(){var t=this;return{idPrefix:this.idPrefix,renderLimit:function(){return s({idPrefix:t.idPrefix,min:t.minLimit,max:t.maxLimit})}}},toggleButtonGroup:function(t){return o.toggle(this.$id(t))},getButtonGroupValue:function(t){return o.getValue(this.$id(t))},afterRender:function(){this.formData=this.serializeQueryToForm(),i(this.el,this.formData),this.$toggleFilter=e('<button class="btn btn-default btn-block filter-toggle" type="button"></button>').append('<i class="fa"></i>').append("<span></span>"),this.$el.append(this.$toggleFilter),this.toggle()},toggle:function(){window.innerWidth<768&&(this.collapsed=!this.collapsed,this.$el.toggleClass("is-collapsed",this.collapsed)),this.$toggleFilter.find("span").text(l("core","filter:"+(this.collapsed?"show":"hide"))),this.$toggleFilter.find(".fa").removeClass("fa-caret-up fa-caret-down").addClass("fa-caret-"+(this.collapsed?"down":"up"))},serializeQueryToForm:function(){var e=this.model.rqlQuery,i=t.extend({},t.result(this,"defaultFormData"),{limit:e.limit<5?5:e.limit>100?100:e.limit});return e.selector.args.forEach(function(t){r[t.name]||this.serializeTermToForm(t,i)},this),i},serializeTermToForm:function(t,e){var i="string"==typeof t.args[0]?t.args[0]:null,r=this.termToForm[i];r&&("string"==typeof r&&(r=this.termToForm[r]),"function"==typeof r&&r.call(this,i,t,e))},changeFilter:function(){var t=this.model.rqlQuery,e=[];this.copyPopulateTerms(e),this.serializeFormToQuery(e,t),t.selector={name:"and",args:e},t.skip=0,t.limit=Math.min(Math.max(parseInt(this.$id("limit").val(),10)||15,this.minLimit),this.maxLimit),this.trigger("filterChanged",t)},copyPopulateTerms:function(t){this.model.rqlQuery.selector.args.forEach(function(e){"populate"===e.name&&t.push(e)})},serializeFormToQuery:function(){},serializeRegexTerm:function(t,e,i,r,l){var a=this.$id(e.replace(/\./g,"-")),o=a.val().trim();"-"!==o&&null!==r&&(o=o.replace(void 0===r?/[^0-9]/g:r,"")),a.val(o),"-"===o&&(o=null);var s=[e,o];return null===o||!l&&o.length===i?void t.push({name:"eq",args:s}):void(0!==o.length&&(l&&s.push("i"),s[1]=s[1].replace(/[-[\]{}()*+!<=:?.\/\\^$|#\s,]/g,"\\$&"),o.length===i&&(s[1]="^"+s[1]+"$"),t.push({name:"regex",args:s})))}})});