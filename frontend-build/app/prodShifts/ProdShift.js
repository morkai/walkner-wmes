define(["underscore","../user","../time","../socket","../core/Model","../data/workCenters","../data/prodLines","../data/prodLog","../prodDowntimes/ProdDowntime","../prodDowntimes/ProdDowntimeCollection","../production/ProdShiftOrder"],function(e,t,n,r,i,o,a,s,l,u,d){return i.extend({urlRoot:"/prodShifts",clientUrlRoot:"#prodShifts",topicPrefix:"prodShifts",privilegePrefix:"PROD_DATA",nlsDomain:"prodShifts",defaults:{division:null,subdivision:null,mrpControllers:null,prodFlow:null,workCenter:null,prodLine:null,date:null,shift:null,state:null,quantitiesDone:null,creator:null,createdAt:null,master:null,leader:null,operator:null},initialize:function(e,t){t&&t.production&&(this.prodLine=a.get(this.get("prodLine")),this.prodShiftOrder=new d,this.prodDowntimes=new u(null,{paginate:!1,rqlQuery:"sort(-startedAt)&limit(8)&prodLine="+encodeURIComponent(this.prodLine.id)}))},sync:function(e){if("read"===e)return i.prototype.sync.apply(this,arguments);throw new Error("Method not supported: "+e)},startShiftChangeMonitor:function(){function e(e){e.changeShift(),e.startShiftChangeMonitor()}this.shiftChangeTimer=setTimeout(e,this.getTimeToNextShift(),this)},stopShiftChangeMonitor:function(){null!=this.shiftChangeTimer&&(clearTimeout(this.shiftChangeTimer),delete this.shiftChangeTimer)},readLocalData:function(){if(!this.isLocked()){var t=null;try{t=JSON.parse(localStorage.getItem(this.getDataStorageKey())),t.date&&(t.date=new Date(t.date)),this.prodShiftOrder.clear(),t.prodShiftOrder&&this.prodShiftOrder.set(t.prodShiftOrder),this.prodDowntimes.reset(t.prodDowntimes||[]),delete t.prodShiftOrder,delete t.prodDowntimes}catch(n){}e.isEmpty(t)?this.resetShift():(this.set(t),(this.get("date").getTime()!==this.getCurrentShiftMoment().valueOf()||this.get("shift")!==this.getCurrentShift())&&this.resetShift())}},saveLocalData:function(){if(!this.isLocked()){var e=this.toJSON();delete e.division,delete e.subdivision,delete e.mrpControllers,delete e.prodFlow,delete e.workCenter,delete e.prodLine,e.prodShiftOrder=this.prodShiftOrder.toJSON(),e.prodDowntimes=this.prodDowntimes.toJSON(),localStorage.setItem(this.getDataStorageKey(),JSON.stringify(e))}},resetShift:function(){this.set("state","idle"),this.changeShift()},changeShift:function(){var e=this.getCurrentShiftMoment().toDate(),r=this.get("date");if(!r||e.getTime()!==r.getTime()){var i=this.id||null;this.finishDowntime(),this.finishOrder(),this.prodShiftOrder.onShiftChanged(),this.set({date:e,shift:this.getCurrentShift(),state:"idle",quantitiesDone:[{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0},{planned:0,actual:0}],creator:t.getInfo(),createdAt:n.getMoment().toDate(),master:null,leader:null,operator:null}),this.set("_id",s.generateId(this.get("createdAt"),this.prodLine.id)),s.record(this,"changeShift",{finishedProdShiftId:i,startedProdShift:this.toJSON()})}},changeMaster:function(e){this.set("master",e),s.record(this,"changeMaster",e)},changeLeader:function(e){this.set("leader",e),s.record(this,"changeLeader",e)},changeOperator:function(e){this.set("operator",e),s.record(this,"changeOperator",e)},changeCurrentQuantitiesDone:function(e){this.changeQuantitiesDone(this.getCurrentQuantityDoneHourIndex(),e)},changeQuantitiesDone:function(e,t){var n=this.get("quantitiesDone");if(!n[e])throw new Error("Invalid hour: "+e);n[e].actual!==t&&(n[e].actual=t,this.trigger("change:quantitiesDone",this,{}),s.record(this,"changeQuantitiesDone",{hour:e,newValue:t}))},changeOrder:function(e,t){this.finishOrder(),this.set("state","working"),this.prodShiftOrder.onOrderChanged(this,e,t),s.record(this,"changeOrder",this.prodShiftOrder.toJSON())},continueOrder:function(){if(this.hasOrder())throw new Error("Cannot continue the order: an order is already started!");if(!this.prodShiftOrder.hasOrderData())throw new Error("Cannot continue the order: no order data!");this.set("state","working"),this.prodShiftOrder.onOrderContinued(this),s.record(this,"changeOrder",this.prodShiftOrder.toJSON())},changeQuantityDone:function(e){if(!this.hasOrder())throw new Error("Cannot change the quantity done: no prod shift order!");this.prodShiftOrder.set("quantityDone",e),s.record(this,"changeQuantityDone",{newValue:e})},changeWorkerCount:function(e){if(!this.hasOrder())throw new Error("Cannot change the worker count: no prod shift order!");this.prodShiftOrder.set("workerCount",e),s.record(this,"changeWorkerCount",{newValue:e})},endDowntime:function(){this.hasOrder()?this.set("state","working"):this.set("state","idle"),this.finishDowntime()||this.saveLocalData()},endWork:function(){this.finishDowntime(),this.finishOrder(),this.set("state","idle"),this.prodShiftOrder.onWorkEnded(),s.record(this,"endWork",{})},startDowntime:function(e){var t=this.prodDowntimes.addFromInfo(this,e);this.set("state","downtime"),s.record(this,"startDowntime",t.toJSON())},finishOrder:function(){var e=this.prodShiftOrder.finish();e&&s.record(this,"finishOrder",e)},finishDowntime:function(){var e=this.prodDowntimes.finish();return e&&s.record(this,"finishDowntime",e),!!e},hasOrder:function(){return!!this.prodShiftOrder.id},getLabel:function(){var t=this.prodLine.get("description");return e.isString(t)&&t.length?t:this.prodLine.id},getCurrentTime:function(){return n.getMoment().format("YYYY-MM-DD HH:mm:ss")},getCurrentShift:function(){var e=n.getMoment().hour();return e>=6&&14>e?1:e>=14&&22>e?2:3},getCurrentShiftMoment:function(){var e=n.getMoment(),t=e.hour();return t>=6&&14>t?e.hours(6):t>=14&&22>t?e.hours(14):(e.hours(22),6>t&&e.subtract("days",1)),e.minutes(0).seconds(0).milliseconds(0)},getTimeToNextShift:function(){return this.getCurrentShiftMoment().add("hours",8).diff(n.getMoment())},getCurrentQuantityDoneHourIndex:function(){var e=n.getMoment().hours();return e>=6&&14>e?e-6:e>=14&&22>e?e-14:22===e?0:23===e?1:e+2},getCurrentQuantityDoneHourRange:function(){var e=n.getMoment().minutes(0).seconds(0),t=e.format("HH:mm:ss"),r=e.minutes(59).seconds(59).format("HH:mm:ss");return t+"-"+r},getQuantityDoneInCurrentHour:function(){var e=this.get("quantitiesDone");if(!Array.isArray(e))return 0;var t=this.getCurrentQuantityDoneHourIndex();return t>=e.length?0:e[t].actual},isIdle:function(){return"idle"===this.get("state")},isDowntime:function(){return"downtime"===this.get("state")},isWorking:function(){return"working"===this.get("state")},isLocked:function(){return null===this.getSecretKey()},getSecretKey:function(){var e=localStorage.getItem(this.getSecretKeyStorageKey());return"string"==typeof e?e:null},setSecretKey:function(e){null===e?(localStorage.removeItem(this.getSecretKeyStorageKey()),localStorage.removeItem(this.getDataStorageKey()),this.prodShiftOrder.clear(),this.prodDowntimes.reset(),this.clear(),this.trigger("locked")):(localStorage.setItem(this.getSecretKeyStorageKey(),e),this.trigger("unlocked"),this.readLocalData())},getSecretKeyStorageKey:function(){return"PRODUCTION:SECRET_KEY:"+this.prodLine.id},getDataStorageKey:function(){return"PRODUCTION:DATA:"+this.prodLine.id}},{STATE:{IDLE:"idle",WORKING:"working",DOWNTIME:"downtime"}})});