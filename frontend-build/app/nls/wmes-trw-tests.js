define(["app/nls/locale/en"],function(t){var r={lc:{pl:function(r){return t(r)},en:function(r){return t(r)}},c:function(t,r){if(!t)throw new Error("MessageFormat: Data required for '"+r+"'.")},n:function(t,r,n){if(isNaN(t[r]))throw new Error("MessageFormat: '"+r+"' isn't a number.");return t[r]-(n||0)},v:function(t,n){return r.c(t,n),t[n]},p:function(t,n,e,o,i){return r.c(t,n),t[n]in i?i[t[n]]:(n=r.lc[o](t[n]-e))in i?i[n]:i.other},s:function(t,n,e){return r.c(t,n),t[n]in e?e[t[n]]:e.other}};return{root:{"BREADCRUMBS:base":function(t){return"TRW"},"BREADCRUMBS:browse":function(t){return"Results"},"testing:noWorkstation":function(t){return"choose workstation"},"testing:noOrder":function(t){return"choose order"},"testing:noTester":function(t){return"choose tester"},"testing:noProgram":function(t){return"choose program"},"testing:menu:workstation":function(t){return"Change workstation"},"testing:menu:tester":function(t){return"Change tester"},"testing:error:setIo":function(t){return"Failed to set outputs: "+r.v(t,"error")},"testing:error:getIo":function(t){return"Failed to get inputs: "+r.v(t,"error")},"testing:error:save":function(t){return"Failed to save results: "+r.v(t,"error")},"workstationPicker:title":function(t){return"Workstation configuration"},"workstationPicker:workstation":function(t){return"Workstation number"},"workstationPicker:line":function(t){return"Production line"},"workstationPicker:submit":function(t){return"Save workstation"},"workstationPicker:cancel":function(t){return"Cancel"},"orderPicker:title":function(t){return"Choosing order"},"orderPicker:order":function(t){return"Order number"},"orderPicker:done":function(t){return"Started orders"},"orderPicker:todo":function(t){return"Planned orders"},"orderPicker:submit":function(t){return"Set order"},"orderPicker:cancel":function(t){return"Cancel"},"programPicker:title":function(t){return"Choosing program"},"programPicker:filter":function(t){return"Filter program list"},"programPicker:programs":function(t){return"Program list"},"programPicker:submit":function(t){return"Set program"},"programPicker:cancel":function(t){return"Cancel"},"testerPicker:title":function(t){return"Choosing tester"},"testerPicker:filter":function(t){return"Filter tester list"},"testerPicker:testers":function(t){return"Tester list"},"testerPicker:submit":function(t){return"Set tester"},"testerPicker:cancel":function(t){return"Cancel"},"state:unknown":function(t){return"?"},"state:not-ready":function(t){return"<i class='fa fa-spinner fa-spin'></i>"},"state:no-connection":function(t){return"No connection to the device!"},"state:no-tester":function(t){return"Choose tester."},"state:no-program":function(t){return"Choose program."},"state:no-line":function(t){return"Choose workstation."},"state:no-order":function(t){return"Choose order."},"state:test-teardown":function(t){return"Disconnect the tested product."},"state:test-saving":function(t){return"Saving the results <i class='fa fa-spinner fa-spin'></i>"},"state:test-success":function(t){return"Test finished successfully <i class='fa fa-smile-o'></i>"},"state:step:prefix":function(t){return"Step "+r.v(t,"n")+": "}},pl:!0}});