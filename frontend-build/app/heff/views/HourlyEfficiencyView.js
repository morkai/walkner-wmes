define(["app/time","app/core/View","app/planning/util/shift","./QuantitiesDoneChartView","app/heff/templates/hourlyEfficiency"],function(t,e,i,a,n){"use strict";return e.extend({swapDelay:2e4,template:n,initialize:function(){this.setView("#-chart",new a({model:this.model.prodShift})),this.listenTo(this.model.prodShift,"reset change:quantitiesDone",this.onQuantitiesDoneChanged)},getTitle:function(t,e){return this.t("hourly:title",{from:t.moment.format("H:00"),to:e.clone().add(1,"hours").format("H:00")})},activate:function(){this.updateData()},deactivate:function(){},periodicUpdate:function(){},updateData:function(){var e=this.model.prodShift.get("quantitiesDone");if(Array.isArray(e)&&8===e.length){for(var a=t.getMoment(),n=a.hours(),o=i.HOUR_TO_INDEX_SHIFT[n],s=a.minutes(),r=0,h=0,f=0,d=0,u=0;u<8;++u){var l=e[u].planned;f+=l,d+=e[u].actual,u<o?(r+=l,h+=l):u===o&&(h+=l,r+=Math.round(l*(s/60)*1e3)/1e3)}this.$id("planned").text(h),this.$id("actual").text(d),this.$id("remaining").text(Math.max(f-d,0)),this.$id("icon").removeClass("fa-smile-o fa-frown-o fa-meh-o").addClass(d>=r?"fa-smile-o":"fa-frown-o")}},onQuantitiesDoneChanged:function(){this.updateData()}})});