define(["app/time","app/core/View","app/data/downtimeReasons","app/prodShiftOrders/ProdShiftOrder","./ExecutionTimelineView","app/heff/templates/shiftEfficiency"],function(t,e,i,a,d,s){"use strict";return e.extend({swapDelay:2e4,template:s,initialize:function(){this.debug=!1,this.currentMetrics="tt",this.todoView=new d({mode:"todo",model:{todo:this.model.planShiftOrders,done:this.model.prodShiftOrders}}),this.doneView=new d({mode:"done",model:{todo:this.model.planShiftOrders,done:this.model.prodShiftOrders}}),this.listenTo(this.model.prodShiftOrders,"reset add change",this.updateData),this.setView("#-todo",this.todoView),this.setView("#-done",this.doneView)},getTitle:function(){return this.t("shift:title")},activate:function(){this.swapMetrics(),this.updateData()},deactivate:function(){this.currentMetrics="tt",clearTimeout(this.timers.swapMetrics)},updateData:function(){this.updatePlanned(),this.updateActual(),this.updateLineEff()},periodicUpdate:function(){this.updateActual()},updatePlanned:function(){var e="?",i=this.model.prodShiftOrders.last();i&&(i.get("sapTaktTime")&&(e=t.toString(i.get("sapTaktTime"),!0,!1).replace(/^00:/,"")));this.$id("plannedTt").text(e)},updateActual:function(){var e="?",a="?",d="fa-meh-o",s=this.model.prodShiftOrders.last();if(s){var n=Date.now(),r=s.get("workDuration"),o=s.get("quantityDone")||1;if(this.debug&&console.log({workDuration:r,quantityDone:o,now:new Date(n)}),r>0)r*=36e5;else{var h=Date.parse(s.get("startedAt")),f=Date.parse(s.get("finishedAt"))||n;r=f-h,this.model.prodDowntimes.forEach(function(t){if(t.get("prodShiftOrder")===s.id){var e=i.get(t.get("reason"));if(!e||"break"===e.get("type")){var a=Date.parse(t.get("startedAt")),d=t.get("finishedAt")?Date.parse(t.get("finishedAt")):n;r-=d-a}}}),this.debug&&console.log({workDuration:r,startedAt:new Date(h),finishedAt:new Date(f),prodDowntimes:this.model.prodDowntimes})}var l=s.get("sapTaktTime"),p=r/o/1e3;if(e=t.toString(p,!0,!1).replace(/^00:/,""),p<=l?d="fa-smile-o":p>l&&(d="fa-frown-o"),this.debug&&console.log({plannedTt:l,actualTt:p}),s.get("quantityDone")){var u=s.getEfficiency({workDuration:r/36e5});this.debug&&console.log({orderEff:u,quantityDone:s.get("quantityDone"),workDuration:r}),u&&(a=Math.min(999,Math.round(100*u))+"%")}}this.$id("actualTt").text(e),this.$id("orderEff").text(a),this.debug&&console.log({actualTtText:e,orderEffText:a}),this.$id("icon").hasClass(d)||this.$id("icon").removeClass("fa-meh-o fa-smile-o fa-frown-o").addClass(d)},updateLineEff:function(){var t=this,e=Date.now(),i=0,d=0;t.model.prodShiftOrders.forEach(function(s){var n=s.get("workDuration"),r=a.getTaktTimeCoeff(s.attributes);n||s.get("finishedAt")||(n=e-Date.parse(s.get("startedAt")),t.model.prodDowntimes.forEach(function(t){t.get("prodShiftOrder")===s.id&&"A"===t.get("reason")&&(n-=(Date.parse(t.get("finishedAt"))||e)-Date.parse(t.get("startedAt")))}),n/=36e5),i+=s.get("laborTime")*r/100*s.get("quantityDone"),d+=n*s.get("workerCount")});var s=Math.min(999,Math.round(i/d*100));t.$id("lineEff").text(s>0?s+"%":"?")},swapMetrics:function(){"tt"===this.currentMetrics?(this.currentMetrics="eff",this.updateLineEff(),this.$id("plannedTt").parent().addClass("hidden"),this.$id("actualTt").parent().addClass("hidden"),this.$id("lineEff").parent().removeClass("hidden"),this.$id("orderEff").parent().removeClass("hidden")):(this.currentMetrics="tt",this.$id("lineEff").parent().addClass("hidden"),this.$id("orderEff").parent().addClass("hidden"),this.$id("plannedTt").parent().removeClass("hidden"),this.$id("actualTt").parent().removeClass("hidden"))}})});