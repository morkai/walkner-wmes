// Part of <http://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../i18n","../time","../core/Model","../data/colorFactory","app/kaizenOrders/dictionaries"],function(e,r,t,o,s,n){"use strict";var i="#f0ad4e",a="#5cb85c",u=["total","status","section","category","productFamily"];return o.extend({urlRoot:"/suggestions/reports/count",defaults:function(){return{from:0,to:0,interval:"month"}},initialize:function(){},fetch:function(r){return e.isObject(r)||(r={}),r.data=e.extend(r.data||{},{from:this.get("from"),to:this.get("to"),interval:this.get("interval")}),o.prototype.fetch.call(this,r)},genClientUrl:function(){return"/suggestionCountReport?from="+this.get("from")+"&to="+this.get("to")+"&interval="+this.get("interval")},parse:function(r){var t=this,o=r.totals,s=o.count,n={total:{rows:this.prepareTotalRows(o),series:this.prepareTotalSeries()},status:{rows:this.prepareRows(s,o.status,"status"),series:{}},owner:{categories:this.prepareUserCategories(r.users,o.owner),series:this.prepareOwnerSeries(o.owner,r.groups)},confirmer:{categories:this.prepareUserCategories(r.users,o.confirmer),series:this.prepareConfirmerSeries(o.confirmer,r.groups)}};return e.forEach(u,function(e){n[e]||(n[e]={rows:t.prepareRows(s,o[e],e),series:{}})}),e.forEach(r.groups,function(r){var o;"number"==typeof r?(o=r,r={key:o,type:{}}):o=r.key;var s=n.total.series;s.suggestion.data.push({x:o,y:r.type.suggestion||null}),s.kaizen.data.push({x:o,y:r.type.kaizen||null}),e.forEach(u,function(e){t.createSeriesFromRows(e,n,r)})},this),n},prepareTotalRows:function(e){return[{id:"suggestion",abs:e.type.suggestion,rel:1,color:i},{id:"kaizen",abs:e.type.kaizen,rel:e.type.kaizen/e.type.suggestion,color:a}]},prepareTotalSeries:function(){return{suggestion:{data:[],color:i},kaizen:{data:[],color:a}}},prepareRows:function(e,r,t){var o=n.forProperty(t);return r.map(function(r){return{id:r[0],abs:r[1],rel:r[1]/e,color:s.getColor(t,r[0]),label:o?n.getLabel(o,r[0]):void 0}})},createSeriesFromRows:function(r,t,o){var s=t[r].series;e.forEach(t[r].rows,function(e){s[e.id]||(s[e.id]={name:e.label,data:[],color:e.color}),s[e.id].data.push({x:o.key,y:o[r]?o[r][e.id]||null:null})})},prepareUserCategories:function(e,r){return r.map(function(r){var t=r[0];return e[t]||t})},prepareOwnerSeries:function(t){var o=[{id:"suggestion",name:r.bound("suggestions","report:series:suggestion"),data:[],color:i},{id:"kaizen",name:r.bound("suggestions","report:series:kaizen"),data:[],color:a}];return e.forEach(t,function(e){o[0].data.push(e[3]),o[1].data.push(e[4])}),o},prepareConfirmerSeries:function(t){return[{id:"entry",type:"bar",name:r.bound("suggestions","report:series:entry"),data:e.map(t,function(e){return e[1]})}]}},{TABLE_AND_CHART_METRICS:u})});