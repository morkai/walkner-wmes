define(["underscore","jquery","app/i18n","app/time","app/user","app/viewport","app/data/localStorage","app/core/View","app/core/util/getShiftStartInfo","app/core/util/embedded","app/production/views/VkbView","app/wmes-gft-tester/views/UnlockDialogView","app/wmes-gft-tester/views/OrderView","app/wmes-gft-tester/views/ConfigView","app/wmes-gft-tester/views/PcbView","app/wmes-gft-tester/views/TesterView","app/wmes-gft-tester/templates/page"],function(t,e,i,s,n,o,d,a,h,r,p,c,l,f,u,w,m){"use strict";return a.extend({template:m,remoteTopics:function(){const t={},e=this.model.get("line"),i=this.model.get("station")||0;return e&&(t[`gft.stations.updated.${e}.${i}`]="onStateUpdated"),t},localTopics:{"socket.connected":function(){this.loadData()}},events:{"click #-line":function(){if(window.WMES_CLIENT)return r.isEnabled()&&r.actions.config(),!1;var t=new c({model:this.model});return o.showDialog(t,this.t("unlockDialog:title")),!1}},initialize:function(){this.periodicUpdate=this.periodicUpdate.bind(this),this.shiftStartInfo=null,this.currentHour=-1,this.defineViews(),this.defineBindings(),this.setView("#-order",this.orderView),this.setView("#-config",this.configView),this.setView("#-pcb",this.pcbView),this.setView("#-tester",this.testerView),this.setView("#-vkb",this.vkbView)},defineViews:function(){this.vkbView=new p,this.orderView=new l({model:this.model,vkb:this.vkbView}),this.configView=new f({model:this.model}),this.pcbView=new u({model:this.model}),this.testerView=new w({model:this.model})},defineBindings:function(){this.listenTo(this.model,"sync",this.onModelSynced),this.once("afterRender",function(){this.loadData()})},afterRender:function(){this.periodicUpdate(),this.updateLine(),r.render(this),r.ready(),this.model.get("line")||this.$id("line").click()},periodicUpdate:function(){var t=s.getMoment(),e=t.hours();this.updateDate(t),e!==this.currentHour&&(this.currentHour=e,this.hourlyUpdate(t)),clearTimeout(this.timers.periodicUpdate),this.timers.periodicUpdate=setTimeout(this.periodicUpdate,1e3)},hourlyUpdate:function(t){this.updateShift(t)},updateDate:function(t){this.$id("date").html(t.format("dddd, LL<br>LTS"))},updateShift:function(t){this.shiftStartInfo=h(t.valueOf());var e=this.t("core","SHIFT:"+this.shiftStartInfo.no);this.$id("shift").html(this.t("shift",{shift:e}))},updateLine:function(){var t="?";this.model.get("line")&&(t=this.model.get("line"),this.model.get("station")&&(t=this.t("station",{line:t,station:this.model.get("station")}))),this.$id("line").text(t)},loadData:function(){this.model.get("line")&&this.model.fetch()},onModelSynced:function(){},onStateUpdated:function(t){this.model.update(t)}})});