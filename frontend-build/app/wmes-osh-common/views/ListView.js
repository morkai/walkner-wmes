define(["app/viewport","app/core/views/ListView"],function(e,s){"use strict";return s.extend({className:"is-clickable is-colored",events:Object.assign({"click .action-seen":function(s){const t=this.$(s.target).closest(".action-seen").prop("disabled",!0),i=t.closest(".list-item").removeClass("osh-unseen");this.ajax({method:"POST",url:this.collection.genUrl("mark-as-seen"),data:JSON.stringify({filter:[+i[0].dataset.id]})}).fail(()=>{e.msg.show({type:"error",time:2e3,text:this.t("wmes-osh-common","markAsSeen:failure")}),i.addClass("osh-unseen"),t.prop("disabled",!1)})}},s.prototype.events),localTopics:function(){return{[`${this.collection.getTopicPrefix()}.seen.*`]:"onSeen"}},serializeActions:function(){const e=this.collection.model;return t=>{const i=this.collection.get(t._id);return[{id:"seen",icon:"eye",label:this.t("wmes-osh-common","markAsSeen:listAction"),className:t.unseen?"":"disabled"},s.actions.viewDetails(i),Object.assign(s.actions.edit(i),{className:e.can.edit(i)?"":"disabled"}),Object.assign(s.actions.delete(i),{className:e.can.delete(i)?"":"disabled"})]}},onSeen:function({ids:e}){e.forEach(e=>{const s=this.collection.get(e);s&&(s.handleSeen(),this.$row(e).removeClass("osh-unseen").find(".action-seen").prop("disabled",!0))})}})});