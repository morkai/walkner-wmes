define(["underscore","app/viewport","app/core/View","../dictionaries","./OrgUnitPickerDialogView","app/wmes-osh-common/templates/orgUnits/pickerFilter"],function(t,e,i,s,r,o){"use strict";return i.extend({template:o,nlsDomain:"wmes-osh-common",events:{"click #-showDialog":function(){const i=new r({model:{multiple:!1!==this.options.multiple,resolveLabel:this.resolveLabel.bind(this),orgUnitTypes:this.options.orgUnitTypes,orgUnitType:this.model.type,orgUnitIds:t.pluck(this.model.units,"id")}});this.listenTo(i,"picked",(t,i)=>{e.closeDialog(),0===i.length?(this.model.type=null,this.model.units=[]):(this.model.type=t,this.model.units=i.map(e=>s.forProperty(t).get(e))),this.render(),this.$id("showDialog").focus()}),e.showDialog(i,this.t("orgUnitPicker:dialog:title"))},"click #-clear":function(){this.model={type:null,units:[]},this.render()}},initialize:function(){this.termToType={},this.typeToTerm={},t.forEach(this.options.orgUnitTerms||s.ORG_UNITS,(t,e)=>{"string"!=typeof e&&(e=t),this.termToType[e]=t,this.typeToTerm[t]=e}),this.model=null,this.listenTo(this.filterView,"filtering",this.onFiltering),this.listenTo(this.filterView,"filterChanged",this.onFilterChanged),this.filterView.filterHasValue=this.filterHasValue.bind(this,this.filterView,this.filterView.filterHasValue),this.filterView.showFilter=this.showFilter.bind(this,this.filterView,this.filterView.showFilter)},getTemplateData:function(){return this.model||(this.model=this.getOrgUnitsFromModel()),{active:!!this.model.type,label:this.resolveLabel(this.model.type),button:this.model.type?this.model.units.map(t=>t.getLabel({long:!1})).join("; "):this.t("orgUnitPicker:filter:any")}},resolveLabel:function(t){if(!t)return this.options.emptyLabel||this.t("orgUnitPicker:filter:label");var e=this.options.orgUnitLabels;return e&&e[t]?String(e[t]):this.t(`orgUnit:${t}`)},getOrgUnitsFromModel:function(){let t=null,e=[];if(this.filterView.model.rqlQuery){const i="array"===this.options.mode;this.filterView.model.rqlQuery.selector.args.forEach(s=>{t||(i||!this.termToType[s.args[0]]||"eq"!==s.name&&"in"!==s.name?i&&"orgUnit"===s.name&&(e=[].concat(s.args),t=this.termToType[e.shift()]):(t=this.termToType[s.args[0]],e=Array.isArray(s.args[1])?s.args[1]:[s.args[1]]))})}else Object.keys(this.termToType).forEach(i=>{const s=this.filterView.model.get(i);Array.isArray(s)&&s.length&&(t=this.termToType[i],e=s)});if(e.length){const i=s.forProperty(t);e=e.map(t=>i.get(t)).filter(t=>!!t)}return{type:t,units:e}},onFiltering:function(e){if(!this.model.type||!this.model.units.length)return;const i=t.pluck(this.model.units,"id");"array"===this.options.mode?e.push({name:"orgUnit",args:[this.typeToTerm[this.model.type]].concat(i)}):e.push({name:1===i.length?"eq":"in",args:[this.typeToTerm[this.model.type],1===i.length?i[0]:i]})},filterHasValue:function(t,e,i){return i===this.el.parentElement.dataset.filter?this.model.units.length>0:e.call(t,i)},showFilter:function(t,e,i){return i===this.el.parentElement.dataset.filter&&this.$id("showDialog").click(),e.call(t,i)}})});