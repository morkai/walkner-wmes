define(["app/time","app/core/View","app/wmes-ct-pces/templates/pceReport/table"],function(t,e,r){"use strict";function n(t){return t<1e3||t>288e5?0:t}function i(t){var e="";if(0===t)return e;var r=Math.round(t/1e3),n=Math.floor(r/60);return n>0?(n>99?n=99:n<10&&(e+="0"),e+=n+":",r%=60):e+="00:",r>0?(r<10&&(e+="0"),e+=r):e+="00",e}return e.extend({template:r,events:{},initialize:function(){this.metrics={pso:null,order:null,product:null}},getTemplateData:function(){return{stationCount:this.model.getStationCount(),pces:this.serializePces()}},createEmptyMetrics:function(){for(var t=this.model.getStationCount(),e={min:new Array(t),max:new Array(t),sum:new Array(t),cnt:new Array(t),avg:new Array(t),med:new Array(t)},r=0;r<t;++r)e.min[r]=Number.MAX_SAFE_INTEGER,e.max[r]=Number.MIN_SAFE_INTEGER,e.sum[r]=0,e.cnt[r]=0,e.avg[r]=0,e.med[r]=[];return e},calcMetrics:function(t){return t.avg.forEach(function(e,r){t.avg[r]=t.cnt[r]?t.sum[r]/t.cnt[r]:0;var n=t.med[r];n=0===n.length?0:1===n.length?n[0]:n.length%2==0?(n[n.length/2-1]+n[n.length/2])/2:n[(n.length+1)/2-1],t.med[r]=n}),t},serializePces:function(){var e=this;e.metrics={pso:null,order:null,product:null};var r=e.model,a=[],o=["min","max","avg","med"],c=Object.keys(e.product.get("orders")),u=c.length>1?e.createEmptyMetrics():null;return c.forEach(function(c){var s=r.orders.get(c),m=[],p=Object.keys(s.get("psos")),l=p.length>1?e.createEmptyMetrics():null;p.forEach(function(s){var p=r.psos.get(s),d=p.get("line"),f=p.get("shift"),h=t.format(f.date,"L"),E=e.t("core","SHIFT:"+f.no),g=e.createEmptyMetrics(),D=[u,l,g];p.get("pces").forEach(function(t,e){var r={line:d,orderNo:c,shift:{_id:f._id,date:h,no:E},pso:s,startedAt:Number.MAX_SAFE_INTEGER,shiftPce:e+1,orderPce:-1,stations:[],minStationI:-1,minDuration:Number.MAX_SAFE_INTEGER,maxStationI:-1,maxDuration:Number.MIN_SAFE_INTEGER};t.forEach(function(t,e){if(t&&t.t<r.startedAt&&(r.startedAt=t.t),t){var a=n(t.d[1]);a>0&&(a>r.maxDuration&&(r.maxStationI=e,r.maxDuration=a),a<r.minDuration&&(r.minStationI=e,r.minDuration=a),D.forEach(function(t){null!==t&&(a<t.min[e]&&(t.min[e]=a),a>t.max[e]&&(t.max[e]=a),t.sum[e]+=a,t.cnt[e]+=1,t.med[e].push(a))})),r.stations.push(i(a))}else r.stations.push("")}),r.minDuration=i(n(r.minDuration)),r.maxDuration=i(n(r.maxDuration)),a.push(r),m.push(r)}),e.calcMetrics(g),o.forEach(function(t){a.push(e.createMetricPce(g[t],{metric:t,scope:"pso",line:d,orderNo:c,shift:{_id:f._id,date:h,no:E},pso:s}))}),e.metrics.pso=g}),m.sort(function(t,e){return t.startedAt-e.startedAt}),m.forEach(function(t,e){t.orderPce=e+1}),l&&(e.calcMetrics(l),o.forEach(function(t){a.push(e.createMetricPce(l[t],{metric:t,scope:"order",orderNo:c}))}),e.metrics.order=l)}),u&&(e.calcMetrics(u),o.forEach(function(t){a.push(e.createMetricPce(u[t],{metric:t,scope:"product"}))}),e.metrics.product=u),a.push(e.createSapTaktTimePce()),e.product.set("metrics",e.metrics),a},createMetricPce:function(t,e){return e.stations=[],e.minStationI=-1,e.minDuration=Number.MAX_SAFE_INTEGER,e.maxStationI=-1,e.maxDuration=Number.MIN_SAFE_INTEGER,t.forEach(function(t,r){(t=n(t))>0&&(t>e.maxDuration&&(e.maxStationI=r,e.maxDuration=t),t<e.minDuration&&(e.minStationI=r,e.minDuration=t)),e.stations.push(i(t))}),e.minDuration=i(n(e.minDuration)),e.maxDuration=i(n(e.maxDuration)),e},createSapTaktTimePce:function(){for(var t=this.model.getStationCount(),e=i(1e3*this.product.get("sapTaktTime")),r={metric:"stt",scope:"product",stations:[],minDuration:e,maxDuration:e},n=0;n<t;++n)r.stations.push(e);return r}})});