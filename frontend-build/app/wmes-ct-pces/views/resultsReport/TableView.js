define(["app/time","app/user","app/viewport","app/core/View","../../MrpConfig","./MrpConfigDialogView","app/wmes-ct-pces/templates/resultsReport/table"],function(t,e,a,i,n,s,r){"use strict";return i.extend({template:r,events:{"click a[data-tab]":function(t){this.model.set("tab",t.currentTarget.dataset.tab)},"click a[data-mrp]":function(t){var e=new s({model:new n({_id:t.currentTarget.dataset.mrp})});this.listenTo(e.model,"save",function(){this.model.trigger("mrpConfigChanged")}),a.showDialog(e,this.t("mrpConfig:title"))}},initialize:function(){this.listenTo(this.model,"change:tab",this.toggleTab),this.listenToOnce(this,"afterRender",function(){this.listenTo(this.model,"change:report",this.render)})},getTemplateData:function(){return{canManage:e.isAllowedTo("PROD_DATA:MANAGE"),selectedTab:this.model.get("tab"),report:this.model.get("report")}},afterRender:function(){var t=this;t.$el.popover({selector:"td[data-id]",container:t.el,trigger:"hover",placement:"auto right",html:!0,content:function(){var e=t.model.get("report")[t.$(this).closest(".tab-pane")[0].dataset.tab][+this.parentNode.dataset.i];return"unbalance"===this.dataset.id?t.serializeUnbalance(e):"bottleneck"===this.dataset.id?t.serializeBottleneck(e):void 0}}),t.toggleTab()},toggleTab:function(){this.$(".tab-pane.active").removeClass("active"),this.$('.tab-pane[data-tab="'+this.model.get("tab")+'"]').addClass("active")},serializeUnbalance:function(t){if(t.avgMed.length){var e="<table><thead><tr>";return e+='<th class="is-min" style="padding-right: 10px">'+this.t("resultsReport:table:st"),e+='<th class="is-min">'+this.t("resultsReport:table:ct"),e+="<tbody>",t.avgMed.forEach(function(t){e+="<tr>",e+='<td class="is-min text-fixed text-right" style="padding-right: 10px">'+t.station,e+='<td class="is-min text-fixed">'+function(t){var e="";if(!t||t<1)return e;t=Math.round(t);var a=Math.floor(t/60);return a>0?(a>99?a=99:a<10&&(e+="0"),e+=a+":",t%=60):e+="00:",t>0?(t<10&&(e+="0"),e+=t):e+="00",e}(t.value/1e3)}),e+="</table>"}},serializeBottleneck:function(t){if(t.bottleneck.length){var e="<table><thead><tr>";return e+='<th class="is-min" style="padding-right: 10px">'+this.t("resultsReport:table:st"),e+='<th class="is-min">'+this.t("resultsReport:table:bn"),e+="<tbody>",t.bottleneck.forEach(function(t){e+="<tr>",e+='<td class="is-min text-fixed text-right" style="padding-right: 10px">'+t.station,e+='<td class="is-min text-fixed">'+t.count}),e+="</table>"}}})});