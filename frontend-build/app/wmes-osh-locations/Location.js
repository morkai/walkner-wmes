define(["require","underscore","app/i18n","app/core/Model","app/wmes-osh-common/templates/coordinators/details"],function(i,e,n,t,o){"use strict";return t.extend({urlRoot:"/osh/locations",clientUrlRoot:"#osh/locations",topicPrefix:"osh.locations",privilegePrefix:"OSH:DICTIONARIES",nlsDomain:"wmes-osh-locations",labelAttribute:"shortName",defaults:function(){return{active:!0,buildings:[],coordinators:[]}},getLabel:function({long:i,link:n}={}){let t=this.get(i?"longName":"shortName");return n&&(t=`<a href="${this.genClientUrl()}">${e.escape(t)}</a>`),t},serialize:function(){const i=this.toJSON();return i.active=n("core",`BOOL:${i.active}`),i},serializeRow:function(){const e=i("app/wmes-osh-common/dictionaries"),n=this.serialize();return n.buildings=e.buildings.getLabels(n.buildings).join("; "),n},serializeDetails:function(){const e=i("app/wmes-osh-common/dictionaries"),n=this.serialize();return n.buildings=e.buildings.getLabels(n.buildings,{long:!0,link:!0}),n.coordinators=o(n.coordinators),n},hasBuilding:function(i){if(!(i=parseInt(i,10)))return!1;const e=this.get("buildings");return 0===e.length||e.includes(i)}})});