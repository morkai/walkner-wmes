// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","app/i18n","app/viewport","app/time","app/core/Model","app/core/View","app/core/util/bindLoadingMessage","app/users/ownMrps","app/planning/Plan","app/planning/PlanSettings","app/planning/PlanDisplayOptions","app/planning/views/PlanFilterView","app/planning/views/PlanMrpView","app/planning/templates/planPage"],function(n,i,e,t,s,a,p,r,l,o,d,h,g,c,u){"use strict";return p.extend({template:u,layoutName:"page",breadcrumbs:function(){return[{href:"#planning/plans",label:e.bound("planning","BREADCRUMBS:base")},this.plan.getLabel()]},actions:function(){var n=this;return[{label:e.bound("planning","PAGE_ACTION:changes"),icon:"list-ol",href:"#planning/changes?sort(-date)&plan="+n.plan.id},{label:e.bound("planning","PAGE_ACTION:settings"),icon:"cogs",privileges:"PLANNING:MANAGE",href:"#planning/settings/"+n.plan.id,className:n.plan.isEditable()?"":"disabled",callback:function(i){if(0===i.button&&!i.ctrlKey&&n.plan.isEditable())return n.broker.publish("router.navigate",{url:"/planning/settings/"+n.plan.id+"?back=1",trigger:!0,replace:!1}),!1}}]},remoteTopics:{"planning.changes.created":function(n){this.plan.applyChange(n)},"planning.generator.started":function(n){n.date===this.plan.id&&t.msg.loading()},"planning.generator.finished":function(n){n.date===this.plan.id&&t.msg.loaded()},"orders.synced":function(){this.plan.sapOrders.fetch({reset:!0})}},initialize:function(){this.defineModels(),this.defineViews(),this.defineBindings()},destroy:function(){i(window).off("."+this.idPrefix)},setUpLayout:function(n){this.layout=n},defineModels:function(){this.plan=new o({_id:this.options.date},{displayOptions:h.fromLocalStorage({mrps:this.options.mrps}),settings:d.fromDate(this.options.date),minMaxDates:!0,pceTimes:!1}),r(this.plan,this,"MSG:LOADING_PLAN_FAILURE"),r(this.plan.settings,this,"MSG:LOADING_SETTINGS_FAILURE"),r(this.plan.sapOrders,this,"MSG:LOADING_SAP_ORDERS_FAILURE"),window.plan=this.plan},defineViews:function(){this.filterView=new g({plan:this.plan}),this.setView("#-filter",this.filterView)},defineBindings:function(){var e=this,t=e.plan,s=n.after(2,n.debounce(e.renderMrps.bind(e),1));e.listenTo(t,"change:loading",e.onLoadingChanged),e.listenTo(t,"change:_id",e.onDateFilterChanged),e.listenTo(t.displayOptions,"change:mrps",e.onMrpsFilterChanged),e.listenTo(t.displayOptions,"change:wrapLists",e.onWrapListsChanged),e.listenTo(t.displayOptions,"change:useLatestOrderData",e.updateUrl),e.listenTo(t.settings,"changed",e.onSettingsChanged),e.listenTo(t.mrps,"reset",s),i(window).on("resize."+this.idPrefix,n.debounce(this.onWindowResize.bind(this),16)).on("keyup."+this.idPrefix,this.onWindowKeyUp.bind(this))},load:function(n){return n(l.load(this),this.plan.settings.fetch(),this.plan.sapOrders.fetch({reset:!0}),this.plan.fetch())},serialize:function(){return{idPrefix:this.idPrefix,wrap:this.plan.displayOptions.isListWrappingEnabled()}},afterRender:function(){this.renderMrps()},reload:function(){function n(){s.set("loading",!1),t.msg.loadingFailed()}var e=this,s=e.plan;s.set("loading",!0),e.promised(s.settings.set("_id",s.id).fetch()).then(function(){var t=i.when(s.sapOrders.fetch({reset:!0,reload:!0}),s.fetch());e.promised(t).then(s.set.bind(s,"loading",!1),n)},n)},updateUrl:function(){var n=this.plan;this.broker.publish("router.navigate",{url:"/planning/plans/"+n.id+"?mrps="+n.displayOptions.get("mrps")+"&sapOrders="+(n.displayOptions.isLatestOrderDataUsed()?"1":"0"),replace:!0,trigger:!1})},renderMrps:function(){var n=this;n.removeView("#-mrps"),n.plan.mrps.forEach(function(i){n.insertView("#-mrps",new c({plan:n.plan,mrp:i})).render()}),this.$id("empty").toggleClass("hidden",n.plan.mrps.length>0),this.$id("mrps").toggleClass("hidden",0===n.plan.mrps.length)},onDateFilterChanged:function(){this.layout&&(this.layout.setBreadcrumbs(this.breadcrumbs,this),this.layout.setActions(this.actions,this)),this.updateUrl(),this.reload()},onMrpsFilterChanged:function(){this.updateUrl(),this.plan.mrps.reset()},onWrapListsChanged:function(){this.$el.toggleClass("wrap",this.plan.displayOptions.isListWrappingEnabled())},onLoadingChanged:function(){this.plan.get("loading")||this.renderMrps()},onSettingsChanged:function(n){n.reset&&this.plan.mrps.reset()},onWindowResize:function(n){this.broker.publish("planning.windowResized",n)},onWindowKeyUp:function(n){27===n.keyCode&&this.broker.publish("planning.escapePressed")}})});