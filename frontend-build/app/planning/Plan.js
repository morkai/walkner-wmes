// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../time","../core/Model","../core/Collection","../data/orgUnits","./PlanOrder","./PlanOrderCollection","./PlanLineCollection","./PlanMrpCollection"],function(e,i,r,t,n,s,a,o,d){"use strict";var p={change:function(e,i){e.settings.set(i.property,i.newValue)},"lines:add":function(e,i,r){e.settings.lines.add(i.line),r.lines[i.line._id]=!0,i.line.mrpPriority.forEach(function(e){r.mrps[e]=!0})},"lines:remove":function(e,i,r){e.settings.lines.remove(i.line._id),r.lines[i.line._id]=!0,i.line.mrpPriority.forEach(function(e){r.mrps[e]=!0})},"lines:change":function(e,i,r){var t=e.settings.lines.get(i.line);t&&(r.lines[t.id]=!0,"mrpPriority"===i.property&&t.get("mrpPriority").forEach(function(e){r.mrps[e]=!0}),t.set(i.property,i.newValue),t.get("mrpPriority").forEach(function(e){r.mrps[e]=!0}))},"mrps:add":function(e,i,r){e.settings.mrps.add(i.mrp),r.mrps[i.mrp._id]=!0,i.mrp.lines.forEach(function(e){r.lines[e._id]=!0})},"mrps:remove":function(e,i,r){e.settings.mrps.remove(i.mrp._id),r.mrps[i.mrp._id]=!0,i.mrp.lines.forEach(function(e){r.lines[e._id]=!0})},"mrps:change":function(e,i,r){var t=e.settings.mrps.get(i.mrp);t&&(t.set(i.property,i.newValue),r.mrps[t.id]=!0,t.lines.forEach(function(e){r.lines[e.id]=!0}))},"mrpLines:add":function(e,i,r){var t=e.settings.mrps.get(i.mrp);t&&(t.lines.add(i.line),r.mrps[t.id]=!0,r.lines[i.line._id]=!0)},"mrpLines:remove":function(e,i,r){var t=e.settings.mrps.get(i.mrp);t&&(t.lines.remove(i.line._id),r.mrps[t.id]=!0,r.lines[i.line._id]=!0)},"mrpLines:change":function(e,i,r){var t=e.settings.mrps.get(i.mrp);if(t){var n=t.lines.get(i.line._id);n&&(n.set(i.property,i.newValue),r.mrps[t.id]=!0,r.lines[n.id]=!0)}}},l={settings:function(e,i){var r={lines:{},mrps:{}};i.forEach(function(i){p[i.type](e,i,r)}),e.settings.trigger("changed",r)},addedOrders:function(e,i){var r=[],t={};i.forEach(function(e){var i=new s(e);r.push(i),t[e.mrp]||(t[e.mrp]=[]),t[e.mrp].push(i)}),e.orders.add(r),e.orders.trigger("added",r),Object.keys(t).forEach(function(i){var r=e.mrps.get(i);r.orders.add(t[i]),r.orders.trigger("added",t[i])})},removedOrders:function(e,i){var r=[],t={};i.forEach(function(i){var n=e.orders.get(i._id);if(n){r.push(n);var s=n.get("mrp");t[s]||(t[s]=[]),t[s].push(n)}}),Object.keys(t).forEach(function(i){var r=e.mrps.get(i);r.orders.remove(t[r.id]),r.orders.trigger("removed",t[r.id])}),e.orders.remove(r),e.orders.trigger("removed",r)},changedOrders:function(e,i){var r=[],t={},n={};i.forEach(function(i){var s=e.orders.get(i._id);if(s){r.push(s);var a=e.mrps.get(s.get("mrp")),o=e.mrps.get(i.mrp)||a;a.id!==o.id&&(n[a.id]||(n[a.id]=[]),n[a.id].push(s),a.orders.remove(s)),t[o.id]||(t[o.id]=[]),t[o.id].push(s),s.set(i)}}),Object.keys(n).forEach(function(i){e.mrps.get(i).trigger("removed",n[i])}),e.orders.trigger("changed",r),Object.keys(t).forEach(function(i){e.mrps.get(i).orders.trigger("changed",t[i])})},changedLines:function(e,i){}};return r.extend({urlRoot:"/planning/plans",clientUrlRoot:"#planning/plans",topicPrefix:"planning.plans",privilegePrefix:"PLANNING",nlsDomain:"planning",defaults:{loading:!1},initialize:function(i,r){r=e.defaults({},r,{displayOptions:null,settings:null,minMaxDates:!1,pceTimes:!1}),this.urlQuery="minMaxDates="+(r.minMaxDates?1:0)+"&pceTimes="+(r.pceTimes?1:0),this.displayOptions=r.displayOptions,this.settings=r.settings,this.orders=new a(null,{plan:this,paginate:!1}),this.lines=new o(null,{plan:this,paginate:!1}),this.mrps=new d(null,{plan:this,paginate:!1}),this.lines.on("reset",function(){this.mrps.reset()},this),this.attributes.orders&&(this.orders.reset(this.attributes.orders),delete this.attributes.orders),this.attributes.lines&&(this.lines.reset(this.attributes.lines),delete this.attributes.lines)},url:function(){return this.urlRoot+"/"+this.id+"?"+this.urlQuery},parse:function(r){var t={};return r._id&&(t._id=i.utc.format(r._id,"YYYY-MM-DD")),r.createdAt&&(t.createdAt=new Date(r.createdAt)),r.updatedAt&&(t.updatedAt=new Date(r.updatedAt)),(r.minDate||r.maxDate)&&this.displayOptions.set(e.pick(r,["minDate","maxDate"])),r.orders&&this.orders.reset(r.orders),r.lines&&this.lines.reset(r.lines),t},getLabel:function(){return i.utc.format(this.id,"LL")},applyChange:function(e){var r=this;i.utc.format(e.plan,"YYYY-MM-DD")===r.id&&(r.set("updatedAt",new Date(e.date)),Object.keys(e.data).forEach(function(i){l[i]&&l[i](r,e.data[i])}))}})});