define(["underscore","../time","../core/Collection","./PlanShiftOrder","./util/shift"],function(t,e,n,i,r){"use strict";var a=["_id","prodLine","shift","orderId","operationNo","quantityDone","startedAt","finishedAt"];return n.extend({model:i,initialize:function(t,e){var n=this;n.plan=e.plan,n.shiftStartTime=0,n.shiftEndTime=0,n.cache={execution:{},byLine:{},byOrder:{}},n.updateShiftTime(),n.plan.on("change:_id",n.updateShiftTime.bind(n)),n.on("reset",function(){n.cache={execution:{},byLine:{},byOrder:{}},n.forEach(n.cacheOrder,n)}),n.on("add",n.cacheOrder,n),n.on("change:quantityDone",function(){this.cache.execution={}}),n.forEach(n.cacheOrder,n)},url:function(){return"/planning/shiftOrders/"+this.plan.id},updateShiftTime:function(){var t=e.getMoment(this.plan.id,"YYYY-MM-DD").hours(6);this.shiftStartTime=t.valueOf(),this.shiftEndTime=t.add(1,"days").valueOf()},findOrders:function(t,e,n){var i=this.cache.byOrder[t]||[];return e&&(i=i.filter(function(t){return t.get("prodLine")===e})),n&&(i=i.filter(function(t){return t.get("shift")===n})),i},getExecutionOrders:function(t,e,n){const i=this.cache.byLine[t],r=[];if(!i)return r;const a=i.orders[e];return a?(a.forEach(t=>{t.attributes.operationNo===n&&r.push({pso:t,quantityDone:t.attributes.quantityDone,startedAt:Date.parse(t.attributes.startedAt),continuation:!!r.length&&r[r.length-1].pso.nextLinePso===t})}),r):r},getLineOrderExecution:function(n,i,a){const o=n+i.id;if(this.cache.execution[o])return this.cache.execution[o];a||(a=this.plan.workingLines.getWorkingTimes(this.plan.lines.get(n)));const s=i.get("orderNo"),u=this.plan.orders.get(s),d=this.cache.execution[o]={quantityDoneOnLine:0,quantityDoneOnDay:0,quantityDoneOnShift:0,plannedQuantityDone:0,plannedQuantitiesDone:[]};if(!u)return d;const c=u.getOperationNo(),h=this.getExecutionOrders(n,s,c);if(!h.length)return d;const l=Date.parse(i.get("startAt")),f=e.utc.getMoment(l).local(!0).valueOf();let p=f-144e5,g=f+144e5;const D=r.getShiftStartTime(f,!0),y=r.getFirstShiftStartTime(D,!0),O=y+3*r.SHIFT_DURATION,S=D+r.SHIFT_DURATION,m=p-D,q=g-S;if(a&&(m<0||q>0)){var A=r.getShiftNo(f,!0);m<0&&a.prevAt[A]&&(p=e.utc.getMoment(a.prevAt[A]).local(!0).valueOf()+m),q>0&&a.nextAt[A]&&(g=e.utc.getMoment(a.nextAt[A]).local(!0).valueOf()+q)}let x=0;return h.forEach(e=>{d.quantityDoneOnLine+=e.quantityDone,e.startedAt>=y&&e.startedAt<=O&&(d.quantityDoneOnDay+=e.quantityDone),r.getShiftStartTime(e.startedAt,!0)===D&&(d.quantityDoneOnShift+=e.quantityDone),(e.startedAt>=p&&e.startedAt<=g||e.continuation)&&(d.plannedQuantityDone+=e.quantityDone,d.plannedQuantitiesDone.push(e.quantityDone),e.continuation?x+=e.quantityDone:(x&&t.last(d.plannedQuantitiesDone)!==x&&d.plannedQuantitiesDone.push(x),x=e.quantityDone))}),x&&t.last(d.plannedQuantitiesDone)!==x&&d.plannedQuantitiesDone.push(x),d},getTotalQuantityDone:function(t,e){return this.getLineOrderExecution(t,e).quantityDoneOnShift},update:function(e){if(e=e.prodShiftOrders){var n=this;if(Array.isArray(e))e.forEach(function(t){n.addOrder(t)});else{var i=n.get(e._id);i?i.set(t.pick(e,a)):e._id&&n.addOrder(e)}}},addOrder:function(t){this.plan.orders.get(t.orderId)&&this.add(t,{merge:!0})},cacheOrder:function(t){var e=this.cache.byLine,n=this.cache.byOrder,i=t.get("prodLine"),r=t.get("shift"),a=t.get("orderId");e[i]||(e[i]={all:[],orders:{}}),e[i][r]||(e[i][r]={all:[]}),e[i][r][a]||(e[i][r][a]=[]),e[i].orders[a]||(e[i].orders[a]=[]),n[a]||(n[a]=[]),e[i].all.length&&(e[i].all[e[i].all.length-1].nextLinePso=t),e[i].all.push(t),e[i][r].all.push(t),e[i][r][a].push(t),e[i].orders[a].push(t),n[a].push(t),this.cache.execution={}}})});