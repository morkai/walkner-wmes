define(["underscore","../time","../core/Collection","./PlanShiftOrder","./util/shift"],function(t,e,n,i,r){"use strict";var a=["_id","prodLine","shift","orderId","operationNo","quantityDone","startedAt","finishedAt"];return n.extend({model:i,initialize:function(t,e){var n=this;n.plan=e.plan,n.shiftStartTime=0,n.shiftEndTime=0,n.cache={execution:{},byLine:{},byOrder:{}},n.updateShiftTime(),n.plan.on("change:_id",n.updateShiftTime.bind(n)),n.on("reset",function(){n.cache={execution:{},byLine:{},byOrder:{}},n.forEach(n.cacheOrder,n)}),n.on("add",n.cacheOrder,n),n.on("change:quantityDone",function(){this.cache.execution={}}),n.forEach(n.cacheOrder,n)},url:function(){return"/planning/shiftOrders/"+this.plan.id},updateShiftTime:function(){var t=e.getMoment(this.plan.id,"YYYY-MM-DD").hours(6);this.shiftStartTime=t.valueOf(),this.shiftEndTime=t.add(1,"days").valueOf()},findOrders:function(t,e,n){var i=this.cache.byOrder[t]||[];return e&&(i=i.filter(function(t){return t.get("prodLine")===e})),n&&(i=i.filter(function(t){return t.get("shift")===n})),i},getLineOrderExecution:function(t,n,i){const a=t+n.id;if(this.cache.execution[a])return this.cache.execution[a];const o=n.get("orderNo"),d=this.plan.orders.get(o),u=this.cache.execution[a]={quantityDoneOnLine:0,quantityDoneOnDay:0,quantityDoneOnShift:0,plannedQuantityDone:0,plannedQuantitiesDone:[]};if(!d)return u;if(!this.cache.byLine[t])return u;const s=Date.parse(n.get("startAt")),c=e.utc.getMoment(s).local(!0).valueOf();let h=c-144e5,f=c+144e5;const l=d.getOperationNo(),p=r.getShiftStartTime(c,!0),O=r.getFirstShiftStartTime(p,!0),y=O+3*r.SHIFT_DURATION,D=p+r.SHIFT_DURATION,g=h-p,A=f-D;if(i&&(g<0||A>0)){var m=r.getShiftNo(c,!0);g<0&&i.prevAt[m]&&(h=e.utc.getMoment(i.prevAt[m]).local(!0).valueOf()+g),A>0&&i.nextAt[m]&&(f=e.utc.getMoment(i.nextAt[m]).local(!0).valueOf()+A)}return this.sumExecutionOrders(this.findOrders(o,t)).forEach(t=>{l&&t.operationNo&&t.operationNo===l&&(u.quantityDoneOnLine+=t.quantityDone,t.startedAt>=O&&t.startedAt<=y&&(u.quantityDoneOnDay+=t.quantityDone),r.getShiftStartTime(t.startedAt,!0)===p&&(u.quantityDoneOnShift+=t.quantityDone),t.startedAt>=h&&t.startedAt<=f&&(u.plannedQuantityDone+=t.quantityDone,u.plannedQuantitiesDone.push(t.quantityDone)))}),u},sumExecutionOrders:function(t){const e=[];return 0===t.length?e:(t.forEach(({attributes:t})=>{const n={prodLine:t.prodLine,quantityDone:t.quantityDone,operationNo:t.operationNo,startedAt:Date.parse(t.startedAt),finishedAt:Date.parse(t.finishedAt)},i=e[e.length-1];i&&n.prodLine===i.prodLine&&n.operationNo===i.operationNo&&Math.abs(n.startedAt-i.finishedAt)<6e4?(i.quantityDone+=n.quantityDone,i.finishedAt=n.finishedAt):e.push(n)}),e)},getTotalQuantityDone:function(t,e){return this.getLineOrderExecution(t,e).quantityDoneOnShift},update:function(e){if(e=e.prodShiftOrders){var n=this;if(Array.isArray(e))e.forEach(function(t){n.addOrder(t)});else{var i=n.get(e._id);i?i.set(t.pick(e,a)):e._id&&n.addOrder(e)}}},addOrder:function(t){this.plan.orders.get(t.orderId)&&this.add(t,{merge:!0})},cacheOrder:function(t){var e=this.cache.byLine,n=this.cache.byOrder,i=t.get("prodLine"),r=t.get("shift"),a=t.get("orderId");e[i]||(e[i]={all:[]}),e[i][r]||(e[i][r]={all:[]}),e[i][r][a]||(e[i][r][a]=[]),n[a]||(n[a]=[]),e[i].all.push(t),e[i][r].all.push(t),e[i][r][a].push(t),n[a].push(t),this.cache.execution={}}})});