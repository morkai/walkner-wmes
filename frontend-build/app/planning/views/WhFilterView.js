// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","app/i18n","app/time","app/core/View","app/core/util/idAndLabel","app/data/orgUnits","app/mrpControllers/util/setUpMrpSelect2","app/planning/templates/whFilter"],function(e,t,i,a,s,n,l,p,h){"use strict";return s.extend({template:h,events:{"input #-date":"changeFilter","change #-date":"changeFilter","change #-mrps":"changeFilter","change #-lines":"changeFilter","click #-useDarkerTheme":function(){this.plan.displayOptions.toggleDarkerThemeUse()},'change input[name="mrpMode"]':function(){this.toggleMrpsSelect2(),this.changeFilter()}},initialize:function(){this.stats={};var e=this.plan,t=e.displayOptions;this.listenTo(e,"change:loading",this.onLoadingChanged),this.listenTo(e,"change:_id",this.onDateChanged),this.listenTo(t,"change:minDate change:maxDate",this.onMinMaxDateChanged),this.listenTo(t,"change:useDarkerTheme",this.updateToggles)},serialize:function(){var t=this.plan,i=t.displayOptions,a="1",s=[].concat(i.get("mrps"));switch(s[0]){case"1":s.shift();break;case"0":a="0",s.shift();break;case"mine":case"wh":a=s[0],s=[]}return e.assign({idPrefix:this.idPrefix,date:t.id,mrps:s,lines:i.get("lines"),mrpMode:a,minDate:i.get("minDate"),maxDate:i.get("maxDate"),useDarkerTheme:i.isDarkerThemeUsed()})},afterRender:function(){p(this.$id("mrps"),{width:"600px",placeholder:i("planning","filter:mrps:placeholder"),sortable:!0,own:!1,view:this}),this.$id("lines").select2({width:"300px",placeholder:" ",allowClear:!0,multiple:!0,data:l.getAllByType("prodLine").filter(function(e){return!e.get("deactivatedAt")}).map(n)}),this.toggleMrpsSelect2(),this.updateStats()},updateToggles:function(){this.$id("useDarkerTheme").toggleClass("active",this.plan.displayOptions.isDarkerThemeUsed())},toggleMrpsSelect2:function(){var e=this.$('[name="mrpMode"]:checked').val(),t="1"===e||"0"===e,a=this.$id("mrps").select2("enable",t);t?(a.attr("placeholder",i("planning","filter:mrps:placeholder")),""===a.val()&&a.select2("val","")):a.attr("placeholder",i("planning","filter:mrps:"+e)).select2("val","")},changeFilter:function(){var t=this.$id("date").val(),i=this.$id("mrps").val().split(",").filter(function(e){return e.length>0}),a=this.$id("lines").val().split(",").filter(function(e){return e.length>0});switch(this.$('[name="mrpMode"]:checked').val()){case"1":i.unshift("1");break;case"0":i.unshift("0");break;case"mine":i=["mine"];break;case"wh":i=["wh"]}var s={};e.isEqual(i,this.plan.displayOptions.get("mrps"))||(s.mrps=i),e.isEqual(a,this.plan.displayOptions.get("lines"))||(s.lines=a),e.isEmpty(s)||this.plan.displayOptions.set(s),/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(t)&&t!==this.plan.id&&this.plan.set("_id",t)},onLoadingChanged:function(){var e=this.plan.get("loading");this.$id("date").prop("disabled",e),this.$id("mrps").select2("enable",!e),this.$id("lines").select2("enable",!e)},onDateChanged:function(){this.$id("date").val(this.plan.id)},onMinMaxDateChanged:function(){this.$id("date").prop("min",this.plan.displayOptions.get("minDate")).prop("max",this.plan.displayOptions.get("maxDate"))},updateStats:function(t){t&&(this.stats=t);var i=this.$id("stats");i.length&&e.forEach(this.stats,function(e,t){i.find('.planning-wh-stats-v[data-status="'+t+'"]').text(e.toLocaleString())})},updateStat:function(e,t){e!==t&&(this.stats[e]-=1,this.stats[t]+=1,this.updateStats())}})});