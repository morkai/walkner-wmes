// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","jquery","app/core/View","app/data/orgUnits","app/planning/templates/lines","app/planning/templates/linePopover"],function(i,e,t,n,r,o){"use strict";return t.extend({template:r,events:{},initialize:function(){this.onResize=i.debounce(this.resize.bind(this),16),e(window).on("resize."+this.idPrefix,this.onResize)},destroy:function(){e(window).off("."+this.idPrefix),this.$el.popover("destroy")},serialize:function(){var i=this;return{idPrefix:i.idPrefix,lines:i.model.lines.map(function(e){return{_id:e.id,workerCount:e.get("workerCount"),customTimes:i.serializeActiveTime(e,!1)}})}},afterRender:function(){var i=this;i.$id("list").on("scroll",function(e){i.$id("scrollIndicator").toggleClass("hidden",e.target.scrollLeft<=40)}),i.resize(),this.$el.popover({container:this.el,selector:".planning-mrp-list-item",trigger:"hover",placement:"top",html:!0,content:function(){return i.serializePopover(this.dataset.id)},template:'<div class="popover planning-mrp-popover"><div class="arrow"></div><div class="popover-content"></div></div>'})},resize:function(){var i=this.$id("edit"),e=this.$id("scrollIndicator"),t=i.position();e.css({top:t.top+1+"px",left:i.outerWidth()+t.left+"px"})},$item:function(i){return i?this.$('.planning-mrp-list-item[data-id="'+i+'"]'):this.$(".planning-mrp-list-item")},serializePopover:function(i){var e=n.getAllForProdLine(i),t=n.getByTypeAndId("prodFlow",e.prodFlow),r=n.getByTypeAndId("prodLine",e.prodLine),s=this.model.lines.get(i);return o({line:{_id:i,division:e.division?e.division:"?",prodFlow:t?t.get("name"):"?",prodLine:r?r.get("description"):"?",workerCount:s.get("workerCount"),activeTime:this.serializeActiveTime(s,!0)}})},serializeActiveTime:function(i,e){var t=i.get("activeFrom"),n=i.get("activeTo");return e||t||n?(t||"06:00")+"-"+(n||"06:00"):""},updateWorkerCount:function(i){var e=i.get("workerCount");this.$item(i.id).find('.planning-mrp-list-property[data-property="workerCount"]').toggleClass("is-invalid",!e).find("span").text(e)},updateCustomTimes:function(i){var e=this.serializeActiveTime(i,!1);this.$item(i.id).find('.planning-mrp-list-property[data-property="customTimes"]').toggleClass("hidden",""===e).find("span").text(e)}})});