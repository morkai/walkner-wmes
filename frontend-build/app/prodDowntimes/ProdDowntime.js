// Part of <http://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["../time","../user","../core/Model","../core/util/getShiftEndDate","../data/aors","../data/downtimeReasons","./util/decorateProdDowntime"],function(e,t,n,r,i,o,s){"use strict";var a={undecided:"warning",confirmed:"success",rejected:"danger","null":"primary"};return n.extend({urlRoot:"/prodDowntimes",clientUrlRoot:"#prodDowntimes",topicPrefix:"prodDowntimes",privilegePrefix:"PROD_DOWNTIMES",nlsDomain:"prodDowntimes",labelAttribute:"rid",defaults:{division:null,subdivision:null,mrpControllers:null,prodFlow:null,workCenter:null,prodLine:null,prodShift:null,prodShiftOrder:null,date:null,shift:null,aor:null,reason:null,reasonComment:null,decisionComment:null,status:null,startedAt:null,finishedAt:null,corroborator:null,corroboratedAt:null,creator:null,master:null,leader:null,operator:null,operators:null,mechOrder:null,orderId:null,operationNo:null},serializeRow:function(e){return s(this,{changesCount:!0,currentTime:e})},serializeDetails:function(){return s(this,{longDate:!0})},getReasonLabel:function(){var e=this.get("reason"),t=o.get(e);return t?t.get("label"):e},getAorLabel:function(){var e=this.get("aor"),t=i.get(e);return t?t.get("name"):e},getCssClassName:function(e){return a[void 0===e?this.get("status"):e]},finish:function(){if(null!=this.get("finishedAt"))return null;var t=e.getMoment().toDate(),n=r(this.get("date"),this.get("shift"));return t>n&&(t=n),this.set("finishedAt",t),{_id:this.id,finishedAt:t}},isEditable:function(){return null!=this.get("finishedAt")&&null===this.get("pressWorksheet")},canCorroborate:function(){return t.isLoggedIn()&&null===this.get("pressWorksheet")},canChangeStatus:function(e){if(!this.get("finishedAt"))return 0;if(e.canManageProdData)return 2;var t=this.get("status");if(!e.canManageProdDowntimes||"confirmed"===t)return 0;var n=this.get("changesCount");return!n||n.rejected>=e.maxRejectedChanges||n.reason>=e.maxReasonChanges||n.aor>=e.maxAorChanges?0:e.hasAccessToAor(this.get("aor"))?1:0},getDurationString:function(t,n){var r=Date.parse(this.get("startedAt")),i=Date.parse(this.get("finishedAt"))||t||Date.now();return e.toString(Math.round((i-r)/1e3),n)}},{STATUS:{UNDECIDED:"undecided",CONFIRMED:"confirmed",REJECTED:"rejected"},parse:function(e){return["date","startedAt","finishedAt","createdAt","corroboratedAt"].forEach(function(t){"string"==typeof e[t]&&(e[t]=new Date(e[t]))}),e}})});