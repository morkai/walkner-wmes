define(["app/user","app/viewport","app/core/views/ListView","app/data/prodLines","app/orgUnits/util/renderOrgUnitPath"],function(t,i,e,n,s){"use strict";return e.extend({remoteTopics:{"production.synced.**":"refreshCollection","production.edited.**":function(){this.refreshCollection()}},columns:function(){return[{id:"prodLine",className:"is-min"},{id:"station",className:"is-min is-number",label:this.t("list:station"),thAttrs:{title:this.t("PROPERTY:station")}},{id:"type",className:"is-min"},"data",{id:"prodShift",className:"is-min"},{id:"prodShiftOrder",className:"is-min"},{id:"createdAt",className:"is-min"},{id:"creator",className:"is-min"},{id:"instanceId",className:"is-min"}]},serializeActions:function(){return null},afterRender:function(){e.prototype.afterRender.call(this);var t=this;this.$('.list-item > td[data-id="prodLine"]').popover({container:this.el,trigger:"hover",placement:"auto right",html:!0,content:function(){var i=s(n.get(t.$(this).text().trim()),!1,!1);return i?i.split(" \\ ").join("<br>\\ "):"?"}})},refreshCollection:function(t){if(!t||this.collection.matches(t))return e.prototype.refreshCollection.apply(this,arguments)}})});