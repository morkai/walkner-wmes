// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["js2form","app/time","app/i18n","app/core/View","app/core/util/fixTimeRange","app/reports/templates/report1Filter","../util/prepareDateRange"],function(t,e,i,a,n,o,r){return a.extend({template:o,events:{"submit .filter-form":function(t){t.preventDefault(),this.changeFilter()},"change input[name=mode]":"onModeChange","click a[data-range]":function(t){var e=r(t.target.getAttribute("data-range"),!0);this.$id("from-date").val(e.fromMoment.format("YYYY-MM-DD")),this.$id("from-time").val(e.fromMoment.format("HH:mm")),this.$id("to-date").val(e.toMoment.format("YYYY-MM-DD")),this.$id("to-time").val(e.toMoment.format("HH:mm")),this.$id("mode-date").click(),this.$('.btn[data-interval="'+e.interval+'"]').click(),this.$(".filter-form").submit()},"click #-showDisplayOptions":function(){this.trigger("showDisplayOptions")}},afterRender:function(){var e=this.serializeFormData();t(this.el.querySelector(".filter-form"),e),this.$("[name=interval]:checked").closest(".btn").addClass("active"),this.$("[name=subdivisionType]:checked").closest(".btn").addClass("active"),this.toggleSubdivisionType(),this.onModeChange()},toggleSubdivisionType:function(){var t=this.$id("subdivisionTypes");return t.find("> .active").length||t.find("> .btn").addClass("active"),t},onModeChange:function(){var t="online"===this.getSelectedMode();this.$(".filter-dateRange .form-control").attr("disabled",t);var e=this.$id("intervals").find(".btn");if(e.filter("[data-interval=month], [data-interval=week], [data-interval=day]")[t?"addClass":"removeClass"]("disabled"),t){var i=e.filter(".active.disabled");i.length&&e.filter("[data-interval=hour]").click()}else this.$id("from").select()},serializeFormData:function(){var t={mode:"online",interval:this.model.get("interval"),subdivisionType:this.model.get("subdivisionType")},i=parseInt(this.model.get("from"),10),a=parseInt(this.model.get("to"),10);return t["from-date"]=e.format(i,"YYYY-MM-DD"),t["from-time"]=e.format(i,"HH:mm"),t["to-date"]=e.format(a,"YYYY-MM-DD"),t["to-time"]=e.format(a,"HH:mm"),(i||a)&&(t.mode="date"),t},changeFilter:function(){var t={rnd:Math.random(),from:null,to:null,interval:this.$id("intervals").find(".active > input").val(),subdivisionType:null},i=this.toggleSubdivisionType().find("> .active");1===i.length&&(t.subdivisionType=i.find("input").val());var a,o;if("date"===this.getSelectedMode()){var r=n.fromView(this,{defaultTime:"06:00"});t.from=r.from||this.getFromMomentForSelectedInterval().valueOf(),t.to=r.to||Date.now(),a=e.getMoment(t.from),o=e.getMoment(t.to)}else a=this.model.getFirstShiftMoment(),o=a.clone().add("days",1);this.$id("from-date").val(a.format("YYYY-MM-DD")),this.$id("from-time").val(a.format("HH:mm")),this.$id("to-date").val(o.format("YYYY-MM-DD")),this.$id("to-time").val(o.format("HH:mm")),this.model.set(t)},getSelectedMode:function(){return this.$("input[name=mode]:checked").val()},getSelectedInterval:function(){return this.$id("intervals").find(".active").attr("data-interval")},getFromMomentForSelectedInterval:function(){var t=e.getMoment().minutes(0).seconds(0).milliseconds(0);switch(this.getSelectedInterval()){case"month":return t.date(1).hours(6);case"week":return t.day(1).hours(6);default:return t.hour(6)}}})});