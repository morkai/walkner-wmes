define(["underscore","../data/divisions","../data/downtimeReasons","../core/Model"],function(e,o,t,s){"use strict";function r(e){return e?Math.round(100*e):0}function n(e){return e?Math.round(100*e)/100:0}return s.extend({urlRoot:"/reports/4",defaults:function(){return{lossReasons:{},effAndProd:{efficiency:[],productivity:[],byDivision:{}},workTimes:{total:0,sap:0,otherWorks:0,downtimes:[],downtimeCategories:[]},machineTimes:{categories:[],machineMedian:[],work:[],operatorMedian:[]},quantities:{good:0,bad:0,losses:{},lossCategories:[]},notes:{count:0,worksheets:[]}}},initialize:function(e,o){if(!o.query)throw new Error("query option is required!");this.query=o.query},fetch:function(o){return e.isObject(o)||(o={}),o.data=e.extend(o.data||{},this.query.serializeToObject()),s.prototype.fetch.call(this,o)},parse:function(e){return this.query.updateUsers(this.resolveUsers(e.options)),{lossReasons:e.options.lossReasons,effAndProd:this.parseEffAndProd(e.results.effAndProd),workTimes:this.parseWorkTimes(e.results.workTimes),machineTimes:this.parseMachineTimes(e.results.machineTimes),quantities:this.parseQuantities(e.options.lossReasons,e.results.quantities),notes:e.results.notes}},resolveUsers:function(e){return"masters"===e.mode?e.masters:"operators"===e.mode?e.operators:[]},parseEffAndProd:function(e){var t=o.filter(function(e){return"prod"===e.get("type")}).map(function(e){return e.id}).sort(function(e,o){return e.localeCompare(o,void 0,{numeric:!0,ignorePunctuation:!0})}),s={efficiency:[],productivity:[],byDivision:{}};return t.forEach(function(e){s.byDivision[e]=[]}),Object.keys(e).forEach(function(o){var n=e[o],i=+o;s.efficiency.push({x:i,y:r(n.eff)}),s.productivity.push({x:i,y:r(n.prod)}),t.forEach(function(e){s.byDivision[e].push({x:i,y:r(n[e])})})}),s},parseWorkTimes:function(e){var o={total:[n(e.total)],sap:[n(e.sap)],otherWorks:[n(e.otherWorks)],downtimes:[],downtimeCategories:[]},s=[];return Object.keys(e.downtimes).forEach(function(o){var r=t.get(o);s.push({shortText:o,longText:r?r.getLabel():o,value:n(e.downtimes[o])})}),s.sort(function(e,o){return o.value-e.value}).forEach(function(e){o.downtimeCategories.push(e.shortText),o.downtimes.push({name:e.longText,y:e.value})}),o},parseMachineTimes:function(e){var o={categories:[],machineMedian:[],work:[],operatorMedian:[]},t=Object.keys(e),s=t.length>10;return t.forEach(function(t,r){var i=e[t];o.categories.push(s?r.toString(36).toUpperCase():t),s?(o.machineMedian.push({y:n(i.machineAdjustingMedian),name:t}),o.work.push({y:n(i.work),name:t}),o.operatorMedian.push({y:n(i.operatorAdjustingMedian),name:t})):(o.machineMedian.push(n(i.machineAdjustingMedian)),o.work.push(n(i.work)),o.operatorMedian.push(n(i.operatorAdjustingMedian)))}),o},parseQuantities:function(e,o){var t={total:[n(o.good+o.bad)],good:[n(o.good)],bad:[n(o.bad)],losses:[],lossCategories:[]},s=[];return Object.keys(o.losses).forEach(function(t){s.push({shortText:t,longText:e[t]||t,value:n(o.losses[t])})}),s.sort(function(e,o){return o.value-e.value}).forEach(function(e){t.lossCategories.push(e.shortText),t.losses.push({name:e.longText,y:n(e.value)})}),t}})});