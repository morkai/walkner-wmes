// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../data/aors","../data/downtimeReasons","../core/Model"],function(o,n,t,r){"use strict";return r.extend({urlRoot:"/reports/clip",defaults:function(){return{orgUnitType:null,orgUnit:null,orderHash:null,orderCount:0,parent:null,children:[],clip:{orderCount:[],production:[],productionCount:[],endToEnd:[],endToEndCount:[]},maxClip:{orderCount:0,production:0,endToEnd:0}}},initialize:function(o,n){if(!n.query)throw new Error("query option is required!");this.query=n.query},fetch:function(n){return o.isObject(n)||(n={}),n.data=o.extend(n.data||{},this.query.serializeToObject(this.get("orgUnitType"),this.get("orgUnit"))),r.prototype.fetch.call(this,n)},parse:function(o){var n={orderHash:o.orderHash,orderCount:o.orderCount,parent:o.parent,children:o.children,clip:null,maxClip:null};return this.parseClip(o.groups,n),n},parseClip:function(o,n){var t={orderCount:[],productionCount:[],endToEndCount:[],production:[],endToEnd:[]},r={orderCount:0,productionCount:0,endToEndCount:0,production:0,endToEnd:0};o.forEach(function(o){var n=Math.round(o.productionCount/o.orderCount*100)||0,e=Math.round(o.endToEndCount/o.orderCount*100)||0;t.orderCount.push({x:o.key,y:o.orderCount}),t.production.push({x:o.key,y:n}),t.productionCount.push({x:o.key,y:o.productionCount}),t.endToEnd.push({x:o.key,y:e}),t.endToEndCount.push({x:o.key,y:o.endToEndCount}),r.orderCount=Math.max(r.orderCount,o.orderCount),r.productionCount=Math.max(r.productionCount,o.productionCount),r.endToEndCount=Math.max(r.endToEndCount,o.endToEndCount),r.production=Math.max(r.production,n),r.endToEnd=Math.max(r.endToEnd,e)}),n.clip=t,n.maxClip=r},isEmpty:function(){return 0===this.attributes.clip.orderCount.length}})});