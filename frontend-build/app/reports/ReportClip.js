// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../core/Model","../data/colorFactory"],function(o,n,e){"use strict";return n.extend({nlsDomain:"reports",urlRoot:"/reports/clip",defaults:function(){return{orgUnitType:null,orgUnit:null,orderHash:null,orderCount:0,parent:null,children:[],mrps:[],clip:{orderCount:[],production:[],productionCount:[],endToEnd:[],endToEndCount:[]},delayReasons:[],maxClip:{orderCount:0,production:0,endToEnd:0},maxDelayReasons:0}},initialize:function(o,n){if(!n.query)throw new Error("query option is required!");this.query=n.query,this.delayReasons=n.delayReasons},fetch:function(e){return o.isObject(e)||(e={}),e.data=o.extend(e.data||{},this.query.serializeToObject(this.get("orgUnitType"),this.get("orgUnit"))),n.prototype.fetch.call(this,e)},parse:function(o){var n={orderHash:o.orderHash,orderCount:o.orderCount,parent:o.parent,children:o.children,mrps:o.mrps,clip:null,delayReasons:null,maxClip:null,maxDelayReasons:null};return this.parseClip(o.groups,n),this.parseDelayReasons(o.delayReasons,n),n},parseClip:function(o,n){var e={orderCount:[],productionCount:[],endToEndCount:[],production:[],endToEnd:[]},t={orderCount:0,productionCount:0,endToEndCount:0,production:0,endToEnd:0};o.forEach(function(o){var n=Math.round(o.productionCount/o.orderCount*100)||0,r=Math.round(o.endToEndCount/o.orderCount*100)||0;e.orderCount.push({x:o.key,y:o.orderCount}),e.production.push({x:o.key,y:n}),e.productionCount.push({x:o.key,y:o.productionCount}),e.endToEnd.push({x:o.key,y:r}),e.endToEndCount.push({x:o.key,y:o.endToEndCount}),t.orderCount=Math.max(t.orderCount,o.orderCount),t.productionCount=Math.max(t.productionCount,o.productionCount),t.endToEndCount=Math.max(t.endToEndCount,o.endToEndCount),t.production=Math.max(t.production,n),t.endToEnd=Math.max(t.endToEnd,r)}),n.clip=e,n.maxClip=t},parseDelayReasons:function(o,n){var t=this;n.maxDelayReasons=0,n.delayReasons=[],o.forEach(function(o){var r=t.delayReasons&&t.delayReasons.get(o._id);n.delayReasons.push({name:r?r.getLabel():o._id,y:o.count,color:e.getColor("delayReasons",o._id)}),n.maxDelayReasons=Math.max(n.maxDelayReasons,o.count)})},isEmpty:function(){return 0===this.attributes.clip.orderCount.length}})});