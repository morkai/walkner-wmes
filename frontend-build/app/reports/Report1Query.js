// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","../time","../core/Model","../data/orgUnits","./Report1"],function(t,e,r,n,i){"use strict";return r.extend({defaults:{orgUnitType:null,orgUnitId:null,from:null,to:null,interval:"hour",ignoredOrgUnits:null},reset:function(t){this.set(this.constructor.fromQuery(t).attributes,{reset:!0})},createReports:function(t,e,r){var o=[],s=this.get("orgUnitType"),g=n.getByTypeAndId(s,this.get("orgUnitId"));t||(t=new i({orgUnitType:this.get("orgUnitType"),orgUnit:g},r)),o.push(t);var u,d=n.getChildType(s);return u=g?n.getChildren(g):n.getAllDivisions().filter(function(t){return"prod"===t.get("type")}),u.sort(function(t,e){return t.getLabel().localeCompare(e.getLabel())}),u.forEach(function(t){e&&t===e.get("orgUnit")?o.push(e):o.push(new i({orgUnitType:d,orgUnit:t},r))}),o},serializeToObject:function(t,e){var r={interval:this.get("interval"),from:this.get("from"),to:this.get("to"),orgUnitType:void 0,orgUnitId:void 0,ignoredOrgUnits:this.serializeIgnoredOrgUnits()};if(!r.from||!r.to){var n=this.getFirstShiftMoment();r.from=n.toISOString(),r.to=n.add(1,"days").toISOString()}return t&&e&&(r.orgUnitType=t,r.orgUnitId=e.id),r},serializeToString:function(e,r){var n="",i=this.attributes;return i.interval&&(n+="&interval="+i.interval),i.from&&i.to&&(n+="&from="+encodeURIComponent(i.from),n+="&to="+encodeURIComponent(i.to)),2===arguments.length&&void 0!==e?e&&(n+="&orgUnitType="+e,n+="&orgUnitId="+encodeURIComponent(r)):i.orgUnitType&&(n+="&orgUnitType="+i.orgUnitType,n+="&orgUnitId="+encodeURIComponent(i.orgUnitId)),t.isEmpty(i.ignoredOrgUnits)||(n+="&ignoredOrgUnits="+encodeURIComponent(this.serializeIgnoredOrgUnits())),n.substr(1)},serializeIgnoredOrgUnits:function(){return btoa(JSON.stringify(this.attributes.ignoredOrgUnits))},getFirstShiftMoment:function(){var t=e.getMoment();return t.hours()>=0&&t.hours()<6&&t.subtract(1,"days"),t.hours(6).minutes(0).seconds(0).milliseconds(0)},isAutoMode:function(){return!this.get("from")&&!this.get("to")},toString:function(){return this.serializeToString()}},{fromQuery:function(t){return t&&t.ignoredOrgUnits&&(t.ignoredOrgUnits=JSON.parse(atob(t.ignoredOrgUnits))),new this(t)}})});