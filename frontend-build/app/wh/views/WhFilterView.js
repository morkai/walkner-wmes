define(["underscore","jquery","app/i18n","app/time","app/core/View","app/mrpControllers/util/setUpMrpSelect2","app/wh/templates/planFilter"],function(t,e,a,s,n,i,p){"use strict";return n.extend({template:p,events:{"input #-date":"changeFilter","change #-date":"changeFilter","change #-whStatuses":"changeFilter","change #-psStatuses":"changeFilter","change #-from":"changeFilter","change #-to":"changeFilter","click #-useDarkerTheme":function(){this.plan.displayOptions.toggleDarkerThemeUse()}},initialize:function(){var t=this.plan,e=t.displayOptions;this.listenTo(t,"change:loading",this.onLoadingChanged),this.listenTo(t,"change:_id",this.onDateChanged),this.listenTo(e,"change:minDate change:maxDate",this.onMinMaxDateChanged),this.listenTo(e,"change:useDarkerTheme",this.updateToggles)},destroy:function(){this.$(".is-expandable").expandableSelect("destroy")},getTemplateData:function(){var t=this.plan,e=t.displayOptions;return{date:t.id,minDate:e.get("minDate"),maxDate:e.get("maxDate"),whStatuses:e.get("whStatuses"),psStatuses:e.get("psStatuses"),from:e.get("from"),to:e.get("to"),useDarkerTheme:e.isDarkerThemeUsed()}},afterRender:function(){this.$(".is-expandable").expandableSelect()},updateToggles:function(){this.$id("useDarkerTheme").toggleClass("active",this.plan.displayOptions.isDarkerThemeUsed())},changeFilter:function(){var e=this,a=e.$id("whStatuses"),s=e.$id("psStatuses"),n=e.$id("date").val(),i={whStatuses:a.val(),psStatuses:s.val(),from:e.$id("from").val()||"06:00",to:e.$id("to").val()||"06:00"};i.whStatuses&&i.whStatuses.length!==a[0].options.length||(i.whStatuses=[]),i.psStatuses&&i.psStatuses.length!==s[0].options.length||(i.psStatuses=[]);var p={};["whStatuses","psStatuses","from","to"].forEach(function(a){t.isEqual(i[a],e.plan.displayOptions.get(a))||(p[a]=i[a])}),t.isEmpty(p)||e.plan.displayOptions.set(p),/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(n)&&n!==e.plan.id&&e.plan.set("_id",n)},onLoadingChanged:function(){var t=this,e=t.plan.get("loading");["date","whStatuses","psStatuses","from","to"].forEach(function(a){t.$id(a).prop("disabled",e)})},onDateChanged:function(){this.$id("date").val(this.plan.id)},onMinMaxDateChanged:function(){this.$id("date").prop("min",this.plan.displayOptions.get("minDate")).prop("max",this.plan.displayOptions.get("maxDate"))}})});