define(["underscore","jquery","app/core/views/FormView","app/core/util/idAndLabel","app/data/orgUnits","app/orgUnits/util/setUpOrgUnitSelect2","app/wmes-ct-lines/templates/form","app/wmes-ct-lines/templates/_inveoForm","app/wmes-ct-lines/templates/_luma2Form"],function(t,e,i,n,o,r,a,s,c){"use strict";var l={inveo:s,luma2:c};return i.extend({template:a,events:t.assign({"click #-addStation":function(){this.addStation().find("input").first().focus(),this.recalcStationNo()},'click .btn[role="moveUp"]':function(t){var e=this.$(t.currentTarget).closest(".panel"),i=e.prev();i.length&&(e.insertBefore(i),this.recalcStationNo(),t.currentTarget.focus())},'click .btn[role="moveDown"]':function(t){var e=this.$(t.currentTarget).closest(".panel"),i=e.next();i.length&&(e.insertAfter(i),this.recalcStationNo(),t.currentTarget.focus())},'click .btn[role="remove"]':function(t){var i=this;i.$(t.currentTarget).closest(".panel").fadeOut("fast",function(){e(this).remove(),i.recalcStationNo()})},'change input[name="type"]':function(){this.$id("stations").empty()}},i.prototype.events),initialize:function(){i.prototype.initialize.apply(this,arguments),this.nextStationIndex=0},afterRender:function(){var e=this;t.forEach(e.model.get("stations"),function(t){e.addStation(e.model.get("type"),t)}),i.prototype.afterRender.call(e);var n=e.$id("id");e.options.editMode?(n.prop("readonly",!0),e.$('input[name="type"]').prop("disabled",!0),e.$id("active").focus()):(r(n,{orgUnitType:"prodLine",itemFilter:function(t){var e=o.getByTypeAndId("subdivision",o.getAllForProdLine(t.model).subdivision);return e&&"assembly"===e.get("type")}}),n.select2("focus")),e.recalcStationNo()},addStation:function(t){t||(t=this.$('[name="type"]:checked').val());var e=l[t];if(!e)throw new Error("Invalid type: "+t);var i=this.renderPartial(e,{idPrefix:this.idPrefix+"-"+this.nextStationIndex,stationIndex:this.nextStationIndex});return this.$id("stations").append(i),++this.nextStationIndex,i},recalcStationNo:function(){var t=this;this.$id("stations").find(".panel-heading-title").each(function(e){this.innerText=t.t("stations:title",{no:e+1})})},serializeForm:function(t){return Array.isArray(t.stations)||(t.stations=this.$id("stations").children().map(function(){return{}}).get()),t}})});