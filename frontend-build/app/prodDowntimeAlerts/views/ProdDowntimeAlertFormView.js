// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["underscore","app/i18n","app/core/views/FormView","app/core/util/idAndLabel","app/users/util/setUpUserSelect2","app/data/orgUnits","app/data/downtimeReasons","app/data/aors","../ProdDowntimeAlert","app/prodDowntimeAlerts/templates/form"],function(i,t,n,e,o,s,d,r,a,l){"use strict";function c(i,t){return s.getAllByType(i).filter(function(i){return!i.get("deactivatedAt")}).map(t||e)}var u={reason:function(){return d.map(e)},aor:function(){return r.map(e)},division:function(){return c("division")},subdivision:function(){return c("subdivision",function(i){return{id:i.id,text:i.get("division")+" \\ "+i.get("name")}})},mrpController:function(){return c("mrpController")},prodFlow:function(){return c("prodFlow")},workCenter:function(){return c("workCenter")},prodLine:function(){return c("prodLine")}};return n.extend({template:l,events:i.extend({"click #-addCondition":function(){var i=this.$id("conditionTypes"),t=i.val();if(""!==t){var n=this.$id("conditions-"+t);n.closest(".form-group").removeClass("hidden"),n.select2("data",null).select2("focus");var e=i[0].selectedOptions[0];e.selected=!1,e.disabled=!0,e.hidden=!0,i.val(""),this.onConditionsChange()}},"click .prodDowntimeAlerts-form-conditions-remove":function(i){var t=this.$(i.target).closest(".form-group").addClass("hidden"),n=t.attr("data-type");this.$id("conditions-"+n).select2("data",null),this.$id("conditionTypes").find('option[value="'+n+'"]').prop({disabled:!1,hidden:!1}),this.onConditionsChange()},'change input[name$="values"]':"onConditionsChange"},n.prototype.events),serialize:function(){return i.extend(n.prototype.serialize.call(this),{conditions:this.serializeConditions()})},serializeConditions:function(){var t=this.model.get("conditions")||[],n={},e=[];return i.forEach(t,function(i){n[i.type]=i}),i.forEach(a.CONDITION_TYPES,function(i){var t=n[i];e.push({hidden:!t,mode:t?t.mode:"include",type:i,values:t?t.values.join(","):""})}),this.conditions=e,e},serializeToForm:function(){var i=this.model.toJSON();return i.conditions=this.conditions,i},serializeForm:function(t){var n=this;return t.conditions=t.conditions.filter(function(t){return!i.isEmpty(t.values)}).map(function(t){var e={mode:t.mode,type:t.type,labels:[],values:[]};return i.forEach(n.$id("conditions-"+t.type).select2("data"),function(i){e.labels.push(i.text),e.values.push(i.id)}),e}),t},checkValidity:function(){return!1},afterRender:function(){n.prototype.afterRender.call(this),i.forEach(a.CONDITION_TYPES,this.setUpConditionSelect2.bind(this)),this.onConditionsChange()},setUpConditionSelect2:function(i){this.$id("conditions-"+i).select2({multiple:!0,data:u[i](this)})},onConditionsChange:function(){this.toggleConditionsValidity(),this.toggleEmptyConditionsMessage()},hasAnyValidConditions:function(){return i.some(a.CONDITION_TYPES,function(i){return""!==this.$id("conditions-"+i).val()},this)},hasAnySelectedConditions:function(){return this.$id("conditionTypes").children().filter("[disabled]").length>1},toggleConditionsValidity:function(){this.$id("conditionTypes")[0].setCustomValidity(this.hasAnyValidConditions()?"":t("prodDowntimeAlerts","FORM:ERROR:conditions"))},toggleEmptyConditionsMessage:function(){this.$id("conditions-empty").toggleClass("hidden",this.hasAnySelectedConditions())}})});