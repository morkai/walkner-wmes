// Copyright (c) 2014, ≈Åukasz Walukiewicz <lukasz@walukiewicz.eu>. Some Rights Reserved.
// Licensed under CC BY-NC-SA 4.0 <http://creativecommons.org/licenses/by-nc-sa/4.0/>.
// Part of the walkner-wmes project <http://lukasz.walukiewicz.eu/p/walkner-wmes>

define(["underscore","app/core/views/FilterView","app/users/util/setUpUserSelect2","../dictionaries","app/kaizenOrders/templates/filter"],function(e,s,t,r,n){"use strict";return s.extend({template:n,events:e.extend({'change input[name="userType"]':"toggleUserSelect2"},s.prototype.events),defaultFormData:function(){return{types:[].concat(r.types),status:[].concat(r.statuses),section:null,area:null,category:null,risk:null,cause:null,userType:"others",user:null}},termToForm:{types:function(e,s,t){t[e]=s.args[1]},nearMissCategory:function(e,s,t){t.category="nearMiss."+s.args[1]},suggestionCategory:function(e,s,t){t.category="suggestion."+s.args[1]},"observers.user.id":function(e,s,t){"mine"===s.args[1]?(t.userType="mine",t.user=null):"unseen"===s.args[1]?(t.userType="unseen",t.user=null):(t.userType="others",t.user=s.args[1])},status:"types",section:"types",area:"types",risk:"types",cause:"types"},serialize:function(){return e.extend(s.prototype.serialize.call(this),{types:r.types,statuses:r.statuses,sections:r.sections.toJSON(),areas:r.areas.toJSON(),nearMissCategories:e.invoke(r.categories.inNearMiss(),"toJSON"),suggestionCategories:e.invoke(r.categories.inSuggestion(),"toJSON"),risks:r.risks.toJSON(),causes:r.causes.toJSON()})},serializeFormToQuery:function(e){var s=this.$id("category").val().split("."),t=this.$('input[name="userType"]:checked').val(),r=this.$id("user").val();2===s.length&&e.push({name:"eq",args:[s[0]+"Category",s[1]]}),"mine"===t||"unseen"===t?e.push({name:"eq",args:["observers.user.id",t]}):r&&e.push({name:"eq",args:["observers.user.id",r]}),["types","status","section","area","risk","cause"].forEach(function(s){var t=this.$id(s).val();t&&e.push({name:"eq",args:[s,t]})},this)},afterRender:function(){s.prototype.afterRender.call(this),t(this.$id("user"),{view:this}),this.toggleUserSelect2()},toggleUserSelect2:function(){this.$id("user").select2("enable","others"===this.$('input[name="userType"]:checked').val())}})});