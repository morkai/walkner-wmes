// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

define(["underscore","app/i18n","app/highcharts","app/core/View","app/reports/util/formatTooltipHeader"],function(t,i,e,s,o){"use strict";return s.extend({initialize:function(){this.chart=null,this.isLoading=!1,this.listenTo(this.model,"request",this.onModelLoading),this.listenTo(this.model,"sync",this.onModelLoaded),this.listenTo(this.model,"error",this.onModelError),this.listenTo(this.model,"change:"+this.options.metric,this.render),this.listenTo(this.model,"grouping:"+this.options.metric,this.render)},destroy:function(){null!==this.chart&&(this.chart.destroy(),this.chart=null)},afterRender:function(){this.timers.createOrUpdate&&clearTimeout(this.timers.createOrUpdate),this.timers.createOrUpdate=setTimeout(this.createOrUpdate.bind(this),1)},createOrUpdate:function(){this.timers.createOrUpdate=null,this.chart?this.updateChart():(this.createChart(),this.isLoading&&this.chart.showLoading())},createChart:function(){var t=this,s=t.model.getNlsDomain(),r=t.options.metric,a=t.serializeSeries(),n=t.serializeCategories(),h=this.options.yAxisUnit||this.options.unit||"",l=this.options.valueDecimals>=0?this.options.valueDecimals:2,d=l;h&&2===d&&(a[0].data.length>52?d=0:a[0].data.length>39&&(d=1)),this.chart=new e.Chart({chart:{renderTo:this.el,plotBorderWidth:1,type:"column"},exporting:{filename:i.bound(s,"report:filenames:"+r),chartOptions:{title:{text:i.bound(s,"report:title:"+r)}}},title:!1,noData:{},xAxis:n?{categories:n}:{type:"datetime"},yAxis:{title:!1,min:0,labels:{format:"{value}"+h}},tooltip:{shared:!0,valueDecimals:l,valueSuffix:h,headerFormatter:n?null:o.bind(this)},legend:{enabled:a.length>1},plotOptions:{column:{stacking:a.length>10?"normal":null,dataLabels:{enabled:(!!n||1===a.length)&&!1!==this.options.dataLabels,format:"{y:."+d+"f}"}}},series:a})},updateChart:function(){this.chart.destroy(),this.createChart()},isTotalGrouping:function(){return!!this.model.get(this.options.metric).seriesTotal&&"total"===this.model.getMetricGrouping(this.options.metric)},serializeCategories:function(){return this.model.get(this.options.metric).categories},serializeSeries:function(){var t=this.model.get(this.options.metric);return t.seriesTotal&&"total"===this.model.getMetricGrouping(this.options.metric)?t.seriesTotal:t.series},onModelLoading:function(){this.isLoading=!0,this.chart&&this.chart.showLoading()},onModelLoaded:function(){this.isLoading=!1,this.chart&&this.chart.hideLoading()},onModelError:function(){this.isLoading=!1,this.chart&&this.chart.hideLoading()}})});