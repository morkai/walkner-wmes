define(["underscore","h5.rql/index","app/i18n","app/time","app/core/Model","app/data/colorFactory","app/wmes-osh-common/dictionaries","./util/createDefaultFilter"],function(t,e,r,o,s,a,l,i){"use strict";const n={total:"#ddd",metric:"#2f7ed8",nearMiss:"#d9534f",kaizen:"#5cb85c",action:"#31b0d5",observation:"#ec971f"},c=["division","workplace","department"];return s.extend({urlRoot:"/osh/reports/metrics",nlsDomain:"wmes-osh-reports",defaults:function(){return{}},initialize:function(t,e){this.rqlQuery=e.rqlQuery&&!e.rqlQuery.isEmpty()?e.rqlQuery:i({orgUnitProperty:"",dateProperty:"date",interval:"month"})},fetch:function(e){return t.isObject(e)||(e={}),e.data=this.rqlQuery.toString(),s.prototype.fetch.call(this,e)},genClientUrl:function(){return`/osh/reports/metrics?${this.rqlQuery.toString()}`},parse:function(t){const e={interval:t.options.interval};return this.parseIpMetrics(e,t),this.parseEntriesMetrics(e,t),this.parseUsersMetrics(e,t),this.parseFteMetrics(e,t),e},parseIpMetrics:function(t,e){const{totals:o}=e;["ipr","ips","ipp"].forEach(s=>{const i={id:"total",abs:o[s],rel:1,color:n.metric,label:r(this.nlsDomain,`metrics:series:${s}`)};t[`${s}-total`]={rows:[i],series:{total:{name:i.label,color:i.color,data:[]}}},c.forEach(e=>{t[`${s}-${e}`]={rows:Object.keys(o.byOrgUnit[e]).filter(t=>o.byOrgUnit[e][t][s]>0).map(t=>{return{id:t,abs:o.byOrgUnit[e][t][s],rel:null,color:a.getColor(`wmes-osh/${e}`,t),label:"0"===t?"?":l.getLabel(e,+t)}}).sort((t,e)=>e.abs-t.abs),series:{}}}),e.groups.forEach(e=>{t[`${s}-total`].series.total.data.push({x:e.key,y:e[s]}),c.forEach(r=>{const{rows:o,series:a}=t[`${s}-${r}`];o.forEach(t=>{a[t.id]||(a[t.id]={name:t.label,color:t.color,data:[]});const o=e.byOrgUnit[r][t.id];a[t.id].data.push({x:e.key,y:o&&o[s]||null})})})})})},parseEntriesMetrics:function(t,e){const{totals:o}=e;t["entries-total"]={rows:[],series:{}},["nearMiss","kaizen","action","observation"].forEach(e=>{const s={id:e,abs:o[`${e}Count`],rel:o[`${e}Count`]/o.entryCount,color:n[e],label:r(this.nlsDomain,`series:${e}`)};t["entries-total"].rows.push(s),t["entries-total"].series[s.id]={name:s.label,color:s.color,data:[]}}),c.forEach(e=>{t[`entries-${e}`]={rows:Object.keys(o.byOrgUnit[e]).filter(t=>o.byOrgUnit[e][t].entryCount>0).map(t=>{const r=o.byOrgUnit[e][t];return{id:t,abs:r.entryCount,rel:r.entryCount/o.entryCount,color:a.getColor(`wmes-osh/${e}`,t),label:"0"===t?"?":l.getLabel(e,+t)}}).sort((t,e)=>e.abs-t.abs),series:{}}}),e.groups.forEach(e=>{t["entries-total"].rows.forEach(r=>{t["entries-total"].series[r.id].data.push({x:e.key,y:e[`${r.id}Count`]})}),c.forEach(r=>{const{rows:o,series:s}=t[`entries-${r}`];o.forEach((t,o)=>{s[t.id]||(s[t.id]={index:o,name:t.label,color:t.color,data:[]});const a=e.byOrgUnit[r][t.id];s[t.id].data.push({x:e.key,y:a&&a.entryCount||null})})})}),c.concat("total").forEach(e=>{t[`entries-${e}`].rows.push({id:"total",abs:o.entryCount,rel:1,color:n.total,label:r(this.nlsDomain,"series:all")})})},parseUsersMetrics:function(t,e){const{totals:o}=e,s={id:"total",abs:o.userCount,rel:1,color:n.metric,label:r(this.nlsDomain,"series:users")};t["users-total"]={rows:[s],series:{total:{name:s.label,color:s.color,data:[]}}},c.forEach(e=>{t[`users-${e}`]={rows:Object.keys(o.byOrgUnit[e]).filter(t=>o.byOrgUnit[e][t].userCount>0).map(t=>{const r=o.byOrgUnit[e][t];return{id:t,abs:r.userCount,rel:r.userCount/o.userCount,color:a.getColor(`wmes-osh/${e}`,t),label:"0"===t?"?":l.getLabel(e,+t)}}).sort((t,e)=>e.abs-t.abs),series:{}}}),e.groups.forEach(e=>{t["users-total"].series.total.data.push({x:e.key,y:e.userCount}),c.forEach(r=>{const{rows:o,series:s}=t[`users-${r}`];o.forEach((t,o)=>{s[t.id]||(s[t.id]={index:o,name:t.label,color:t.color,data:[]});const a=e.byOrgUnit[r][t.id];s[t.id].data.push({x:e.key,y:a&&a.userCount||null})})})}),c.forEach(e=>{t[`users-${e}`].rows.push({id:"total",abs:o.userCount,rel:1,color:n.total,label:r(this.nlsDomain,"series:all")})})},parseFteMetrics:function(t,e){const{totals:o}=e,s={id:"total",abs:o.fte.total,rel:1,color:n.metric,label:r(this.nlsDomain,"series:fte")};t["fte-total"]={rows:[s],series:{total:{name:s.label,color:s.color,data:[]}}},c.forEach(e=>{t[`fte-${e}`]={rows:Object.keys(o.byOrgUnit[e]).filter(t=>o.byOrgUnit[e][t].fte.total>0).map(t=>{const r=o.byOrgUnit[e][t];return{id:t,abs:r.fte.total,rel:r.fte.total/o.fte.total,color:a.getColor(`wmes-osh/${e}`,t),label:"0"===t?"?":l.getLabel(e,+t)}}).sort((t,e)=>e.abs-t.abs),series:{}}}),e.groups.forEach(e=>{t["fte-total"].series.total.data.push({x:e.key,y:e.fte.total}),c.forEach(r=>{const{rows:o,series:s}=t[`fte-${r}`];o.forEach((t,o)=>{s[t.id]||(s[t.id]={index:o,name:t.label,color:t.color,data:[]});const a=e.byOrgUnit[r][t.id];s[t.id].data.push({x:e.key,y:a&&a.fte.total||null})})})}),c.forEach(e=>{t[`fte-${e}`].rows.push({id:"total",abs:o.fte.total,rel:1,color:n.total,label:r(this.nlsDomain,"series:total")})})},getInterval:function(){const t=this.rqlQuery.selector.args.find(t=>"eq"===t.name&&"interval"===t.args[0]);return t?t.args[1]:"month"}})});