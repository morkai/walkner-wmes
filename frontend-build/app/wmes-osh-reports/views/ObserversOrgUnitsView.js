define(["jquery","app/core/View","app/wmes-osh-common/dictionaries","app/wmes-osh-departments/Department","app/wmes-osh-reports/templates/observers/orgUnits","jquery.stickytableheaders"],function(e,t,s,r,i){"use strict";return t.extend({template:i,initialize:function(){this.listenTo(this.model,"change:orgUnits",this.render),this.setUpTooltips(),this.setUpStickyTable()},getTemplateData:function(){return{rows:this.serializeRows(),n:e=>e>=0?(Math.round(100*e)/100).toLocaleString():""}},setUpTooltips:function(){this.on("afterRender",()=>{this.$el.tooltip({container:document.body,selector:"th[title]"})}),this.on("beforeRender remove",()=>{this.$el.popover("destroy")})},setUpStickyTable:function(){this.on("afterRender",()=>{this.$(".table").stickyTableHeaders({fixedOffset:e(".navbar-fixed-top"),scrollableAreaX:this.$el})}),this.on("beforeRender remove",()=>{this.$(".table").stickyTableHeaders("destroy")})},serializeRows:function(){const e=this.createRow("total"),t={},i={},o=[],n=new r({_id:0,longName:"?"});return this.model.get("orgUnits").forEach(r=>{const a=s.departments.get(r.department)||n,c=a?s.workplaces.get(a.get("workplace")):null,l=c?s.divisions.get(c.get("division")):null;if(l){if(t[l.id])this.incRow(t[l.id],r);else{const e=this.createRow("division",l,null,null,r);t[l.id]=e,o.push(e)}t[l.id].children+=1}if(c){if(i[c.id])this.incRow(i[c.id],r);else{const e=this.createRow("workplace",l,c,null,r);i[c.id]=e,o.push(e),l&&(t[l.id].children+=1)}i[c.id].children+=1}const d=a===n?"unknown":"department",m=this.createRow(d,l,c,a,r);o.push(this.summarizeRow(m)),this.incRow(e,r)}),Object.values(t).forEach(this.summarizeRow,this),Object.values(i).forEach(this.summarizeRow,this),o.sort((e,t)=>e.division.localeCompare(t.division)||e.workplace.localeCompare(t.workplace)||e.department.localeCompare(t.department)),o.push(this.summarizeRow(e)),o},createRow:function(e,t,s,r,i={}){return{type:e,children:1,division:t?t.getLabel({long:!1}):"",workplace:s?s.getLabel({long:!1}):"",department:r?r.getLabel():"",employees:i.employees||0,observers:i.observers||0,observersPercent:0,observersInvalid:!1,safePercent:0,safeInvalid:!1,easyPercent:0,cardsPercent:0,cardsInvalid:!1,metrics:i.metrics||[0,0,0,0,0,0,0,0,0,0]}},incRow:function(e,t){e.employees+=t.employees,e.observers+=t.observers,t.metrics.forEach((t,s)=>{e.metrics[s]+=t})},summarizeRow:function(e){const{minSafeObs:t,maxSafeObs:s,observersPerDepartment:r,obsCardsPerDepartment:i}=this.model.get("settings");return e.observersPercent=Math.round(e.observers/e.employees*100)||0,e.observersInvalid=e.observersPercent>=0&&e.observersPercent<r,e.cardsPercent=Math.round(e.metrics[0]/e.employees*100)||0,e.cardsInvalid=e.cardsPercent>=0&&e.cardsPercent<i,e.safePercent=Math.round(e.metrics[3]/e.metrics[1]*100)||0,e.safeInvalid=e.safePercent<t||e.safePercent>s,e.easyPercent=Math.round((e.metrics[6]+e.metrics[9])/(e.metrics[5]+e.metrics[8])*100)||0,e}})});