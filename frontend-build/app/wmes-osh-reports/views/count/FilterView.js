define(["app/user","app/core/views/FilterView","app/core/util/forms/dateTimeRange","app/core/util/forms/dropdownRadio","app/users/util/setUpUserSelect2","app/wmes-osh-common/dictionaries","app/wmes-osh-common/views/OrgUnitPickerFilterView","app/wmes-osh-reports/templates/count/filter","app/core/util/ExpandableSelect"],function(e,t,i,s,a,r,n,o){"use strict";const l={nearMiss:"wmes-osh-nearMisses",kaizen:"wmes-osh-kaizens",action:"wmes-osh-actions",observation:"wmes-osh-observations",accident:"wmes-osh-accidents"},p={nearMiss:["status","user","kind","eventCategory","reasonCategory","priority"],kaizen:["status","user","kind","kaizenCategory"],action:["status","user","kind","activityKind"],observation:["status","user","observationKind"],accident:[]};return t.extend({template:o,nlsDomain:function(){return l[this.model.type]},filterList:function(){return p[this.model.type]},filterMap:{createdAt:"date",eventDate:"date",date:"date",startedAt:"date",plannedAt:"date",implementedAt:"date",finishedAt:"date"},events:Object.assign({"click a[data-date-time-range]":i.handleRangeEvent,'change input[name="userType"]':function(){this.toggleUserSelect2(!0)},"click #-clearObs":"clearObsFilter"},t.prototype.events),defaultFormData:function(){return{userType:"others",dateFilter:"createdAt"}},termToForm:{createdAt:i.rqlToForm,eventDate:i.rqlToForm,date:i.rqlToForm,startedAt:i.rqlToForm,implementedAt:i.rqlToForm,plannedAt:i.rqlToForm,finishedAt:i.rqlToForm,interval:(e,t,i)=>{i[e]=t.args[1]},workplace:(e,t,i)=>{i[e]="in"===t.name?t.args[1].join(","):t.args[1]},department:"workplace",building:"workplace",location:"workplace",station:"workplace",eventCategory:"workplace",reasonCategory:"workplace",kaizenCategory:"workplace",activityKind:"workplace",kind:(e,t,i)=>{i[e]="in"===t.name?t.args[1]:[t.args[1]]},observationKind:"kind",priority:"kind",status:"kind","creator.id":(e,t,i)=>{i.userType=e.split(".")[0],i.user=t.args[1]},"implementer.id":"creator.id","implementers.id":"creator.id","participants.id":"creator.id","coordinators.id":"creator.id","users.user.id":(e,t,i)=>{"mine"===t.args[1]?(i.userType="mine",i.user=null):"unseen"===t.args[1]?(i.userType="unseen",i.user=null):(i.userType="others",i.user=t.args[1])},"@observation":(e,t,i)=>{i.obsType=t.args[0],i.obsFilter=t.args[1]||"any",i.obsCategory=(t.args[2]||[]).join(",")}},initialize:function(){t.prototype.initialize.apply(this,arguments),this.setView("#-locationPath",new n({filterView:this,emptyLabel:this.t("PROPERTY:locationPath")}))},destroy:function(){t.prototype.destroy.call(this),this.$(".is-expandable").expandableSelect("destroy")},getTemplateData:function(){return{type:this.model.type,statuses:this.serializeStatuses(),kinds:this.serializeKinds(),observationKinds:this.serializeObservationKinds(),priorities:this.serializePriorities()}},serializeStatuses:function(){return r.statuses[this.model.type].map(e=>({value:e,label:r.getLabel("status",e)}))},serializeKinds:function(){return"observation"===this.model.type?[]:r.kinds.map(e=>({value:e.id,label:e.getLabel({long:!0})}))},serializeObservationKinds:function(){return"observation"!==this.model.type?[]:r.observationKinds.map(e=>({value:e.id,label:e.getLabel({long:!0})}))},serializePriorities:function(){return"nearMiss"!==this.model.type?[]:r.priorities.map(e=>({value:e,label:r.getLabel("priority",e)}))},serializeFormToQuery:function(e){i.formToRql(this,e),e.push({name:"eq",args:["interval",this.getButtonGroupValue("interval","none")]}),["status","eventCategory","reasonCategory","kaizenCategory","kind","activityKind","observationKind","priority"].forEach(t=>{const i=this.$id(t);let s=i.val();s&&s.length&&("string"==typeof s&&(s=s.split(",")),"SELECT"===i[0].tagName&&i[0].options.length===s.length||(1===(s=s.map(e=>/^[0-9]+$/.test(e)?parseInt(e,10):e)).length?e.push({name:"eq",args:[t,s[0]]}):e.push({name:"in",args:[t,s]})))});const t=this.$id("user").val();let s=this.$('input[name="userType"]').val();"mine"===s||"unseen"===s?e.push({name:"eq",args:["users.user.id",s]}):t&&("others"===s&&(s="users.user"),e.push({name:"eq",args:[s+".id",t]})),this.serializeObsFilter(e)},afterRender:function(){t.prototype.afterRender.call(this),this.$(".is-expandable").expandableSelect(),this.toggleButtonGroup("interval"),a(this.$id("user"),{view:this,width:"100%"}),this.setUpUserType(),this.toggleUserSelect2(),this.setUpDictionarySelect2("eventCategory"),this.setUpDictionarySelect2("reasonCategory"),this.setUpDictionarySelect2("kaizenCategory"),this.setUpDictionarySelect2("activityKind"),this.setUpObsFilter()},setUpDictionarySelect2:function(e,t){const i=this.$id(e);i.length&&i.select2({width:"300px",multiple:!0,placeholder:" ",data:(t||r.forProperty(e)).filter(e=>e.get("active")).map(e=>({id:e.id,text:e.getLabel({long:!0}),model:e})),formatSelection:({model:e},t,i)=>i(e.getLabel())})},setUpUserType:function(){s(this.$id("userType"),{label:this.t("filter:user:others"),options:["others","creator","implementer","implementers","participants","coordinators"].filter(e=>this.t.has(`filter:user:${e}`)).map(e=>({value:e,title:this.t(`filter:user:${e}:title`),optionLabel:this.t(`filter:user:${e}`)}))})},toggleUserSelect2:function(t){const i=this.$('input[name="userType"]').val(),s="mine"===i||"unseen"===i,a=this.$id("user").select2("enable",!s);(s||t&&!a.val())&&a.select2("data",{id:e.data._id,text:e.getLabel()})},setUpObsFilter:function(){this.$id("obsType").length&&(s(this.$id("obsType"),{label:this.t("filter:obsType:any"),options:["any","behaviors","workConditions"].map(e=>({value:e,optionLabel:this.t(`filter:obsType:${e}`)}))}),s(this.$id("obsFilter"),{label:this.t("filter:obsFilter:any"),options:["any","safe","risky","easy","hard"].map(e=>({value:e,optionLabel:this.t(`filter:obsFilter:${e}`)}))}),this.$id("obsCategory").select2({width:"350px",multiple:!0,placeholder:this.t("filter:obsCategory"),data:r.observationCategories.filter(e=>e.get("active")).map(e=>({id:e.id,text:e.getLabel({long:!0}),model:e})),formatSelection:({model:e},t,i)=>i(e.getLabel({long:!1}))}))},serializeObsFilter:function(e){const t=this.$id("obsType").val();if(!t)return;const i=this.$id("obsFilter").val(),s=this.$id("obsCategory").val().split(",").map(e=>+e).filter(e=>e>0);if(s.length||"any"!==t||"any"!==i){const a=[t];("any"!==i||s.length)&&(a.push(i),s.length&&a.push(s)),e.push({name:"observation",args:a})}},clearObsFilter:function(){this.$id("obsType").val("any").trigger("change"),this.$id("obsFilter").val("any").trigger("change"),this.$id("obsCategory").select2("data",[])},filterHasValue:function(e){if("date"===e){const e=this.$id("from-date"),t=this.$id("to-date");return e.val().length>0||t.val().length>0}return t.prototype.filterHasValue.apply(this,arguments)},showFilter:function(e){const s=this.$('.dateTimeRange-label-input[value="'+e+'"]');s.length&&(s.prop("checked",!0),i.toggleLabel(this)),t.prototype.showFilter.apply(this,arguments),"user"===e&&this.$id("user").select2("focus")}})});