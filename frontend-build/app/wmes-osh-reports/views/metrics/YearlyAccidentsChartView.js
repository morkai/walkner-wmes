define(["app/highcharts","app/core/View"],function(t,e){"use strict";return e.extend({initialize:function(){this.chart=null,this.isLoading=!1,this.listenTo(this.model,"request",this.onModelLoading),this.listenTo(this.model,"sync",this.onModelLoaded),this.listenTo(this.model,"error",this.onModelError),this.listenTo(this.model,"change:yearlyAccidents",this.render)},destroy:function(){null!==this.chart&&(this.chart.destroy(),this.chart=null)},afterRender:function(){this.timers.createOrUpdate&&clearTimeout(this.timers.createOrUpdate),this.timers.createOrUpdate=setTimeout(this.createOrUpdate.bind(this),1)},createOrUpdate:function(){this.timers.createOrUpdate=null,this.chart?this.updateChart():(this.createChart(),this.isLoading&&this.chart.showLoading())},createChart:function(){const e=this.serializeSeries(!0);this.chart=new t.Chart({chart:{renderTo:this.el,plotBorderWidth:1,spacing:[10,1,1,1],type:"column"},exporting:{filename:this.t("metrics:yearlyAccidents:filename"),chartOptions:{title:{text:this.t("metrics:yearlyAccidents:title")}}},title:!1,noData:{},xAxis:{categories:this.serializeCategories()},yAxis:{title:!1,min:0,allowDecimals:!1},tooltip:{shared:!0,valueDecimals:0},legend:{enabled:!0},plotOptions:{column:{dataLabels:{enabled:!0}}},series:e})},updateChart:function(){this.chart.destroy(),this.createChart()},serializeCategories:function(){return(this.model.get("yearlyAccidents")||{categories:[]}).categories},serializeSeries:function(){return(this.model.get("yearlyAccidents")||{series:[]}).series},onModelLoading:function(){this.isLoading=!0,this.chart&&this.chart.showLoading()},onModelLoaded:function(){this.isLoading=!1,this.chart&&this.chart.hideLoading()},onModelError:function(){this.isLoading=!1,this.chart&&this.chart.hideLoading()}})});