// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const autoIncrement = require('mongoose-plugin-autoinc-fix');
const userInfoSchema = require('user/models/userInfoSchema');

exports.name = 'OshAudit';

exports.setUp = (app, mongoose) =>
{
  const resultSchema = new mongoose.Schema({
    category: mongoose.Schema.Types.ObjectId,
    shortName: String,
    fullName: String,
    ok: Boolean,
    comment: String
  }, {
    _id: false,
    minimize: false
  });

  const schema = new mongoose.Schema({
    creator: userInfoSchema,
    createdAt: Date,
    updater: userInfoSchema,
    updatedAt: Date,
    auditor: {
      type: userInfoSchema,
      required: true
    },
    section: {
      type: String,
      required: true
    },
    date: {
      type: Date,
      required: true
    },
    status: {
      type: String,
      enum: ['new', 'inProgress', 'finished', 'cancelled'],
      required: true
    },
    results: [resultSchema],
    users: [String],
    anyNok: Boolean,
    nearMiss: {
      type: Number,
      default: 0
    },
    comment: String
  }, {
    id: false,
    minimize: false
  });

  schema.plugin(autoIncrement.plugin, {
    model: exports.name,
    field: 'rid',
    startAt: 1,
    incrementBy: 1
  });

  schema.index({date: -1});
  schema.index({section: 1});
  schema.index({'auditor.id': 1});
  schema.index({users: 1});

  schema.statics.TOPIC_PREFIX = 'oshAudits';

  schema.pre('save', function(next)
  {
    if (this.isNew)
    {
      this.createdAt = new Date();
      this.updatedAt = this.createdAt;
    }
    else
    {
      this.updatedAt = new Date();
    }

    const users = {};

    [this.creator, this.updater, this.auditor].forEach(user =>
    {
      if (user)
      {
        users[user.id] = 1;
      }
    });

    this.users = Object.keys(users);

    if (this.isModified('results'))
    {
      this.anyNok = this.results.some(c => c.ok === false);
    }

    next();
  });

  return schema;
};
