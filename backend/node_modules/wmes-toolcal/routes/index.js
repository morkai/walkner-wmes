// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const multer = require('multer');
const dictionariesRoute = require('./dictionaries');
const editRoute = require('./edit');
const exportRoute = require('./export');
const findByRidRoute = require('./findByRid');
const redirectRoute = require('./redirect');
const sendAttachmentRoute = require('./sendAttachment');
const uploadAttachmentRoute = require('./uploadAttachment');

module.exports = (app, module) =>
{
  const {express, mongoose, user, settings, ToolCalTool} = module;

  const canView = user.auth('TOOLCAL:VIEW');
  const canManage = user.auth('TOOLCAL:MANAGE');
  const canViewDictionaries = user.auth('TOOLCAL:DICTIONARIES:VIEW');
  const canManageDictionaries = user.auth('TOOLCAL:DICTIONARIES:VIEW');

  express.get('/toolcal/settings', canView, settings.browseRoute('toolcal'));
  express.put('/toolcal/settings/:id', canManageDictionaries, settings.updateRoute);

  express.get('/toolcal/dictionaries', canView, dictionariesRoute.bind(null, app, module));

  express.get('/toolcal/tools', canView, express.crud.browseRoute.bind(null, app, ToolCalTool));
  express.get('/toolcal/tools;rid', canView, findByRidRoute.bind(null, app, module));
  express.get('/toolcal/tools;export.:format?', canView, exportRoute.bind(null, app, module));
  express.post('/toolcal/tools', canManage, express.crud.addRoute.bind(null, app, ToolCalTool));
  express.get('/toolcal/tools/:id', canView, express.crud.readRoute.bind(null, app, {
    model: ToolCalTool,
    idProperty: req => /^[0-9]+$/.test(req.params.id) ? 'rid' : '_id'
  }));
  express.put('/toolcal/tools/:id', canView, editRoute.bind(null, app, module));
  express.delete('/toolcal/tools/:id', canManage, express.crud.deleteRoute.bind(null, app, ToolCalTool));

  express.get('/r/toolcal/:filter', redirectRoute.bind(null, app, module));

  express.post(
    '/toolcal/attachments;upload',
    canManage,
    multer({
      dest: module.config.uploadsDest,
      limits: {
        fileSize: 10 * 1024 * 1024
      }
    }).single('file'),
    uploadAttachmentRoute.bind(null, app, module)
  );
  express.get(
    '/toolcal/tools/:modelId/attachments/:attachmentProp',
    canView,
    sendAttachmentRoute.bind(null, app, module)
  );

  _.forEach(module.DICTIONARIES, setUpDictionaryRoutes);

  function setUpDictionaryRoutes(modelName, dictionaryName)
  {
    const Model = mongoose.model(modelName);
    const urlPrefix = `/toolcal/${dictionaryName}`;

    express.get(urlPrefix, canViewDictionaries, express.crud.browseRoute.bind(null, app, Model));
    express.post(urlPrefix, canManageDictionaries, express.crud.addRoute.bind(null, app, Model));
    express.get(`${urlPrefix}/:id`, canViewDictionaries, express.crud.readRoute.bind(null, app, Model));
    express.put(`${urlPrefix}/:id`, canManageDictionaries, express.crud.editRoute.bind(null, app, Model));
    express.delete(`${urlPrefix}/:id`, canManageDictionaries, express.crud.deleteRoute.bind(null, app, Model));
  }
};
