// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const step = require('h5.step');

module.exports = (app, {mongoose, express, DICTIONARIES, ToolCalTool}, req, res, next) =>
{
  step(
    function()
    {
      _.forEach(DICTIONARIES, (modelName) =>
      {
        mongoose.model(modelName).find({}, {name: 1}).lean().exec(this.group());
      });
    },
    function(err, dicts)
    {
      if (err)
      {
        return this.skip(err);
      }

      const dictionaries = {};

      Object.keys(DICTIONARIES).forEach((dictionaryName, i) =>
      {
        dictionaries[dictionaryName] = {};

        dicts[i].forEach((dictionaryModel) =>
        {
          dictionaries[dictionaryName][dictionaryModel._id] = dictionaryModel.name;
        });
      });

      setImmediate(this.next(), null, dictionaries);
    },
    function(err, dictionaries)
    {
      if (err)
      {
        return next(err);
      }

      const options = {
        filename: 'WMES_TOOLCAL_TOOLS',
        freezeRows: 1,
        freezeColumns: 1,
        columns: {
          rid: 6,
          type: 15,
          name: 20,
          sn: 20,
          lastDate: 'date',
          nextDate: 'date',
          interval: 'integer',
          intervalUnit: 5,
          users: 40
        },
        model: ToolCalTool,
        cleanUp: () =>
        {
          req.dictionaries = null;
        },
        serializeRow: doc =>
        {
          return {
            rid: doc.rid,
            type: dictionaries.types[doc.type] || doc.type,
            name: doc.name,
            sn: doc.sn,
            lastDate: doc.lastDate,
            nextDate: doc.nextDate,
            interval: doc.interval,
            intervalUnit: doc.intervalUnit,
            users: doc.users.map(u => u.label).join('; ')
          };
        }
      };

      express.crud.exportRoute(app, options, req, res, next);
    }
  );
};
