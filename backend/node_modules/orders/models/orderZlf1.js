// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const fs = require('fs');

exports.name = 'OrderZlf1';

exports.setUp = (app, mongoose) =>
{
  const schema = new mongoose.Schema({
    _id: String,
    ts: Date
  }, {
    id: false,
    minimize: false,
    strict: false
  });

  schema.index({ts: -1});

  schema.statics.loadOrderDatFile = function(filePath, done)
  {
    fs.readFile(filePath, 'utf8', (err, fileContents) =>
    {
      if (err)
      {
        return done(err);
      }

      done(null, schema.statics.loadOrderDatFile(fileContents));
    });
  };

  schema.statics.parseOrderDatFile = function(fileContents)
  {
    const orderData = {};

    fileContents.split('\n').forEach(line =>
    {
      const parts = line.trim().split(':');
      const key = parts.shift().trim().toLowerCase().replace(/\s+/g, '_');
      const value = parts.join(':').trim();

      orderData[key] = value;
    });

    return orderData;
  };

  schema.statics.prepareForInsert = function(data, ts)
  {
    const orderZlf1 = {ts};

    Object.keys(data).forEach(key =>
    {
      let value = data[key].trim();

      key = key.toLowerCase().replace(/[^a-z0-9_]+/g, ' ').trim().replace(/(\s|_)+/g, '_');

      if (!key.length)
      {
        return;
      }

      if (key === 'production_order_nr')
      {
        key = '_id';
        value = value.replace(/^0+/, '');
      }

      orderZlf1[key] = value;
    });

    return orderZlf1;
  };

  return schema;
};
