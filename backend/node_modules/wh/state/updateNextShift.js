// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const shifts = require('util/shifts');

module.exports = async (app, module) =>
{
  const {
    Plan,
    OldWhLine: WhLine
  } = module;

  try
  {
    const lineList = await WhLine.find().select({_id: 1, nextShiftAt: 1}).lean().exec();
    const lineMap = new Map();

    lineList.forEach(line =>
    {
      lineMap.set(line._id, line.nextShiftAt ? line.nextShiftAt.getTime() : null);
    });

    const currentDate = shifts.getCurrentDate(true).toDate();
    const nextShiftAt = shifts.getCurrentShiftInfo().moment.add(shifts.SHIFT_LENGTH, 'hours').utc(true).toDate();

    const nextShifts = await Plan
      .aggregate([
        {$match: {_id: {$gte: currentDate}}},
        {$project: {lines: 1}},
        {$unwind: '$lines'},
        {
          $match: {
            'lines._id': {$in: Array.from(lineMap.keys())}
          }
        },
        {$unwind: '$lines.orders'},
        {
          $match: {
            'lines.orders.startAt': {$gte: nextShiftAt}
          }
        },
        {
          $group: {
            _id: '$lines._id',
            startAt: {$min: '$lines.orders.startAt'}
          }
        }
      ])
      .exec();

    const updated = [];

    nextShifts.forEach(nextShift =>
    {
      const oldNextShiftAt = lineMap.get(nextShift._id);
      const newNextShiftAt = nextShift.startAt.getTime();

      lineMap.delete(nextShift._id);

      if (newNextShiftAt === oldNextShiftAt)
      {
        return;
      }

      updated.push({
        _id: nextShift._id,
        nextShiftAt: nextShift.startAt
      });
    });

    lineMap.forEach((v, id) =>
    {
      updated.push({
        _id: id,
        nextShiftAt: null
      });
    });

    if (!updated.length)
    {
      return;
    }

    await WhLine.collection.bulkWrite(updated.map(d => ({
      updateOne: {
        filter: {_id: d._id},
        update: {$set: {nextShiftAt: d.nextShiftAt}}
      }
    })));

    app.broker.publish(`${WhLine.TOPIC_PREFIX}.updated`, {updated});
  }
  catch (err)
  {
    module.error(err, 'Failed to update next shift for lines.');
  }
};
