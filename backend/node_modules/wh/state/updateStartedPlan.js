// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const moment = require('moment');

module.exports = async (app, module, lineId) =>
{
  const {
    OldWhLine: WhLine,
    ProdShiftOrder
  } = module;

  try
  {
    const lastPso = await ProdShiftOrder
      .findOne({
        $or: [
          {
            finishedAt: null,
            prodLine: lineId,
            'orderData.scheduledStartDate': {$exists: true}
          },
          {
            prodLine: lineId,
            startedAt: {$gt: new Date(Date.now() - 24 * 3600 * 7 * 1000)},
            quantityDone: {$gt: 0},
            'orderData.scheduledStartDate': {$exists: true}
          }
        ]
      })
      .select({
        _id: 0,
        'orderData.scheduledStartDate': 1
      })
      .sort({prodLine: 1, startedAt: -1})
      .lean()
      .exec();

    if (!lastPso)
    {
      return;
    }

    const startedPlan = moment(lastPso.orderData.scheduledStartDate).utc(true).toDate();

    const result = await WhLine.collection.updateOne(
      {_id: lineId, startedPlan: {$lt: startedPlan}},
      {$set: {startedPlan}}
    );

    if (!result.modifiedCount)
    {
      return;
    }

    app.broker.publish(`${WhLine.TOPIC_PREFIX}.updated`, {
      updated: [{
        _id: lineId,
        startedPlan
      }]
    });
  }
  catch (err)
  {
    return module.error(err, `Failed to update started date for line.`, {lineId});
  }
};
