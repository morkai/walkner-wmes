<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Picklista malarnii set <%- date %>, <%- set %></title>
  <style>
    @page {
      size: A4 portrait;
      margin: 10mm 0 10mm 0;
    }
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-size: 3.2mm;
      text-rendering: optimizeLegibility;
    }
    body {
      font-family: Arial, sans-serif;
      line-height: 1;
    }
    .page {
      width: 210mm;
      height: 276mm;
      padding: 0 10mm 0 10mm;
      border: 0 solid #000;
    }
    .page:first-child {

    }
    .page + .page {
      page-break-before: always;
    }
    .hd {
      display: flex;
      padding-bottom: 4mm;
      margin-bottom: 4mm;
      border-bottom: 0.5mm solid #000;
      overflow: hidden;
    }
    .bd {
      height: 257mm;
      overflow: hidden;
    }
    thead {
      display: table-row-group;
    }
    .title {
      margin-right: 6mm;
      font-size: 9mm;
      white-space: nowrap;
    }
    .page-no {
      font-size: inherit;
    }
    .props {
      display: flex;
      margin-left: auto;
    }
    .prop + .prop {
      margin-left: 3mm;
    }
    .prop-value {
      margin-top: 1mm;
      font-size: 4mm;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: clip;
      max-width: 72mm;
    }
    .orders {
      width: 100%;
      border-collapse: collapse;
      line-height: 1.4;
    }
    .orders thead td {
      padding-bottom: 1mm;
      font-weight: bold;
    }
    .orders td {
      padding-left: 4mm;
      width: 1mm;
      white-space: nowrap;
    }
    .orders td:first-child {
      padding-left: 0;
    }
    .orders td:last-child {
      width: auto;
    }
    .orders .order-no {
      text-align: right;
    }
    .orders .order-qty {
      text-align: right;
    }
    .orders .order-carts {
      white-space: normal;
      vertical-align: top;
      text-align: right;
    }
    .orders .order-comments td {
      padding: 3mm 0 3mm 0;
      white-space: normal;
      border-bottom: 0.5mm solid #000;
    }
    .orders .order-comments td:empty {
      padding-top: 0;
    }
    .orders tbody:last-child .order-comments td {
      padding-bottom: 0;
      border-bottom: 0;
    }
    .order-line:first-child td {
      padding-top: 3mm;
    }
    tbody.is-first .order-line td {
      padding-top: 0;
    }
    .is-ignored {
      text-decoration: line-through;
    }

    @font-face {
      font-family: 'fontello';
      src: url('data:application/octet-stream;base64,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') format('woff');
    }
    [class^="i-"]:before, [class*=" i-"]:before {
      font-family: "fontello";
      font-style: normal;
      font-weight: normal;
      speak: never;
      display: inline-block;
      text-decoration: inherit;
      width: 1em;
      margin-right: .2em;
      text-align: center;
      font-variant: normal;
      text-transform: none;
      line-height: 1em;
      margin-left: .2em;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    .i-drill:before { content: '\f10c'; }
    .i-ps:before { content: '\f1fc'; }
  </style>
</head>
<body>
<div class=page>
  <div class=hd>
    <div class=title>Set <%- set %> dla <%= line %> <span class=page-no>1/1</span></div>
    <div class=props>
      <div class=prop>
        <div class=prop-name>Plan</div>
        <div class=prop-value><%- date %></div>
      </div>
      <div class=prop>
        <div class=prop-name>MRP</div>
        <div class=prop-value><%- mrp %></div>
      </div>
      <div class=prop>
        <div class=prop-name>Kompletujący</div>
        <div class=prop-value><%- user %></div>
      </div>
    </div>
  </div>
  <div class=bd>
    <table class=orders>
      <thead>
        <tr>
          <td>Zlecenie</td>
          <td>12NC</td>
          <td colspan=2>Ilość</td>
          <td>Nazwa</td>
        </tr>
      </thead>
      <% orders.forEach((order, orderI) => { %>
      <tbody>
        <% order.lines.forEach((line, lineI) => { %>
        <tr class="order-line <%- line.ignored ? 'is-ignored' : '' %>">
          <td class=order-no>
            <% if (line.type === 'order') { %>
              <%- line.orderNo %>
            <% } else if (line.type === 'paint') { %>
              <i class="i-ps"></i>
            <% } else if (line.type === 'drilled') { %>
              <i class="i-drill"></i>
            <% } %>
          </td>
          <td class=order-code><%- line.nc12 %></td>
          <td class=order-qty><%- line.qty %></td>
          <td class=order-unit><%- line.unit %></td>
          <td class=order-name><%= line.name %></td>
        </tr>
        <% }) %>
        <tr class=order-comments>
          <td colspan=5><%= order.comments.join(' ■ ') %></td>
        </tr>
      </tbody>
      <% }) %>
    </table>
  </div>
</div>
<script>
const mainPage = document.querySelector('.page');
const hdHeight = mainPage.querySelector('.hd').clientHeight;
const bdHeight = mainPage.querySelector('.bd').clientHeight;

if (mainPage.querySelector('table').clientHeight > bdHeight)
{
  paginate();
}
else
{
  mainPage.querySelector('.page-no').style.display = 'none';
}

function paginate()
{
  const tbodies = mainPage.querySelectorAll('tbody');
  const pages = [{
    el: mainPage,
    height: hdHeight,
    tbodies: []
  }];

  for (let tbody of tbodies)
  {
    const height = tbody.clientHeight;
    let page = pages[pages.length - 1];

    if (page.height + height > bdHeight)
    {
      page = {
        el: null,
        height: hdHeight,
        tbodies: []
      };

      pages.push(page);
    }

    page.height += height;
    page.tbodies.push(tbody);
  }

  pages.forEach(page =>
  {
    page.tbodies.forEach(tbody =>
    {
      tbody.parentNode.removeChild(tbody);
    });
  });

  for (let i = 1; i < pages.length; ++i)
  {
    pages[i].el = mainPage.cloneNode(true);

    document.body.appendChild(pages[i].el);
  }

  pages.forEach((page, i) =>
  {
    page.el.querySelector('.page-no').textContent = `${i + 1}/${pages.length}`;

    const table = page.el.querySelector('table');

    page.tbodies.forEach((tbody, i) =>
    {
      tbody.classList.add('is-first');

      table.appendChild(tbody);
    });
  });
}
</script>
</body>
</html>
