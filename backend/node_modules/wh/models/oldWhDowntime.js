// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

exports.name = 'OldWhDowntime';

exports.setUp = (app, mongoose) =>
{
  const downtimeSchema = new mongoose.Schema({
    reason: {
      type: String,
      required: true,
      ref: 'DowntimeReason'
    },
    startedAt: {
      type: Date,
      required: true
    },
    finishedAt: {
      type: Date
    },
    duration: {
      type: Number,
      default: 0
    },
    user: {
      type: {},
      required: true
    },
    comment: String
  }, {
    id: false,
    minimize: false,
    versionKey: false
  });

  downtimeSchema.statics.TOPIC_PREFIX = 'old.wh.downtimes';
  downtimeSchema.statics.BROWSE_LIMIT = 100;

  downtimeSchema.index({startedAt: -1});
  downtimeSchema.index({reason: 1, startedAt: -1});
  downtimeSchema.index({'user.id': 1, startedAt: -1});

  downtimeSchema.statics.createDowntime = async function({reason, startedAt, user, comment, session})
  {
    const WhDowntime = this;

    const result = {
      added: [],
      messages: []
    };

    if (!reason || !startedAt || !user)
    {
      return result;
    }

    const finishedAt = new Date();
    const dt = new WhDowntime({
      reason,
      startedAt,
      finishedAt: finishedAt,
      duration: finishedAt - startedAt,
      user,
      comment
    });

    dt.$session(session);

    await dt.save();

    result.added.push(dt.toJSON());

    result.messages.push({
      topic: `${WhDowntime.TOPIC_PREFIX}.updated`,
      message: {
        added: result.added
      }
    });

    return result;
  };

  mongoose.model(exports.name, downtimeSchema);
};
