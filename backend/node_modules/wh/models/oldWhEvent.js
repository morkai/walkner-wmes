// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

exports.name = 'OldWhEvent';

exports.setUp = (app, mongoose) =>
{
  const eventSchema = new mongoose.Schema({
    type: {
      type: String,
      required: true
    },
    time: {
      type: Date,
      required: true
    },
    user: {
      type: {},
      required: true
    },
    order: {
      type: String,
      default: null,
      ref: 'OldWhOrder'
    },
    data: {}
  }, {
    id: false,
    minimize: false,
    versionKey: false
  });

  eventSchema.statics.TOPIC_PREFIX = 'old.wh.events';
  eventSchema.statics.BROWSE_LIMIT = 100;

  eventSchema.index({time: -1});
  eventSchema.index({type: 1, time: -1});
  eventSchema.index({order: 1, time: -1});
  eventSchema.index({'user.id': 1, time: -1});

  eventSchema.post('save', function(doc)
  {
    app.broker.publish(`${eventSchema.statics.TOPIC_PREFIX}.saved`, {
      events: [doc.toJSON()]
    });
  });

  eventSchema.statics.record = function(events, session)
  {
    const WhEvent = this;

    return WhEvent.insertMany(events, {session: session || null, lean: true}).then(() => ({
      added: events,
      messages: [{
        topic: `${WhEvent.TOPIC_PREFIX}.saved`,
        message: {events}
      }]
    }));
  };

  mongoose.model(exports.name, eventSchema);
};
