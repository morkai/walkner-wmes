// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

exports.name = 'WhSet';

exports.setUp = (app, mongoose) =>
{
  const FUNCS = ['fmx', 'kitter', 'packer'];

  const whOrderFuncSchema = new mongoose.Schema({
    _id: {
      type: String,
      enum: FUNCS
    },
    user: {},
    startedAt: Date,
    finishedAt: Date,
    status: {
      type: String,
      enum: ['pending', 'picklist', 'pickup', 'problem', 'finished'],
      default: 'pending'
    },
    picklist: {
      type: String,
      enum: ['pending', 'require', 'ignore'],
      default: 'pending'
    },
    pickup: {
      type: String,
      enum: ['pending', 'success', 'failure', 'ignore'],
      default: 'pending'
    },
    carts: [String],
    problemArea: String,
    comment: String
  }, {
    minimize: false
  });

  const setSchema = new mongoose.Schema({
    startedAt: Date,
    startedBy: {},
    finishedAt: Date,
    finishedBy: {},
    status: {
      type: String,
      enum: ['started', 'finished'],
      default: 'started'
    },
    mrp: String,
    line: String,
    lines: [String],
    redirLine: String,
    redirLines: [String],
    orders: [{
      _id: String,
      whOrder: ObjectId,
      sapOrder: String,
      qtyTodo: Number,
      qtyPickup: Number,
      pceTime: Number,
      funcs: [{
        _id: {
          type: String,
          enum: ['fmx', 'kitter', 'packer']
        },
      }]
    }]
  }, {
    id: false,
    minimize: false
  });

  setSchema.statics.TOPIC_PREFIX = 'wh.sets';
  setSchema.statics.BROWSE_LIMIT = 1000;

  setSchema.index({date: -1});
  setSchema.index({status: 1, date: -1});

  mongoose.model(exports.name, setSchema);
};
