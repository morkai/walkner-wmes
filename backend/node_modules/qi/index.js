// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const helpers = require('reports/routes/helpers');

exports.DEFAULT_CONFIG = {
  mongooseId: 'mongoose',
  httpServerId: 'httpServer',
  expressId: 'express',
  userId: 'user',
  settingsId: 'settings',
  reportsId: 'reports',
  orgUnitsId: 'orgUnits',
  productionId: 'production',
  mailSenderId: 'mail/sender',
  morId: 'mor',
  wkhtmltopdfExe: 'wkhtmltopdf',
  attachmentsDest: null
};

exports.models = [
  require('./models/qiErrorCategory'),
  require('./models/qiFault'),
  require('./models/qiKind'),
  require('./models/qiStandard'),
  require('./models/qiResult'),
  require('./models/qiOqlWeek'),
  require('user/models/user'),
  require('orders/models/order'),
  require('prodShiftOrders/models/prodShiftOrder'),
  require('suggestions/models/suggestion')
];

exports.recordTopics = {
  debug: ['qi.*.added', 'qi.*.edited'],
  warning: ['qi.*.deleted'],
  blacklist: ['qi.results.added', 'qi.results.edited']
};

exports.republishTopics = ['qi.**'];

exports.userPrivileges = [
  'QI:RESULTS:VIEW', 'QI:RESULTS:MANAGE',
  'QI:DICTIONARIES:VIEW', 'QI:DICTIONARIES:MANAGE',
  'QI:INSPECTOR', 'QI:SPECIALIST'
];

exports.optionalModules = {
  'mongoose': [
    require('./counter'),
    require('./relations')
  ],
  'mongoose orgUnits mailSender mor': require('./notifier'),
  'mongoose express user settings reports orgUnits production': require('./routes')
};

exports.start = (app, module) =>
{
  module.DICTIONARIES = {
    kinds: 'QiKind',
    faults: 'QiFault',
    standards: 'QiStandard',
    errorCategories: 'QiErrorCategory'
  };

  module.tmpAttachments = {};

  app.broker.subscribe('qi.oqlWeeks.updated', () =>
  {
    helpers.clearCachedReports('qi/outgoingQuality');
  });

  app.broker.subscribe('qi.results.edited', ({model}) =>
  {
    const change = model.changes[model.changes.length - 1];

    if (change && change.data.standard)
    {
      helpers.clearCachedReports('qi/outgoingQuality');
    }
  });
};
