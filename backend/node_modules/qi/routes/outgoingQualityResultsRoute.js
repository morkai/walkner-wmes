// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

module.exports = (app, {express, User, QiResult}, req, res, next) =>
{
  req.rql.fields = {changes: 0};

  const options = {
    model: QiResult,
    prepareResult
  };

  express.crud.browseRoute(app, options, req, res, next);

  function prepareResult(totalCount, models, formatResult)
  {
    const collection = models.map(createResult);
    const usersToResults = new Map();

    collection.forEach(result =>
    {
      if (!result.who.length)
      {
        return;
      }

      result.who.forEach(user =>
      {
        if (!usersToResults.has(user.id))
        {
          usersToResults.set(user.id, []);
        }

        usersToResults.get(user.id).push(result);
      });
    });

    resolveProdFunctions(usersToResults, err => formatResult(err, {totalCount, collection}));
  }

  function createResult(model)
  {
    const correctiveAction = (model.correctiveActions || [])[0];

    return {
      _id: model._id,
      rid: model.rid,
      date: model.inspectedAt,
      pareto: model.mrp,
      concern: model.faultCode,
      cause: model.problem,
      countermeasure: correctiveAction && correctiveAction.what || '',
      check: [],
      standard: model.standard,
      who: correctiveAction && correctiveAction.who || [],
      when: correctiveAction && correctiveAction.when || null
    };
  }

  function resolveProdFunctions(usersToResults, done)
  {
    if (!usersToResults.size)
    {
      return done();
    }

    const conditions = {_id: Array.from(usersToResults.keys())};
    const fields = {prodFunction: 1};

    User.find(conditions).select(fields).lean().exec((err, users) =>
    {
      if (err)
      {
        return done(err);
      }

      users.forEach(user =>
      {
        if (!user.prodFunction)
        {
          return;
        }

        usersToResults.get(user._id.toString()).forEach(result =>
        {
          if (!result.check.includes(user.prodFunction))
          {
            result.check.push(user.prodFunction);
          }
        });
      });

      done();
    });
  }
};
