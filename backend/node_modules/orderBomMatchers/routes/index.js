// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const printLabelsRoute = require('./printLabels');

module.exports = (app, module) =>
{
  const {
    express,
    user,
    OrderBomMatcher,
    ComponentLabel
  } = module;

  const canView = user.auth('PROD_DATA:VIEW', 'FN:process-engineer');
  const canViewLocal = user.auth('LOCAL', 'PROD_DATA:VIEW');
  const canManage = user.auth('PROD_DATA:MANAGE', 'FN:process-engineer');

  express.get('/orderBomMatchers', canView, express.crud.browseRoute.bind(null, app, OrderBomMatcher));
  express.post('/orderBomMatchers', canManage, express.crud.addRoute.bind(null, app, OrderBomMatcher));
  express.get('/orderBomMatchers/:id', canView, express.crud.readRoute.bind(null, app, OrderBomMatcher));
  express.put('/orderBomMatchers/:id', canManage, express.crud.editRoute.bind(null, app, OrderBomMatcher));
  express.delete('/orderBomMatchers/:id', canManage, express.crud.deleteRoute.bind(null, app, OrderBomMatcher));

  express.get('/componentLabels', canView, express.crud.browseRoute.bind(null, app, ComponentLabel));
  express.post('/componentLabels', canManage, express.crud.addRoute.bind(null, app, ComponentLabel));
  express.get('/componentLabels/:id', canView, express.crud.readRoute.bind(null, app, ComponentLabel));
  express.put('/componentLabels/:id', canManage, express.crud.editRoute.bind(null, app, ComponentLabel));
  express.delete('/componentLabels/:id', canManage, express.crud.deleteRoute.bind(null, app, ComponentLabel));
  express.post('/componentLabels/:id;print', printLabelsRoute.bind(null, app, module));

  express.get('/orders/:orderNo/componentLabels/:operationNo', canViewLocal, getOrderLabelsRoute);

  function getOrderLabelsRoute(req, res, next)
  {
    module.getComponentLabels(req.params.orderNo, req.params.operationNo, (err, componentLabels) =>
    {
      if (err)
      {
        return next(err);
      }

      res.json({
        totalCount: componentLabels.length,
        collection: componentLabels
      });
    });
  }
};
