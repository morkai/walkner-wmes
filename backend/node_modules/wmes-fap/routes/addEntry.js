// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');
const _ = require('lodash');

module.exports = (app, module, req, res, next) =>
{
  const {user, settings, express, FapEntry} = module;

  const sessionUser = req.session.user;
  const entry = new FapEntry(_.pick(req.body, [
    'owner', 'orderNo', 'category', 'problem', 'divisions', 'lines'
  ]));

  entry.creator = user.createUserInfo(sessionUser, req);
  entry.createdAt = new Date();
  entry.updater = entry.creator;
  entry.updatedAt = entry.createdAt;

  if (sessionUser.loggedIn)
  {
    entry.owner = entry.creator;
  }

  if (Array.isArray(req.body.files))
  {
    if (!module.tmpAttachments)
    {
      module.tmpAttachments = {};
    }

    req.body.files.forEach(file =>
    {
      const attachment = module.tmpAttachments[file._id];

      if (!attachment)
      {
        return;
      }

      entry.attachments.push({
        _id: file._id,
        date: entry.createdAt,
        user: entry.owner,
        type: attachment.data.type,
        size: attachment.data.size,
        name: file.name
      });

      clearTimeout(attachment.timer);

      delete module.tmpAttachments[file._id];
    });
  }

  step(
    function()
    {
      settings.findById('fap.pendingFunctions', this.parallel());

      entry.updateOrderData(this.parallel());
    },
    function(err, pendingFunctions)
    {
      if (err)
      {
        return this.skip(err);
      }

      if (sessionUser.privileges.includes('SUPER'))
      {
        entry.status = 'started';
      }
      else if (!sessionUser.prodFunction)
      {
        entry.status = 'pending';
      }
      else if (!pendingFunctions)
      {
        entry.status = 'started';
      }
      else if (pendingFunctions.value.includes(sessionUser.prodFunction))
      {
        entry.status = 'pending';
      }
      else
      {
        entry.status = 'started';
      }
    },
    function(err)
    {
      if (err)
      {
        return next(err);
      }

      req.model = entry;

      express.crud.addRoute(app, FapEntry, req, res, next);
    }
  );
};
