// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');
const resolveProductName = require('util/resolveProductName');

module.exports = (app, {Order, OrderEto, ProdShiftOrder}, req, res, next) =>
{
  const orderNo = req.query.order;

  step(
    function()
    {
      Order
        .findById(orderNo)
        .select({
          _id: 0,
          mrp: 1,
          nc12: 1,
          name: 1,
          description: 1,
          qtyDone: 1,
          qty: 1,
          statuses: 1
        })
        .lean()
        .exec(this.parallel());

      ProdShiftOrder
        .find({orderId: orderNo})
        .select({_id: 0, prodLine: 1})
        .lean()
        .exec(this.parallel());
    },
    function(err, sapOrder, prodShiftOrders)
    {
      if (err)
      {
        return next(err);
      }

      if (!sapOrder)
      {
        return this.skip(app.createError(`Order not found: ${orderNo}`, 'NOT_FOUND', 404));
      }

      setImmediate(this.parallel(), null, sapOrder);
      setImmediate(this.parallel(), null, prodShiftOrders);

      OrderEto.findById(sapOrder.nc12).select({_id: 1}).exec(this.parallel());
    },
    function(err, sapOrder, prodShiftOrders, orderEto)
    {
      if (err)
      {
        return next(err);
      }

      const lines = new Set();

      prodShiftOrders.forEach(pso => lines.add(pso.prodLine));

      res.json({
        orderNo,
        orderStatus: sapOrder.statuses,
        eto: !!orderEto,
        mrp: sapOrder.mrp,
        nc12: sapOrder.nc12,
        productName: resolveProductName(sapOrder),
        qtyTodo: sapOrder.qty,
        qtyDone: sapOrder.qtyDone && sapOrder.qtyDone.total || 0,
        lines: [...lines].sort((a, b) => a.localeCompare(b, undefined, {numeric: true, ignorePunctuation: true}))
      });
    }
  );
};
