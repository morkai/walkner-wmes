// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const path = require('path');
const contentDisposition = require('content-disposition');
const _ = require('lodash');

module.exports = (app, {config, FapEntry}, req, res, next) =>
{
  const {entryId, attachmentId} = req.params;

  FapEntry.findById(entryId).select({attachments: 1, changes: 1}).lean().exec((err, entry) =>
  {
    if (err)
    {
      return next(err);
    }

    const changeIndex = parseInt(req.query.change, 10);
    let attachment = null;

    if (!isNaN(changeIndex))
    {
      const change = entry.changes[Math.abs(changeIndex)];

      if (!change || !change.attachments)
      {
        return next(app.createError(`Invalid change index.`, 'INPUT', 400));
      }

      attachment = _.find(change.attachments.added, a => a._id === attachmentId)
        || _.find(change.attachments.removed, a => a._id === attachmentId)
        || _.find(change.attachments.changed, a => a[0]._id === attachmentId);
    }
    else
    {
      attachment = entry.attachments.find(a => a._id === attachmentId);
    }

    if (!attachment)
    {
      return next(app.createError(`Attachment not found.`, 'NOT_FOUND', 404));
    }

    const disposition = req.query.download === '1' ? 'attachment' : 'inline';

    if (attachment.type.includes('image/'))
    {
      res.set('Cache-Control', 'max-age=604800, public');
    }

    res.type(attachment.type);
    res.append('Content-Disposition', contentDisposition(attachment.name, {type: disposition}));
    res.sendFile(path.join(config.uploadsDest, attachment._id));
  });
};
