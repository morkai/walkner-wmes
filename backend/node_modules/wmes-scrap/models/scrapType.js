// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');

exports.name = 'ScrapType';

exports.setUp = (app, mongoose) =>
{
  const typeSchema = new mongoose.Schema({
    active: Boolean,
    short: String,
    long: String,
    position: Number,
    patterns: [String]
  }, {
    id: false,
    versionKey: false
  });

  typeSchema.statics.TOPIC_PREFIX = 'scrap.types';

  typeSchema.statics.createMatcher = function(patterns)
  {
    const exclude = [];
    const include = [];

    patterns.forEach(pattern =>
    {
      let condition = null;

      if (pattern.startsWith('-'))
      {
        condition = exclude;
        pattern = pattern.substring(1).trimStart();
      }
      else
      {
        condition = include;

        if (pattern.startsWith('+'))
        {
          pattern = pattern.substring(1).trimStart();
        }
      }

      try
      {
        if (pattern.startsWith('/') && pattern.endsWith('/'))
        {
          pattern = pattern.substring(1, pattern.length - 1);
        }
        else
        {
          pattern = `^${_.escapeRegExp(pattern).replace(/\\\*+/g, '.*?')}$`;
        }

        condition.push(new RegExp(pattern, 'i'));
      }
      catch (err) {} // eslint-disable-line no-empty
    });

    return componentName =>
    {
      return !exclude.some(pattern => pattern.test(componentName))
        && include.some(pattern => pattern.test(componentName));
    };
  };

  mongoose.model(exports.name, typeSchema);
};
