// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const path = require('path');
const _ = require('lodash');
const fresh = require('fresh');

module.exports = (app, module, req, res, next) =>
{
  const nc15 = req.params.nc15;
  const page = parseInt(req.params.page, 10);
  const hash = /^[a-f0-9]{32}$/.test(req.query.hash) ? req.query.hash : '';
  const nc15ToFreshHeaders = module.freshHeaders;
  const freshKey = `${hash}_${page}`;
  const freshHeaders = nc15ToFreshHeaders[nc15] && nc15ToFreshHeaders[nc15][freshKey];

  if (freshHeaders && fresh(req.headers, freshHeaders.headers))
  {
    res.set(freshHeaders);
    res.sendStatus(304);

    return;
  }

  const fileName = `${nc15}_${page}.webp`;
  const filePath = hash
    ? path.join(module.config.uploadedPath, nc15, hash, fileName)
    : path.join(module.config.convertedPath, nc15, fileName);

  res.sendFile(filePath, {maxAge: 60 * 1000}, (err) =>
  {
    if (err)
    {
      if (err.code === 'ENOENT')
      {
        return res.sendStatus(404);
      }

      return next(err);
    }

    if (!nc15ToFreshHeaders[nc15])
    {
      nc15ToFreshHeaders[nc15] = {};
    }

    if (nc15ToFreshHeaders[nc15][freshKey])
    {
      clearTimeout(nc15ToFreshHeaders[nc15][freshKey].timer);
    }

    nc15ToFreshHeaders[nc15][freshKey] = {
      headers: _.pick(res.getHeaders(), ['etag', 'last-modified', 'cache-control']),
      timer: setTimeout(clearFreshHeader.bind(null, nc15, freshKey), 60 * 1000)
    };
  });

  function clearFreshHeader(nc15, key)
  {
    if (nc15ToFreshHeaders[nc15] && nc15ToFreshHeaders[nc15][key])
    {
      delete nc15ToFreshHeaders[nc15][key];
    }
  }
};
