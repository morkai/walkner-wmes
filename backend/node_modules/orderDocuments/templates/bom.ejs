<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title><%- order %> - Lista komponent√≥w - BOM</title>
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      padding-top: 33px;
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      font-size: 14px;
      line-height: 1;
      color: #fff;
      background: #525659;
      cursor: default;
    }
    h1 {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      margin: 0;
      padding: 7px 8px 8px 8px;
      height: 33px;
      overflow: hidden;
      white-space: nowrap;
      font-family: Verdana, sans-serif;
      font-size: 18px;
      font-weight: bold;
      text-transform: uppercase;
      text-shadow: 1px 1px 1px #333;
      text-overflow: ellipsis;
      text-align: center;
      color: #fff;
      background-color: #323639;
      background-image: linear-gradient(#323639, rgba(50, 54, 57, 0.95));
      border-bottom: 1px solid #000;
    }
    p {
      margin: 15px;
      padding: 15px;
      background: #fff;
      color: #333;
      box-shadow: 0 4px 12px #333;
    }
    table {
      width: 100%;
      background: #fff;
      color: #333;
      border-collapse: collapse;
      box-shadow: 0 4px 12px #333;
    }
    tbody > tr:nth-child(even) > td {
      background: #f0f0f0;
    }
    th {
      padding: 5px;
      text-align: left;
      background: #323639;
      color: #fff;
      border-top: 1px solid #000;
      border-bottom: 1px solid #000;
    }
    td {
      padding: 3px 5px;
      border-bottom: 1px solid #bbb;
    }
    tr:last-child > td {
      border-bottom: 1px solid #000;
    }
    th:first-child {
      padding-left: 10px;
      border-left: 1px solid #000;
    }
    td:first-child {
      padding-left: 8px;
      border-left: 1px solid #000;
    }
    th:last-child,
    td:last-child {
      padding-right: 10px;
      border-right: 1px solid #000;
    }
    .item,
    .nc12 {
      text-align: right;
    }
    .item,
    .nc12 {
      font-family: Consolas, "Lucida Console", Monaco, monospace;
    }
    .integer {
      text-align: right;
      padding-right: 0;
    }
    .decimals,
    .unit {
      padding-left: 0;
    }
    tr:hover > td {
      background-color: #ffffd6!important;
    }
    .min {
      white-space: nowrap;
      width: 1px;
    }
    #columns {
      display: flex;
      padding: 15px 15px 0 0;
    }
    .column {
      flex: 1 1 auto;
      padding: 0 0 15px 15px;
    }
    .column:only-child .name {
      white-space: nowrap;
      width: 1px;
    }
    .column:only-child .min:last-child {
      width: auto;
    }
    .wrap .name {
      white-space: normal!important;
      width: auto!important;
    }
    #notes {
      display: flex;
      flex-wrap: wrap;
      padding: 0 0 0 15px;
      font-size: 28px;
      line-height: 1;
    }
    #notes > p {
      margin: 15px 15px 0 0;
      padding: 8px 15px;
      background: #FFF;
      border-color: #000;
    }
    #notes > .info {
      background: #E8F6FF;
      border-color: #B8E2FB;
    }
    #notes > .warning {
      background: #F9EDBE;
      border-color: #F0C36D;
    }
    #notes > .success {
      background: #EAF7D9;
      border-color: #BBDF8D;
    }
    #notes > .danger {
      background: #FFD1D1;
      border-color: #F8ACAC;
    }
    .replaced,
    tbody > .replaced:nth-child(even) > td {
      background: #FFD1D1;
    }
    .replacement,
    tbody > .replacement:nth-child(even) > td {
      background: #EAF7D9;
    }
    .name em {
      display: block;
      margin-top: 2px;
    }
    .center {
      text-align: center;
    }
  </style>
</head>
<body>
<h1 id="hd">Lista komponent√≥w</h1>
<% if (!components.length) { %>
<p>Zlecenie <%- order %> nie ma ≈ºadnych komponent√≥w.</p>
<% } else { %>
<% if (notes.length || compRels.length) { %>
<div id="notes">
  <% compRels.forEach(function(compRel) { %>
  <p class="danger">
    ‚ÆÇ <%- compRel.oldCode %> ü°Ü <%- compRel.newCode %>
  </p>
  <% }) %>
  <% notes.forEach(function(note) { %>
  <p class="<%- note.priority %>"><%= note.text %></p>
  <% }) %>
</div>
<% } %>
<div id="columns">
  <div class="column">
    <table>
      <thead>
      <tr>
        <th>Nr</th>
        <th>12NC</th>
        <th>Nazwa</th>
        <th colspan="3">Ilo≈õƒá</th>
        <th>Strategia</th>
      </tr>
      </thead>
      <tbody>
      <% components.forEach(function(component) { %>
      <tr class="<%- component.rowClassName || '' %>">
        <% if (component.releasedAt) { %>
        <td class="item min center">‚ÆÇ
        <% } else { %>
        <td class="item min"><%- component.item %>
        <% } %>
        <td class="nc12 min"><%- component.nc12 %></td>
        <% if (component.releasedAt) { %>
        <td class="name" colspan="5">
          <%= component.name %>
        </td>
        <% } else { %>
        <td class="name"><%= component.name %></td>
        <td class="integer min"><%- component.nc12 ? component.qty[0] : '' %></td>
        <td class="decimals min"><%- !component.nc12 || component.qty[1] === 0 ? '' : (',' + component.qty[1]) %></td>
        <td class="unit min"><%- component.nc12 ? component.unit : '' %></td>
        <td class="strategy min"><%- component.distStrategy || '' %></td>
        <% } %>
      </tr>
      <% }) %>
      </tbody>
    </table>
  </div>
</div>
<% } %>
<script>
  'use strict';

  var hdEl = document.getElementById('hd');
  var notesEl = document.getElementById('hd');

  var PADDING = 15;
  var HEADER_HEIGHT = hdEl ? hdEl.getBoundingClientRect().height : 0;
  var NOTES_HEIGHT = notesEl ? notesEl.getBoundingClientRect().height : 0;
  // 700 without Unloading point
  // 800 with Unloading point
  var MIN_COLUMN_WIDTH = 700;

  var sourceTableEl = null;
  var componentEls = [];
  var thHeight = 0;
  var tdHeight = 0;
  var resizeTimer = null;

  window.addEventListener('contextmenu', function(e)
  {
    e.preventDefault();
  });

  window.addEventListener('touchstart', function(e)
  {
    if (e.touches && e.touches.length > 1)
    {
      e.preventDefault();
    }
  }, {passive: false});

  window.onresize = function()
  {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(resize, 100);
  };

  window.onload = function()
  {
    sourceTableEl = document.querySelector('table');

    if (!sourceTableEl)
    {
      return;
    }

    var tHead = sourceTableEl.tHead;
    var tBody = sourceTableEl.tBodies[0];

    thHeight = tHead.getBoundingClientRect().height;
    tdHeight = tBody.firstElementChild.getBoundingClientRect().height;

    for (var i = 0, l = tBody.childElementCount; i < l; ++i)
    {
      componentEls.push(tBody.children[i]);
    }

    tBody.innerHTML = '';
    sourceTableEl.parentNode.removeChild(sourceTableEl);

    resize();
  };

  function resize()
  {
    var oldColumnCount = document.querySelectorAll('.column').length;

    if (!oldColumnCount)
    {
      return;
    }

    var newColumnCount = Math.floor((window.innerWidth - PADDING) / (MIN_COLUMN_WIDTH + PADDING));
    var availableHeight = window.innerHeight - thHeight - (PADDING * 3) - HEADER_HEIGHT - NOTES_HEIGHT - 15;
    var visibleComponentCount = Math.floor(availableHeight / tdHeight);

    if (newColumnCount < 1 || visibleComponentCount >= componentEls.length)
    {
      newColumnCount = 1;
    }

    var componentsPerColumn = Math.max(visibleComponentCount, Math.ceil(componentEls.length / newColumnCount));
    var columnsEl = document.getElementById('columns');
    var columnEls = new Array(newColumnCount);

    columnsEl.innerHTML = '';

    for (var columnI = 0; columnI < newColumnCount; ++columnI)
    {
      var columnEl = document.createElement('div');
      var tableEl = sourceTableEl.cloneNode(true);
      var tBodyEl = tableEl.children[1];
      var componentI = columnI * componentsPerColumn;
      var componentL = Math.min(columnI * componentsPerColumn + componentsPerColumn, componentEls.length);

      if (componentI >= componentEls.length)
      {
        break;
      }

      for (; componentI < componentL; ++componentI)
      {
        tBodyEl.appendChild(componentEls[componentI]);
      }

      columnEl.classList.add('column');
      columnEl.appendChild(tableEl);

      columnEls.push(columnEl);
    }

    columnEls.forEach(function(columnEl)
    {
      columnsEl.appendChild(columnEl);
    });

    document.body.classList.remove('wrap');

    if (document.body.scrollWidth >= (window.innerWidth - 30))
    {
      document.body.classList.add('wrap');
    }
  }
</script>
</body>
</html>
