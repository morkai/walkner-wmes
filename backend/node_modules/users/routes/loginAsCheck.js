// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');

module.exports = (app, module, req, res, next) =>
{
  const {loginSecretKey, email} = req.body;

  if (module.loginAs.has(loginSecretKey))
  {
    return next(app.createError('Duplicate login secret.', 'DUPLICATE_SECRET', 400));
  }

  const appSecretKey = module.config.loginAs[req.body.app];

  if (!appSecretKey)
  {
    return next(app.createError('Unknown app.', 'INPUT', 400));
  }

  if (req.body.appSecretKey !== appSecretKey)
  {
    return next(app.createError('Invalid secret.', 'AUTH', 403));
  }

  if (typeof email !== 'string' || !email.includes('@'))
  {
    return next(app.createError('Invalid e-mail.', 'INPUT', 400));
  }

  const {User} = module;

  step(
    function()
    {
      User.find({email, active: true}).select({_id: 1}).exec(this.next());
    },
    function(err, users)
    {
      if (err)
      {
        return this.skip(err);
      }

      if (users.length === 0)
      {
        return this.skip(app.createError('User not found.', 'NOT_FOUND', 400));
      }

      if (users.length > 1)
      {
        return this.skip(app.createError('Too many users.', 'TOO_MANY', 400));
      }

      module.loginAs.set(loginSecretKey, {
        user: users[0],
        timer: setTimeout(() => module.loginAs.delete(loginSecretKey), 30000)
      });
    },
    function(err)
    {
      if (err)
      {
        return next(err);
      }

      res.sendStatus(204);
    }
  );
};
