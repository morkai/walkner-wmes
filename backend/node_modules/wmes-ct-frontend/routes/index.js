// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const pceReportRoute = require('./pceReport');
const groupsReportRoute = require('./groupsReport');
const resultsReportRoute = require('./resultsReport');
const inveoRoute = require('./inveo');
const exportPcesRoute = require('./exportPces');
const addBalancingPceRoute = require('./addBalancingPce');
const exportBalancingPcesRoute = require('./exportBalancingPces');

module.exports = (app, module) =>
{
  const {
    express,
    user,
    settings,
    CtCart,
    CtLine,
    CtTodo,
    CtPce,
    CtOrderGroup,
    CtMrpConfig,
    CtUpphQuarterlyConfig,
    CtBalancingPce,
    messengerClient
  } = module;

  const dictionaries = {
    carts: CtCart,
    lines: CtLine,
    orderGroups: CtOrderGroup,
    mrpConfigs: CtMrpConfig,
    upphQuarterlyConfigs: CtUpphQuarterlyConfig
  };

  const canView = user.auth('PROD_DATA:VIEW');
  const canManage = user.auth('PROD_DATA:MANAGE');
  const canTodo = user.auth('LOCAL', 'PROD_DATA:MANAGE');

  express.get('/ct/settings', canView, settings.browseRoute('ct'));
  express.put('/ct/settings/:id', canManage, settings.updateRoute);

  express.get('/ct/state', canView, getStateRoute);

  express.get('/ct/todos', canView, express.crud.browseRoute.bind(null, app, CtTodo));
  express.get('/ct/todos/:line/:station', canTodo, inveoRoute.bind(null, app, module));

  express.get('/ct/pces', canView, express.crud.browseRoute.bind(null, app, CtPce));
  express.get(
    '/ct/pces;export.:format?',
    canView,
    exportPcesRoute.bind(null, app, module)
  );

  express.get('/ct/balancing/pces', canView, express.crud.browseRoute.bind(null, app, CtBalancingPce));
  express.get(
    '/ct/balancing/pces;export.:format?',
    canView,
    exportBalancingPcesRoute.bind(null, app, module)
  );
  express.post('/ct/balancing/pces', canTodo, addBalancingPceRoute.bind(null, app, module));

  express.get('/ct/reports/pce', canView, pceReportRoute.bind(null, app, module));
  express.get('/ct/reports/groups', canView, groupsReportRoute.bind(null, app, module));
  express.get('/ct/reports/results', canView, resultsReportRoute.bind(null, app, module));

  express.get('/inveo/:line/:station', canTodo, inveoRoute.bind(null, app, module));

  Object.keys(dictionaries).forEach(k =>
  {
    const Model = dictionaries[k];

    express.get(`/ct/${k}`, canView, express.crud.browseRoute.bind(null, app, Model));
    express.post(`/ct/${k}`, canManage, express.crud.addRoute.bind(null, app, Model));
    express.get(`/ct/${k}/:id`, canView, express.crud.readRoute.bind(null, app, Model));
    express.put(`/ct/${k}/:id`, canManage, express.crud.editRoute.bind(null, app, {
      model: Model,
      upsert: k === 'upphQuarterlyConfigs'
    }));
    express.delete(`/ct/${k}/:id`, canManage, express.crud.deleteRoute.bind(null, app, Model));
  });

  function getStateRoute(req, res, next)
  {
    messengerClient.request('ct.getAllLineState', {}, (err, lineStates) =>
    {
      if (err)
      {
        return next(err);
      }

      res.json(lineStates);
    });
  }
};
