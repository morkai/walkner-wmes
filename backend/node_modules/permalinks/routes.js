// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');

module.exports = (app, module) =>
{
  const {express, Order, KanbanComponent} = module;

  express.get('/r/productionOrder/:orderNo', (req, res) =>
  {
    res.redirect('/#orders/' + req.params.orderNo);
  });

  express.get('/r/xiconfOrder/:orderNo', (req, res) =>
  {
    res.redirect('/#xiconf/orders/' + req.params.orderNo);
  });

  express.get('/r/prodShiftOrders/:orderNo', (req, res) =>
  {
    res.redirect('/#prodShiftOrders?sort(startedAt)&orderId=string:' + req.params.orderNo);
  });

  express.get('/r/nc12/:nc12', (req, res, next) =>
  {
    const nc12 = String(req.params.nc12).toUpperCase().trim();

    if (!/^([0-9]{12}|[A-Z0-9]{7})$/.test(nc12))
    {
      return next(app.createError('Invalid 12NC.', 'INPUT', 400));
    }

    step(
      function()
      {
        Order
          .findOne({nc12})
          .select({_id: 1})
          .lean()
          .exec(this.parallel());

        Order
          .findOne({'bom.nc12': nc12})
          .select({_id: 1})
          .lean()
          .exec(this.parallel());

        KanbanComponent
          .findOne({_id: nc12})
          .select({_id: 1})
          .lean()
          .exec(this.parallel());
      },
      function(err, sapOrder, sapComponent, kanbanComponent)
      {
        if (err)
        {
          return next(err);
        }

        if (sapOrder)
        {
          return res.redirect(`/#orders?sort(-scheduledStartDate)&limit(-1337)&nc12=string:${nc12}`);
        }

        if (sapComponent)
        {
          return res.redirect(`/#orders?sort(-scheduledStartDate)&limit(-1337)&bom.nc12=string:${nc12}`);
        }

        if (kanbanComponent)
        {
          return res.redirect(`/#kanban/components/${nc12}`);
        }

        res.sendStatus(404);
      }
    );
  });
};
