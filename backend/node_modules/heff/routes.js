// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');

module.exports = (app, module) =>
{
  const {
    express,
    updater,
    user,
    fte,
    orgUnits,
    production,
    ProdShift
  } = module;

  const canView = user.auth('LOCAL', 'USER');

  express.get('/heff', (req, res) =>
  {
    res.format({
      'text/html': () =>
      {
        res.render('index', updater.getAppTemplateData('heff', req));
      }
    });
  });

  express.get('/heff/:prodLine', canView, (req, res, next) =>
  {
    req.params.prodLine = orgUnits.fix.prodLine(req.params.prodLine);

    step(
      function()
      {
        if (!req.query.shift)
        {
          const prodLineState = production.getProdLineState(req.params.prodLine);

          if (prodLineState
            && prodLineState.prodShift
            && Array.isArray(prodLineState.prodShift.quantitiesDone))
          {
            return setImmediate(this.next(), null, prodLineState.prodShift);
          }
        }

        const conditions = {
          prodLine: req.params.prodLine,
          date: new Date(parseInt(req.query.shift, 10) || fte.currentShift.date.getTime())
        };

        ProdShift
          .findOne(conditions)
          .select({_id: 0, quantitiesDone: 1})
          .lean()
          .exec(this.next());
      },
      function(err, prodShift)
      {
        if (err)
        {
          return next(err);
        }

        const quantitiesDone = prodShift && prodShift.quantitiesDone || [
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0},
          {planned: 0, actual: 0}
        ];

        res.json(quantitiesDone);
      }
    );
  });
};
