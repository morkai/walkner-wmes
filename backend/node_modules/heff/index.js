// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const setUpRoutes = require('./routes');

exports.DEFAULT_CONFIG = {
  expressId: 'express',
  updaterId: 'updater',
  mongooseId: 'mongoose',
  fteId: 'fte',
  userId: 'user',
  orgUnitsId: 'orgUnits'
};

exports.models = [
  require('./models/heffLineState')
];

exports.start = function startHeffModule(app, module)
{
  app.onModuleReady(
    [
      module.config.expressId,
      module.config.updaterId,
      module.config.mongooseId,
      module.config.fteId,
      module.config.userId,
      module.config.orgUnitsId
    ],
    setUpRoutes.bind(null, app, module)
  );

  app.broker.subscribe('production.synced.**', function(message)
  {
    if (_.includes(message.types, 'changeQuantitiesDone')
      || _.includes(message.types, 'changeShift'))
    {
      notifyReloadLine(message.prodLine);
    }
  });

  app.broker.subscribe('hourlyPlans.quantitiesPlanned', function(message)
  {
    notifyReloadLine(message.prodLine);
  });

  app.broker.subscribe('heffLineStates.**', function(message)
  {
    notifyReloadLine(message.model._id);
  });

  function notifyReloadLine(oldProdLine)
  {
    const newProdLine = app[module.config.orgUnitsId].fix.prodLine(oldProdLine);

    app.broker.publish(`heff.reload.${oldProdLine}`, {});

    if (newProdLine !== oldProdLine)
    {
      app.broker.publish(`heff.reload.${newProdLine}`, {});
    }
  }
};
