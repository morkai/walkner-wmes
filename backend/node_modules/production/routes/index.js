// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const findOrdersRoute = require('./findOrders');
const getProductionStateRoute = require('./getProductionState');
const getProductionHistoryRoute = require('./getProductionHistory');
const syncRoute = require('./sync');
const checkSerialNumberRoute = require('./checkSerialNumber');
const checkAnySerialNumberRoute = require('./checkAnySerialNumber');
const getRecentPersonnelRoute = require('./getRecentPersonnel');
const reloadLineRoute = require('./reloadLine');
const getActiveLinesRoute = require('./getActiveLines');

module.exports = (app, module) =>
{
  const {
    express,
    settings,
    user,
    updater
  } = module;

  const canView = user.auth('LOCAL', 'USER');

  express.get('/operator', function(req, res)
  {
    res.format({
      'text/html': function()
      {
        res.render('index', updater.getAppTemplateData('operator', req));
      }
    });
  });

  express.get('/production/settings', settings.browseRoute('production'));
  express.put(
    '/production/settings/:id',
    user.auth('PROD_DATA:MANAGE', 'PROD_DATA:MANAGE:SPIGOT_ONLY'),
    settings.updateRoute
  );

  express.get('/production/orders', canView, findOrdersRoute.bind(null, app, module));
  express.get('/production/state', canView, getProductionStateRoute.bind(null, app, module));
  express.get('/production/history', canView, getProductionHistoryRoute.bind(null, app, module));
  express.get('/production/getActiveLines', canView, getActiveLinesRoute.bind(null, app, module));
  express.get('/production/getRecentPersonnel', canView, getRecentPersonnelRoute.bind(null, app, module));
  express.post('/production/checkSerialNumber', canView, checkSerialNumberRoute.bind(null, app, module));
  express.post(
    '/production/checkAnySerialNumber',
    canView,
    checkAnySerialNumberRoute.bind(null, app, module)
  );
  express.post('/prodLogEntries', canView, syncRoute.bind(null, app, module));

  express.get('/production/orderQueue/:id', canView, (req, res, next) =>
  {
    module.getOrderQueue(req.params.id, (err, result) =>
    {
      if (err)
      {
        return next(err);
      }

      res.json(result.orderQueue);
    });
  });

  express.get('/production/planExecution/:id', canView, (req, res, next) =>
  {
    module.getOrderQueue(req.params.id, (err, result) =>
    {
      if (err)
      {
        return next(err);
      }

      if (req.query.queue === '0')
      {
        result.orderQueue = undefined;
      }

      res.json(result);
    });
  });

  express.get('/production/reloadLine/:line', user.auth('SUPER'), reloadLineRoute.bind(null, app, module));
};
