// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');

module.exports = (app, module) =>
{
  const {
    ProdShiftOrder,
    subscriptions,
    mailSender
  } = module;

  let endOfWorkTimer = null;
  let working = true;

  app.broker.subscribe('production.synced.**', onProductionSynced);

  function onProductionSynced({types})
  {
    if (types.includes('changeOrder'))
    {
      clearTimeout(endOfWorkTimer);
      endOfWorkTimer = null;
      working = true;
    }

    if (types.includes('changeShift') || types.includes('endWork'))
    {
      clearTimeout(endOfWorkTimer);
      endOfWorkTimer = setTimeout(checkEndOfWork, 10 * 60 * 1000);
    }
  }

  function checkEndOfWork()
  {
    endOfWorkTimer = null;

    if (!working)
    {
      return;
    }

    step(
      function()
      {
        ProdShiftOrder
          .findOne({
            startedAt: {$gt: new Date(Date.now() - 8 * 3600 * 1000)},
            finishedAt: null
          })
          .select({_id: 1})
          .lean()
          .exec(this.next());
      },
      function(err, pso)
      {
        if (err)
        {
          return this.skip(err);
        }

        if (pso)
        {
          working = true;

          return this.skip();
        }

        working = false;

        subscriptions.Subscription.findUsers({type: 'endOfWork', target: null}, this.next());
      },
      function(err, users)
      {
        if (err)
        {
          return this.skip(err);
        }

        this.notified = 0;

        users.forEach(user =>
        {
          if (!user.email)
          {
            return;
          }

          this.notified += 1;

          mailSender.send({
            to: user.email,
            subject: '[WMES] End of work',
            text: `All lines stopped working.`
          }, this.parallel());
        });
      },
      function(err)
      {
        if (err)
        {
          module.error(err, 'Failed to notify about end of work.');
        }
        else if (this.notified)
        {
          module.info('Notified about end of work.');
        }
      }
    );
  }
};
