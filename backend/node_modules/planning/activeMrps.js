// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const moment = require('moment');

let cachedAt = 0;
let cache = null;

module.exports = async (app, module) =>
{
  const {DailyMrpCount} = module;

  module.activeMrps = {
    load: done =>
    {
      if (cache && (Date.now() - cachedAt) < (3600 * 1000))
      {
        return done(null, cache);
      }

      load(done);
    }
  };

  function load(done)
  {
    DailyMrpCount
      .find({
        _id: {
          $gte: moment.utc().startOf('day').subtract(30, 'days').toDate()
        }
      })
      .select({
        'count.division': 1
      })
      .lean()
      .exec((err, dailyMrpCounts) =>
      {
        if (err)
        {
          return done(err);
        }

        cachedAt = Date.now();
        cache = {};

        dailyMrpCounts.forEach(({count}) =>
        {
          Object.keys(count).forEach(orgUnitType =>
          {
            Object.keys(count[orgUnitType]).forEach(orgUnitId =>
            {
              if (!cache[orgUnitId])
              {
                cache[orgUnitId] = {};
              }

              count[orgUnitType][orgUnitId].forEach(mrp =>
              {
                cache[orgUnitId][mrp] = true;
              });
            });
          });
        });

        Object.keys(cache).forEach(k =>
        {
          cache[k] = Object.keys(cache[k]);
        });

        done(null, cache);
      });
  }
};
