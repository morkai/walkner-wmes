// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const setUpRql = require('./rql');

exports.DEFAULT_CONFIG = {
  mongooseId: 'mongoose',
  expressId: 'express',
  userId: 'user',
  settingsId: 'settings',
  reportsId: 'reports',
  mailSenderId: 'mail/sender',
  uploadsPath: './data/uploads/osh',
  anonymousUserInfo: {
    id: '5f7a32c969226110e835d75b',
    label: 'Anonim'
  }
};

exports.models = [
  require('./models/oshCompany'),
  require('./models/oshDivision'),
  require('./models/oshWorkplace'),
  require('./models/oshDepartment'),
  require('./models/oshBuilding'),
  require('./models/oshLocation'),
  require('./models/oshStation'),
  require('./models/oshKind'),
  require('./models/oshActivityKind'),
  require('./models/oshObservationKind'),
  require('./models/oshObservationCategory'),
  require('./models/oshEventCategory'),
  require('./models/oshReasonCategory'),
  require('./models/oshRootCauseCategory'),
  require('./models/oshKaizenCategory'),
  require('./models/oshBrigade'),
  require('./models/oshEmployment'),
  require('./models/oshTarget'),
  require('./models/oshNearMiss'),
  require('./models/oshKaizen'),
  require('./models/oshAction'),
  require('./models/oshObservation'),
  require('./models/oshAccident'),
  require('./models/oshReward'),
  require('./models/oshPayout'),
  require('user/models/user'),
  require('settings/models/setting')
];

exports.modelPlugins = {
  User: require('./plugins/user')
};

exports.republishTopics = [
  'osh.companies.added', 'osh.companies.edited', 'osh.companies.deleted',
  'osh.divisions.added', 'osh.divisions.edited', 'osh.divisions.deleted',
  'osh.workplaces.added', 'osh.workplaces.edited', 'osh.workplaces.deleted',
  'osh.departments.added', 'osh.departments.edited', 'osh.departments.deleted',
  'osh.buildings.added', 'osh.buildings.edited', 'osh.buildings.deleted',
  'osh.locations.added', 'osh.locations.edited', 'osh.locations.deleted',
  'osh.stations.added', 'osh.stations.edited', 'osh.stations.deleted',
  'osh.kinds.added', 'osh.kinds.edited', 'osh.kinds.deleted',
  'osh.activityKinds.added', 'osh.activityKinds.edited', 'osh.activityKinds.deleted',
  'osh.observationKinds.added', 'osh.observationKinds.edited', 'osh.observationKinds.deleted',
  'osh.observationCategories.added', 'osh.observationCategories.edited', 'osh.observationCategories.deleted',
  'osh.eventCategories.added', 'osh.eventCategories.edited', 'osh.eventCategories.deleted',
  'osh.reasonCategories.added', 'osh.reasonCategories.edited', 'osh.reasonCategories.deleted',
  'osh.rootCauseCategories.added', 'osh.rootCauseCategories.edited', 'osh.rootCauseCategories.deleted',
  'osh.kaizenCategories.added', 'osh.kaizenCategories.edited', 'osh.kaizenCategories.deleted',
  'osh.brigades.added', 'osh.brigades.edited', 'osh.brigades.deleted',
  'osh.employments.added', 'osh.employments.edited', 'osh.employments.deleted',
  'osh.targets.added', 'osh.targets.edited', 'osh.targets.deleted',
  'osh.nearMisses.added', 'osh.nearMisses.edited', 'osh.nearMisses.deleted',
  'osh.nearMisses.updated.*', 'osh.nearMisses.seen.*', 'osh.nearMisses.relations.*',
  'osh.kaizens.added', 'osh.kaizens.edited', 'osh.kaizens.deleted',
  'osh.kaizens.updated.*', 'osh.kaizens.seen.*', 'osh.kaizens.relations.*',
  'osh.actions.added', 'osh.actions.edited', 'osh.actions.deleted',
  'osh.actions.updated.*', 'osh.actions.seen.*', 'osh.actions.relations.*',
  'osh.observations.added', 'osh.observations.edited', 'osh.observations.deleted',
  'osh.observations.updated.*', 'osh.observations.seen.*', 'osh.observations.relations.*',
  'osh.accidents.added', 'osh.accidents.edited', 'osh.accidents.deleted',
  'osh.accidents.updated.*', 'osh.accidents.seen.*', 'osh.accidents.relations.*',
  'osh.rewards.updated',
  'osh.payouts.added', 'osh.payouts.deleted'
];

exports.recordTopics = {
  debug: [
    'osh.companies.added', 'osh.companies.edited',
    'osh.divisions.added', 'osh.divisions.edited',
    'osh.workplaces.added', 'osh.workplaces.edited',
    'osh.departments.added', 'osh.departments.edited',
    'osh.buildings.added', 'osh.buildings.edited',
    'osh.locations.added', 'osh.locations.edited',
    'osh.stations.added', 'osh.stations.edited',
    'osh.kinds.added', 'osh.kinds.edited',
    'osh.activityKinds.added', 'osh.activityKinds.edited',
    'osh.observationKinds.added', 'osh.observationKinds.edited',
    'osh.observationCategories.added', 'osh.observationCategories.edited',
    'osh.eventCategories.added', 'osh.eventCategories.edited',
    'osh.reasonCategories.added', 'osh.reasonCategories.edited',
    'osh.rootCauseCategories.added', 'osh.rootCauseCategories.edited',
    'osh.kaizenCategories.added', 'osh.kaizenCategories.edited',
    'osh.brigades.added', 'osh.brigades.edited',
    'osh.employments.added', 'osh.employments.edited',
    'osh.targets.added', 'osh.targets.edited'
  ],
  warning: [
    'osh.companies.deleted',
    'osh.divisions.deleted',
    'osh.workplaces.deleted',
    'osh.departments.deleted',
    'osh.buildings.deleted',
    'osh.locations.deleted',
    'osh.stations.deleted',
    'osh.kinds.deleted',
    'osh.activityKinds.deleted',
    'osh.observationKinds.deleted',
    'osh.observationCategories.deleted',
    'osh.eventCategories.deleted',
    'osh.reasonCategories.deleted',
    'osh.rootCauseCategories.deleted',
    'osh.kaizenCategories.deleted',
    'osh.brigades.deleted',
    'osh.employments.deleted',
    'osh.targets.deleted',
    'osh.nearMisses.deleted',
    'osh.kaizens.deleted',
    'osh.actions.deleted',
    'osh.observations.deleted',
    'osh.accidents.deleted',
    'osh.rewards.deleted',
    'osh.payouts.deleted'
  ]
};

exports.userPrivileges = [
  'OSH:COORDINATOR', 'OSH:LEADER', 'OSH:OBSERVER',
  'OSH:HR:VIEW', 'OSH:HR:MANAGE',
  'OSH:DICTIONARIES:VIEW', 'OSH:DICTIONARIES:MANAGE',
  'OSH:NEAR_MISSES:MANAGE',
  'OSH:KAIZENS:MANAGE',
  'OSH:ACTIONS:MANAGE',
  'OSH:OBSERVATIONS:MANAGE',
  'OSH:ACCIDENTS:VIEW', 'OSH:ACCIDENTS:MANAGE',
  'OSH:REWARDS:VIEW', 'OSH:REWARDS:MANAGE'
];

exports.optionalModules = {
  'express': require('./attachments'),
  'mongoose': [
    require('./relations'),
    require('./durations'),
    require('./stats'),
    require('./nameCache'),
    require('./autoData')
  ],
  'mailSender': [
    require('./notifier'),
    require('./reminder')
  ],
  'mongoose user express settings reports': require('./routes')
};

exports.start = (app, module) =>
{
  module.DICTIONARIES = {
    companies: {model: module.OshCompany},
    divisions: {model: module.OshDivision},
    workplaces: {model: module.OshWorkplace},
    departments: {model: module.OshDepartment},
    buildings: {model: module.OshBuilding},
    locations: {model: module.OshLocation},
    stations: {model: module.OshStation},
    kinds: {model: module.OshKind},
    activityKinds: {model: module.OshActivityKind},
    observationKinds: {model: module.OshObservationKind},
    observationCategories: {model: module.OshObservationCategory},
    eventCategories: {model: module.OshEventCategory},
    reasonCategories: {model: module.OshReasonCategory},
    rootCauseCategories: {model: module.OshRootCauseCategory},
    kaizenCategories: {model: module.OshKaizenCategory}
  };

  module.TYPE_TO_MODEL = {
    [module.OshNearMiss.RELATION_TYPE]: module.OshNearMiss,
    [module.OshKaizen.RELATION_TYPE]: module.OshKaizen,
    [module.OshAction.RELATION_TYPE]: module.OshAction,
    [module.OshObservation.RELATION_TYPE]: module.OshObservation,
    [module.OshAccident.RELATION_TYPE]: module.OshAccident
  };

  module.createUserInfo = (userData, addressData) =>
  {
    const userInfo = app[module.config.userId].createUserInfo(userData, addressData);

    if (userData.oshDivision > 0
      && userData.oshWorkplace > 0)
    {
      userInfo.oshDivision = userData.oshDivision;
      userInfo.oshWorkplace = userData.oshWorkplace;
      userInfo.oshDepartment = userData.oshDepartment > 0 ? userData.oshDepartment : 0;
    }
    else if (addressData
      && addressData.body
      && addressData.body.userDivision > 0
      && addressData.body.userWorkplace > 0)
    {
      userInfo.oshDivision = addressData.body.userDivision;
      userInfo.oshWorkplace = addressData.body.userWorkplace;
      userInfo.oshDepartment = addressData.body.userDepartment > 0 ? addressData.body.userDepartment : 0;
    }

    return userInfo;
  };

  setUpRql();
};
