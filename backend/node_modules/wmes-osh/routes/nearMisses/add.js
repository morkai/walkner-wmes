// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const locks = require('util/locks');

module.exports = async (app, module, req, res, next) =>
{
  const {
    user,
    OshNearMiss
  } = module;

  const releaseLock = await locks.createAsync(`${OshNearMiss.TOPIC_PREFIX}.add`);

  const input = _.pick(req.body, [
    'anonymous',
    'subject',
    'userWorkplace',
    'userDivision',
    'kind',
    'workplace',
    'division',
    'building',
    'location',
    'station',
    'eventDate',
    'eventCategory',
    'reasonCategory',
    'problem',
    'reason',
    'suggestion',
    'implementer',
    'plannedAt',
    'priority',
    'attachments'
  ]);

  if (input.attachments && Array.isArray(input.attachments.added))
  {
    input.attachments = module.attachments.claimPendingUploads(input.attachments.added);
  }
  else
  {
    input.attachments = [];
  }

  try
  {
    const creator = !input.anonymous
      ? user.createUserInfo(req.session.user, req)
      : module.config.anonymousUserInfo;

    const implementer = !input.anonymous && input.implementer && input.implementer.id === creator.id
      ? _.omit(creator, ['ip'])
      : null;

    const nearMiss = new OshNearMiss({
      ...input,
      status: 'new',
      createdAt: new Date(),
      startedAt: null,
      finishedAt: null,
      duration: 0,
      resolution: {
        id: 0,
        type: 'unspecified'
      },
      creator,
      implementer
    });

    const [coordinators] = await Promise.all([
      OshNearMiss.resolveCoordinators(nearMiss),
      OshNearMiss.assignNextRid(nearMiss)
    ]);

    nearMiss.coordinators = coordinators;

    nearMiss.updateUsers([], nearMiss.creator);

    await nearMiss.save();

    app.broker.publish(`${OshNearMiss.TOPIC_PREFIX}.added`, {
      user: nearMiss.creator,
      model: nearMiss
    });

    res.json(nearMiss);
  }
  catch (err)
  {
    next(err);
  }
  finally
  {
    releaseLock();
  }
};
