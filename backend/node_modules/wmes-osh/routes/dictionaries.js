// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const step = require('h5.step');

let cache;

function setUpCache(app, module)
{
  app.broker.subscribe('updater.newVersion', clearCache).setFilter(m => m.service === 'frontend');
  app.broker.subscribe('settings.updated.osh.**', clearCache);

  _.forEach(module.DICTIONARIES, ({model}) =>
  {
    app.broker.subscribe(`${model.TOPIC_PREFIX}.**`, clearCache);
  });

  cache = null;
}

function clearCache()
{
  cache = null;
}

module.exports = (app, module, req, res, next) =>
{
  if (typeof cache === 'string')
  {
    res.type('json');
    res.end(cache);

    return;
  }

  const {
    settings,
    DICTIONARIES,
    OshKind,
    OshNearMiss,
    OshKaizen,
    OshAction,
    OshObservation,
    OshAccident
  } = module;

  if (cache === undefined)
  {
    setUpCache(app, module);
  }

  step(
    function()
    {
      settings.find({_id: /^osh\./}, this.group());

      _.forEach(DICTIONARIES, ({model, load}) =>
      {
        if (load !== false)
        {
          model.find().lean().exec(this.group());
        }
      });
    },
    function(err, dictionaries)
    {
      if (err)
      {
        return next(err);
      }

      const result = {
        priorities: [0, 1, 2, 3],
        kindTypes: OshKind.TYPES,
        statuses: {
          nearMiss: OshNearMiss.STATUSES,
          kaizen: OshKaizen.STATUSES,
          action: OshAction.STATUSES,
          observation: OshObservation.STATUSES,
          accidents: OshAccident.STATUSES
        },
        settings: dictionaries.shift()
      };

      _.forEach(DICTIONARIES, ({load}, dictionaryName) =>
      {
        if (load !== false)
        {
          result[dictionaryName] = dictionaries.shift();
        }
      });

      cache = JSON.stringify(result);

      res.type('json');
      res.end(cache);
    }
  );
};
