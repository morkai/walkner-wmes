// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const exportRoute = require('./export');

module.exports = (app, module) =>
{
  const {
    user,
    express,
    OshBrigade,
    OshReward
  } = module;

  const canView = user.auth('USER');

  express.get(
    `/osh/rewards`,
    canView,
    prepareBrowseFilter,
    express.crud.browseRoute.bind(null, app, OshReward)
  );
  express.get(
    '/osh/rewards;export.:format?',
    canView,
    prepareBrowseFilter,
    exportRoute.bind(null, app, module)
  );
  express.get(`/osh/rewards/:id`, canView, express.crud.readRoute.bind(null, app, OshReward));

  async function prepareBrowseFilter(req, res, next)
  {
    const filters = {
      employee: null,
      leader: null,
      orgUnitType: null,
      orgUnitId: null
    };

    req.rql.selector.args.forEach(term =>
    {
      if (term.args[0] === 'employee')
      {
        filters.employee = term;
      }
      else if (term.args[0] === 'leader')
      {
        filters.leader = term;
      }
      else if (term.args[0] === 'division')
      {
        filters.orgUnitType = 'oshDivision';
        filters.orgUnitId = term;
      }
      else if (term.args[0] === 'workplace')
      {
        filters.orgUnitType = 'oshWorkplace';
        filters.orgUnitId = term;
      }
      else if (term.args[0] === 'department')
      {
        filters.orgUnitType = 'oshDepartment';
        filters.orgUnitId = term;
      }
    });

    if (filters.employee)
    {
      filters.employee.args[0] = 'recipient.id';
    }

    if (filters.leader)
    {
      const brigade = await OshBrigade
        .findOne({'leader.id': filters.leader.args[1]})
        .lean()
        .exec();

      filters.leader.name = 'in';
      filters.leader.args[0] = 'recipient.id';

      if (brigade)
      {
        const members = new Set();

        members.add(brigade.leader.id);

        brigade.members.forEach(user => members.add(user.id));

        filters.leader.args[1] = Array.from(members);
      }
      else
      {
        filters.leader.args[1] = [];
      }
    }

    if (filters.orgUnitId)
    {
      filters.orgUnitId.args[0] = `recipient.${filters.orgUnitType}`;
    }

    next();
  }
};
