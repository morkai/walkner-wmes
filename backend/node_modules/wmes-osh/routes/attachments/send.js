// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const path = require('path');
const contentDisposition = require('content-disposition');

module.exports = async (app, module, req, res, next) =>
{
  const {
    OshNearMiss,
    OshKaizen
  } = module;

  const typeToModel = {
    nearMisses: OshNearMiss,
    kaizens: OshKaizen
  };

  const Model = typeToModel[req.params.modelType];

  if (!Model)
  {
    return next(app.createError('Unknown model type.', 'INPUT', 400));
  }

  try
  {
    const model = await Model
      .findById(req.params.modelId)
      .select({attachments: 1})
      .exec();

    if (!model)
    {
      return next(app.createError('Model not found.', 'NOT_FOUND', 404));
    }

    const attachment = model.attachments.find(a => a._id === req.params.attachmentId);

    if (!attachment)
    {
      return next(app.createError('Attachment not found.', 'NOT_FOUND', 404));
    }

    if (attachment.type.startsWith('image/')
      && attachment.type !== 'image/gif'
      && !attachment.meta.width
      && !attachment.meta.height)
    {
      await module.attachments.optimizeImage(attachment, model);
    }

    const min = req.query.min === '1' && attachment.meta.min;
    const filePath = path.join(module.config.uploadsPath, attachment._id) + (min ? '_min' : '');
    const disposition = req.query.download === '1' ? 'attachment' : 'inline';

    if (attachment.type.includes('image/'))
    {
      res.set('Cache-Control', 'max-age=604800, public');
    }

    res.type(attachment.type);
    res.append('Content-Disposition', contentDisposition(attachment.file, {type: disposition}));
    res.sendFile(filePath);
  }
  catch (err)
  {
    next(err);
  }
};
