// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');

module.exports = async (app, module, req, res, next) =>
{
  const {
    user,
    OshKaizen
  } = module;

  const input = _.pick(req.body, [
    'subject',
    'userWorkplace',
    'userDivision',
    'kind',
    'eventCategory',
    'workplace',
    'division',
    'building',
    'location',
    'station',
    'problem',
    'reason',
    'suggestion',
    'solution',
    'implementers',
    'plannedAt',
    'attachments'
  ]);

  if (input.attachments && Array.isArray(input.attachments.added))
  {
    input.attachments = module.attachments.claimPendingUploads(input.attachments.added);
  }
  else
  {
    input.attachments = [];
  }

  try
  {
    const kaizen = new OshKaizen({
      ...input,
      status: req.body.status === 'inProgress' ? 'inProgress' : 'new',
      createdAt: new Date(),
      startedAt: null,
      finishedAt: null,
      duration: 0,
      creator: user.createUserInfo(req.session.user, req)
    });

    const [coordinators] = await Promise.all([
      OshKaizen.resolveCoordinators(kaizen),
      OshKaizen.assignNextRid(kaizen)
    ]);

    kaizen.coordinators = coordinators;

    kaizen.updateParticipants([], kaizen.creator);

    await kaizen.save();

    app.broker.publish(`${OshKaizen.TOPIC_PREFIX}.added`, {
      user: kaizen.creator,
      model: kaizen
    });

    res.json(kaizen);
  }
  catch (err)
  {
    next(err);
  }
};
