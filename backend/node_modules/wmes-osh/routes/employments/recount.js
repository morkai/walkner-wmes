// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

module.exports = async (app, module, req, res) =>
{
  const {
    User
  } = module;

  const result = {
    0: {internal: 0, external: 0, observers: 0}
  };

  const [employees, observers] = await Promise.all([
    User
      .aggregate([
        {$match: {
          active: true,
          oshDepartment: {$gt: 0}
        }},
        {$group: {
          _id: '$oshDepartment',
          internal: {$sum: {$cond: {if: {$eq: ['$oshExternal', false]}, then: 1, else: 0}}},
          external: {$sum: {$cond: {if: {$eq: ['$oshExternal', true]}, then: 1, else: 0}}}
        }}
      ])
      .exec(),
    User
      .aggregate([
        {$match: {
          active: true,
          privileges: 'OSH:OBSERVER',
          oshDepartment: {$gt: 0}
        }},
        {$group: {
          _id: '$oshDepartment',
          users: {$push: {
            _id: '$_id',
            firstName: '$firstName',
            lastName: '$lastName',
            login: '$login'
          }}
        }}
      ])
      .exec()
  ]);

  employees.forEach(item =>
  {
    result[item._id || 0] = {
      internal: item.internal,
      external: item.external,
      observers: 0,
      observerUsers: []
    };
  });

  observers.forEach(item =>
  {
    result[item._id || 0].observers = item.users.length;
    result[item._id || 0].observerUsers = item.users.map(user => ({
      id: user._id.toString(),
      label: User.prepareLabel(user)
    }));
  });

  res.json(result);
};
