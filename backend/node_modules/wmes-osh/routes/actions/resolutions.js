// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

module.exports = async (app, module, req, res, next) =>
{
  const {
    OshAction,
    OshKaizen
  } = module;

  try
  {
    const action = await OshAction
      .findOne({
        [/^[0-9]+$/.test(req.params.id) ? '_id' : 'rid']: req.params.id
      })
      .select({
        resolutions: 1
      })
      .lean()
      .exec();

    if (!action)
    {
      return next(app.createError('Entry not found.', 'NOT_FOUND', 404));
    }

    if (!action.resolutions || !action.resolutions.length)
    {
      return res.json({
        totalCount: 0,
        collection: []
      });
    }

    const rids = action.resolutions.map(r => r.rid);

    const [actions, kaizens] = await Promise.all([
      OshAction
        .find({rid: {$in: rids}})
        .select({
          rid: 1,
          subject: 1,
          status: 1,
          creator: 1,
          createdAt: 1,
          implementers: 1
        })
        .lean()
        .exec(),
      OshKaizen
        .find({rid: {$in: rids}})
        .select({
          rid: 1,
          subject: 1,
          status: 1,
          creator: 1,
          createdAt: 1,
          implementers: 1
        })
        .lean()
        .exec()
    ]);

    const resolutions = actions.concat(kaizens);

    res.json({
      totalCount: resolutions.length,
      collection: resolutions
    });
  }
  catch (err)
  {
    next(err);
  }
};
