// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

module.exports = async (app, module, req, res, next) =>
{
  const {
    express,
    nameCache,
    OshObservation
  } = module;

  const names = await nameCache.load([
    'divisions',
    'workplaces',
    'departments',
    'buildings',
    'locations',
    'stations',
    'companies',
    'observationKinds',
    'observationCategories'
  ]);

  const columns = {
    rid: 13,
    status: 10,
    createdAt: 'datetime',
    finishedAt: 'datetime',
    duration: 'decimal',
    creator: 20,
    coordinators: 20,
    division: 20,
    workplace: 20,
    department: 20,
    building: 20,
    location: 20,
    station: 20,
    date: 'datetime+utc',
    company: 20,
    kind: 20,
    workCondition: 'boolean',
    category: 20,
    safe: 'boolean',
    easy: 'boolean',
    what: 40,
    why: 40,
    resolution: 13
  };

  req.rql.fields = {
    companyName: 1,
    observationKind: 1,
    behaviors: 1,
    workConditions: 1
  };

  Object.keys(columns).forEach(field => req.rql.fields[field] = 1);

  express.crud.exportRoute(app, {
    filename: 'WMES_OSH_OBSERVATIONS',
    freezeRows: 1,
    freezeColumns: 1,
    columns,
    model: OshObservation,
    serializeRow
  }, req, res, next);

  function serializeRow(doc)
  {
    const rows = [];

    doc.behaviors.forEach(o => addObservation(false, o));
    doc.workConditions.forEach(o => addObservation(true, o));

    return rows;

    function addObservation(workCondition, o)
    {
      rows.push({
        rid: doc.rid,
        status: doc.status,
        createdAt: doc.createdAt,
        finishedAt: doc.finishedAt,
        duration: Math.round(doc.duration / 3600 * 1000) / 1000,
        creator: doc.creator.label,
        coordinators: doc.coordinators.map(u => u.label).join('; '),
        division: names.single('divisions', doc.division),
        workplace: names.single('workplaces', doc.division),
        department: names.single('departments', doc.department),
        building: names.single('buildings', doc.building),
        location: names.single('locations', doc.location),
        station: names.single('stations', doc.station),
        date: doc.date,
        company: doc.companyName || names.single('companies', doc.company),
        kind: names.single('observationKinds', doc.observationKind),
        workCondition,
        category: o.text,
        safe: o.safe,
        easy: o.easy,
        what: o.what,
        why: o.why,
        resolution: o.resolution.rid
      });
    }
  }
};
