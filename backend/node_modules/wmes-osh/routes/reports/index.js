// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const helpers = require('reports/routes/helpers');
const countRoute = require('./count');
const observersRoute = require('./observers');
const engagementRoute = require('./engagement');
const metricsRoute = require('./metrics');
const rewardsRoute = require('./rewards');

module.exports = (app, module) =>
{
  const {
    express,
    user,
    reports,
    OshReward
  } = module;

  const canView = user.auth('USER');

  express.get(
    '/osh/reports/count/:type',
    canView,
    reports.helpers.sendCachedReport.bind(null, 'wmes-osh/count'),
    countRoute.bind(null, app, module)
  );

  express.get(
    '/osh/reports/observers',
    canView,
    reports.helpers.sendCachedReport.bind(null, 'wmes-osh/observers'),
    observersRoute.bind(null, app, module)
  );

  express.get(
    '/osh/reports/engagement',
    canView,
    reports.helpers.sendCachedReport.bind(null, 'wmes-osh/engagement'),
    engagementRoute.bind(null, app, module)
  );

  express.get(
    '/osh/reports/metrics',
    canView,
    reports.helpers.sendCachedReport.bind(null, 'wmes-osh/metrics'),
    metricsRoute.bind(null, app, module)
  );

  express.get(
    '/osh/reports/rewards',
    canView,
    reports.helpers.sendCachedReport.bind(null, 'wmes-osh/rewards'),
    rewardsRoute.bind(null, app, module)
  );

  app.broker.subscribe(`${OshReward.TOPIC_PREFIX}.updated`, () =>
  {
    helpers.clearCachedReports('wmes-osh/rewards');
  });

  app.broker.subscribe(`settings.updated.osh.rewards.**`, () =>
  {
    helpers.clearCachedReports('wmes-osh/rewards');
  });
};
