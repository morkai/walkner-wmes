// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const nearMissesRoutes = require('./nearMisses');
const kaizensRoutes = require('./kaizens');
const actionsRoutes = require('./actions');
const observationsRoutes = require('./observations');
const attachmentsRoutes = require('./attachments');
const dictionariesRoute = require('./dictionaries');
const employmentsRoutes = require('./employments');
const brigadesRoutes = require('./brigades');
const reportsRoutes = require('./reports');
const markAsSeenRoute = require('./markAsSeen');

module.exports = (app, module) =>
{
  const {
    user,
    express,
    settings,
    DICTIONARIES
  } = module;

  const canView = user.auth('USER');
  const canViewDictionaries = user.auth('OSH:DICTIONARIES:VIEW');
  const canManageDictionaries = user.auth('OSH:DICTIONARIES:MANAGE');

  nearMissesRoutes(app, module);
  kaizensRoutes(app, module);
  actionsRoutes(app, module);
  observationsRoutes(app, module);
  employmentsRoutes(app, module);
  brigadesRoutes(app, module);
  reportsRoutes(app, module);

  if (module.config.uploadsPath)
  {
    attachmentsRoutes(app, module);
  }

  express.get('/osh/settings', canView, settings.browseRoute('fap'));
  express.put('/osh/settings/:id', canManageDictionaries, settings.updateRoute);

  express.get('/osh/dictionaries', canView, dictionariesRoute.bind(null, app, module));

  express.post('/osh/:modelType;mark-as-seen', canView, markAsSeenRoute.bind(null, app, module));

  Object.keys(DICTIONARIES).forEach(k =>
  {
    const options = DICTIONARIES[k];
    const canViewDictionary = options.canView || canViewDictionaries;
    const canManageDictionary = options.canManage || canManageDictionaries;

    express.get(`/osh/${k}`, canViewDictionary, express.crud.browseRoute.bind(null, app, options));
    express.post(`/osh/${k}`, canManageDictionary, express.crud.addRoute.bind(null, app, options));
    express.get(`/osh/${k}/:id`, canViewDictionary, express.crud.readRoute.bind(null, app, options));
    express.put(`/osh/${k}/:id`, canManageDictionary, express.crud.editRoute.bind(null, app, options));
    express.delete(`/osh/${k}/:id`, canManageDictionary, express.crud.deleteRoute.bind(null, app, options));
  });
};
