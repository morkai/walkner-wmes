// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const rql = require('h5.rql');

const TYPES = {
  any: true,
  behaviors: true,
  workConditions: true
};
const FILTERS = {
  any: true,
  safe: true,
  risky: true,
  easy: true,
  hard: true,
  todo: true
};

module.exports = () =>
{
  rql.specialTerms.observation = (query, name, args) =>
  {
    const selectorName = query.selector.name;

    if (selectorName !== 'and' && selectorName !== 'or' && selectorName !== 'nor')
    {
      return;
    }

    const type = args.shift();
    const filter = args.shift() || 'any';
    const categories = args.shift() || [];

    if (!TYPES[type] || !FILTERS[filter] || !Array.isArray(categories) || !categories.every(c => c > 0))
    {
      return;
    }

    if (type === 'any' && filter === 'any' && categories.length === 0)
    {
      return;
    }

    const or = {
      name: 'or',
      args: []
    };

    if (type === 'any' || type === 'behaviors')
    {
      or.args.push({
        name: 'elemMatch',
        args: ['behaviors']
      });
    }

    if (type === 'any' || type === 'workConditions')
    {
      or.args.push({
        name: 'elemMatch',
        args: ['workConditions']
      });
    }

    or.args.forEach(term =>
    {
      if (categories.length)
      {
        term.args.push({
          name: 'in',
          args: ['category', categories]
        });
      }

      switch (filter)
      {
        case 'safe':
          term.args.push({name: 'eq', args: ['safe', true]});
          break;

        case 'risky':
          term.args.push({name: 'eq', args: ['safe', false]});
          break;

        case 'easy':
          term.args.push({name: 'eq', args: ['easy', true]});
          break;

        case 'hard':
          term.args.push({name: 'eq', args: ['easy', false]});
          break;

        case 'todo':
        {
          if (term.args[0] === 'behaviors')
          {
            term.args.push(
              {name: 'eq', args: ['easy', false]},
              {name: 'eq', args: ['resolution._id', 0]}
            );
          }
          else
          {
            term.args.push({name: 'eq', args: ['resolution._id', 0]});
          }

          break;
        }
      }

      if (term.args.length === 1) // Any and no categories
      {
        term.name = 'exists';
        term.args[0] += '.0';
        term.args.push(true);
      }
    });

    if (or.args.length === 1)
    {
      query.selector.args.push(or.args[0]);
    }
    else
    {
      query.selector.args.push(or);
    }
  };
};
