// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

exports.name = 'Luma2Event';

exports.setUp = (app, mongoose) =>
{
  const TYPES = {
    10001: 'connected',
    10002: 'disconnected',
    10003: 'order-queued',
    1: 'order-started',
    2: 'order-finished',
    3: 'rearm-started',
    4: 'rearm-finished',
    5: 'pce-started',
    6: 'pce-finished',
    7: 'inspection-started',
    8: 'inspection-finished',
    9: 'receipt-started',
    10: 'receipt-finished',
    11: 'delivery-started',
    12: 'delivery-finished',
    13: 'estop-started',
    14: 'estop-finished',
    15: 'pause-started',
    16: 'pause-finished'
  };
  const WEIGHTS = {
    'connected': -300,
    'disconnected': -200,
    'order-queued': -100,
    'order-started': 100,
    'receipt-started': 150,
    'delivery-started': 150,
    'pce-started': 200,
    'rearm-started': 300,
    'rearm-finished': 400,
    'inspection-started': 500,
    'inspection-finished': 600,
    'pce-finished': 700,
    'receipt-finished': 750,
    'delivery-finished': 750,
    'estop-started': 800,
    'estop-finished': 900,
    'pause-started': 1000,
    'pause-finished': 1100,
    'order-finished': 100000
  };

  const luma2EventSchema = new mongoose.Schema({
    line: {
      type: String,
      required: true
    },
    type: {
      type: String,
      required: true
    },
    time: {
      type: Date,
      required: true
    },
    station: {
      type: Number,
      default: -1
    },
    program: {
      type: Number,
      default: -1
    },
    order: {
      type: String,
      default: ''
    },
    pce: {
      type: Number,
      default: -1
    }
  }, {
    id: false,
    versionKey: false
  });

  luma2EventSchema.statics.TOPIC_PREFIX = 'luma2.events';
  luma2EventSchema.statics.BROWSE_LIMIT = 100;
  luma2EventSchema.statics.TYPES = TYPES;
  luma2EventSchema.statics.WEIGHTS = WEIGHTS;

  luma2EventSchema.index({time: -1});
  luma2EventSchema.index({order: 1, time: -1});
  luma2EventSchema.index({line: 1, time: -1});
  luma2EventSchema.index({type: 1, time: -1});
  luma2EventSchema.index({station: 1, time: -1});
  luma2EventSchema.index({program: 1, time: -1});

  mongoose.model(exports.name, luma2EventSchema);
};
