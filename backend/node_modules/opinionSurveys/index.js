// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const buildSurveyPdf = require('./buildSurveyPdf');
const deskewImage = require('./deskewImage');
const decodeQrCode = require('./decodeQrCode');
const recognizeMarks = require('./recognizeMarks');

exports.DEFAULT_CONFIG = {
  mongooseId: 'mongoose',
  httpServerId: 'httpServer',
  expressId: 'express',
  userId: 'user',
  settingsId: 'settings',
  mailSenderId: 'mail/sender',
  reportsId: 'reports',
  directoryWatcherId: 'directoryWatcher',
  wkhtmltopdfExe: 'wkhtmltopdf',
  zintExe: 'zint',
  deskewExe: 'deskew',
  zbarimgExe: 'zbarimg',
  decodeQrExe: 'DecodeQR',
  omrExe: 'OMR',
  templatesPath: './opinion/templates',
  surveysPath: './opinion/surveys',
  inputPath: './opinion/input',
  processingPath: './opinion/processing',
  responsesPath: './opinion/responses'
};

exports.models = [
  require('./models/opinionSurvey'),
  require('./models/opinionSurveyAction'),
  require('./models/opinionSurveyDivision'),
  require('./models/opinionSurveyEmployer'),
  require('./models/opinionSurveyOmrResult'),
  require('./models/opinionSurveyQuestion'),
  require('./models/opinionSurveyResponse'),
  require('./models/opinionSurveyScanTemplate')
];

exports.optionalModules = {
  'mongoose': require('./cleanup'),
  'mongoose directoryWatcher': require('./omr'),
  'mongoose mailSender': require('./actionNotifier'),
  'mongoose httpServer express user reports settings': require('./routes')
};

exports.start = (app, module) =>
{
  module.DICTIONARIES = {
    employers: 'OpinionSurveyEmployer',
    divisions: 'OpinionSurveyDivision',
    questions: 'OpinionSurveyQuestion'
  };

  module.surveyPreviews = {};

  module.buildSurveyPdf = buildSurveyPdf.bind(null, app, module);
  module.deskewImage = deskewImage.bind(null, app, module);
  module.decodeQrCode = decodeQrCode.bind(null, app, module);
  module.recognizeMarks = recognizeMarks.bind(null, app, module);

  module.generateId = function()
  {
    const id = Date.now().toString(36).toUpperCase()
      + Math.round(1000000000 + Math.random() * 8999999999).toString(36).toUpperCase();

    return _.padEnd(id, 15, 0);
  };
};
