// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');
const step = require('h5.step');

module.exports = (app, module, req, res, next) =>
{
  const mongoose = app[module.config.mongooseId];
  const OpinionSurvey = mongoose.model('OpinionSurvey');
  const OpinionSurveyDivision = mongoose.model('OpinionSurveyDivision');

  let template = req.query.template;

  if (!_.isString(template) || !/^[a-z0-9-]+$/i.test(template))
  {
    return next(app.createError('INVALID_TEMPLATE', 400));
  }

  const id = req.params.id;
  const preview = (/^PREVIEW/.test(id));
  const language = req.query.lang || 'pl';

  step(
    function()
    {
      if (preview)
      {
        setImmediate(this.parallel(), null, module.surveyPreviews[id]);
      }
      else
      {
        OpinionSurvey.findById(req.params.id).lean().exec(this.parallel());
      }

      OpinionSurveyDivision.find({}, {short: 1}).lean().exec(this.parallel());
    },
    function(err, survey, divisions)
    {
      if (err)
      {
        return next(err);
      }

      if (!survey)
      {
        return next(app.createError('NOT_FOUND', 404));
      }

      if (survey.template)
      {
        template = survey.template + '/' + template;
      }

      const templateData = OpinionSurvey.translate(survey, divisions, language, preview);

      res.render('opinionSurveys:' + template, templateData);
    }
  );
};
