// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');
const moment = require('moment');

module.exports = (app, {OpinionSurvey, OpinionSurveyDivision}, req, res, next) =>
{
  const currentDate = moment().startOf('day').toDate();

  step(
    function findCurrentSurveyStep()
    {
      OpinionSurvey
        .findOne({
          startDate: {$lte: currentDate},
          endDate: {$gte: currentDate}
        })
        .sort({startDate: -1})
        .lean()
        .exec(this.next());
    },
    function findNextSurveyStep(err, survey)
    {
      if (err)
      {
        return this.skip(err);
      }

      OpinionSurveyDivision
        .find({}, {short: 1})
        .lean()
        .exec(this.parallel());

      if (survey)
      {
        this.survey = survey;
      }
      else
      {
        OpinionSurvey
          .findOne({startDate: {$gte: currentDate}})
          .sort({startDate: 1})
          .lean()
          .exec(this.parallel());
      }
    },
    function sendCurrentSurveyStep(err, divisions, nextSurvey)
    {
      if (err)
      {
        return next(err);
      }

      const survey = nextSurvey || this.survey;
      const template = this.survey
        ? `opinionSurveys:${this.survey.template}/current`
        : 'opinionSurveys:closed';
      const language = req.query.lang === 'ua' ? 'ua' : 'pl';

      res.format({
        json: () =>
        {
          if (survey)
          {
            res.send(survey);
          }
          else
          {
            res.sendStatus(404);
          }
        },
        html: function()
        {
          res.render(template, OpinionSurvey.translate(survey, divisions, language, false));
        }
      });
    }
  );
};
