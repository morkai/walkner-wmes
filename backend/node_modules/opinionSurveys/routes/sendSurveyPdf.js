// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const path = require('path');
const fs = require('fs');
const step = require('h5.step');

module.exports = (app, module, req, res, next) =>
{
  const surveyId = req.params.id;
  const {recreate, custom} = req.query;
  const lang = req.query.lang === 'ua' ? 'ua' : 'pl';
  const surveyPdfFile = path.join(module.config.surveysPath, `${surveyId}.${lang}.pdf`);
  const customPdfFile = path.join(module.config.surveysPath, `${surveyId}.${lang}.custom.pdf`);

  step(
    function statFileStep()
    {
      if (recreate === '1')
      {
        return;
      }

      const surveyDone = this.parallel();
      const customDone = this.parallel();

      fs.stat(surveyPdfFile, function(err, stats) { surveyDone(null, stats); }); // eslint-disable-line handle-callback-err
      fs.stat(customPdfFile, function(err, stats) { customDone(null, stats); }); // eslint-disable-line handle-callback-err
    },
    function checkExistenceStep(err, surveyStats, customStats) // eslint-disable-line handle-callback-err
    {
      if (recreate === '1')
      {
        return module.buildSurveyPdf(surveyId, surveyPdfFile, lang, this.next());
      }

      if (custom === '1')
      {
        if (customStats)
        {
          return this.skip(null, customPdfFile);
        }

        return this.skip(app.createError('NOT_FOUND', 404));
      }

      if (custom === '0')
      {
        if (surveyStats)
        {
          return this.skip(null, surveyPdfFile);
        }

        return this.skip(app.createError('NOT_FOUND', 404));
      }

      if (customStats)
      {
        return this.skip(null, customPdfFile);
      }

      if (surveyStats)
      {
        return this.skip(null, surveyPdfFile);
      }

      return module.buildSurveyPdf(surveyId, surveyPdfFile, lang, this.next());
    },
    function sendFileStep(err, pdfFile)
    {
      if (err)
      {
        return next(err);
      }

      res.type('pdf');
      res.sendFile(pdfFile);

      if (/^PREVIEW/.test(surveyId))
      {
        setTimeout(fs.unlink.bind(fs, pdfFile, function() {}), 30000);
      }
    }
  );
};
