// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');

module.exports = (app, module, req, res, next) =>
{
  const {PaintShopLoad} = module;

  const {secretKey, items} = req.body;

  if (secretKey !== module.config.loadSecretKey)
  {
    return next(app.createError('INVALID_SECRET_KEY', 400));
  }

  if (!Array.isArray(items) || !items.length)
  {
    return next(app.createError('INVALID_ITEMS', 400));
  }

  const docs = items
    .map(item =>
    {
      return {
        _id: {
          ts: new Date(item._id),
          c: 1
        },
        d: item.d,
        r: null
      };
    })
    .filter(doc => !isNaN(doc._id.ts.getTime()) && doc.d >= 0);

  if (!docs.length)
  {
    return next(app.createError('INVALID_ITEMS', 400));
  }

  step(
    function()
    {
      PaintShopLoad.collection.insertMany(docs, {ordered: false}, this.next());
    },
    function(err)
    {
      if (err)
      {
        module.warn(`Failed to update load: ${err.message}`);
      }

      PaintShopLoad.getStats(1, this.next());
    },
    function(err, stats)
    {
      if (err)
      {
        return next(err);
      }

      res.sendStatus(204);

      app.broker.publish('paintShop.load.updated', {
        stats,
        items: docs
      });
    }
  );
};
