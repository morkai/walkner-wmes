// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const dictionariesRoute = require('./dictionaries');

module.exports = (app, module) =>
{
  const {
    settings,
    user,
    express,
    Luma2Event,
    Luma2Line
  } = module;

  const canView = user.auth('LUMA2:VIEW');
  const canManage = user.auth('LUMA2:MANAGE');

  express.get('/luma2/settings', canView, settings.browseRoute('luma2'));
  express.put('/luma2/settings/:id', canManage, settings.updateRoute);

  express.get('/luma2/dictionaries', canView, dictionariesRoute.bind(null, app, module));

  express.get('/luma2/events', canView, express.crud.browseRoute.bind(null, app, Luma2Event));
  express.get('/luma2/events/:id', canView, express.crud.readRoute.bind(null, app, Luma2Event));
  express.get('/luma2/events;export.:format?', canView, express.crud.exportRoute.bind(null, app, {
    filename: 'WMES-LUMA2-EVENTS',
    freezeRows: 0,
    freezeColumns: 1,
    columns: {
      time: 'datetime',
      type: 20,
      line: 10,
      station: {
        type: 'integer',
        width: 3
      },
      program: {
        type: 'integer',
        width: 5
      },
      order: 9,
      pce: {
        type: 'integer',
        width: 5
      }
    },
    serializeRow: exportEvent,
    model: Luma2Event
  }));

  express.get('/luma2/lines', canView, express.crud.browseRoute.bind(null, app, Luma2Line));
  express.post('/luma2/lines', canManage, express.crud.addRoute.bind(null, app, Luma2Line));
  express.get('/luma2/lines/:id', canView, express.crud.readRoute.bind(null, app, Luma2Line));
  express.put('/luma2/lines/:id', canManage, express.crud.editRoute.bind(null, app, Luma2Line));
  express.delete('/luma2/lines/:id', canManage, express.crud.deleteRoute.bind(null, app, Luma2Line));

  function exportEvent(doc)
  {
    return {
      time: doc.time,
      type: doc.type,
      line: doc.line,
      station: doc.station,
      program: doc.program,
      order: doc.order,
      pce: doc.pce
    };
  }
};
