// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const moment = require('moment');
const {formatDate} = require('./dateFormatter');

exports.SHIFT_LENGTH = 8;

exports.SHIFT_COUNT = 24 / exports.SHIFT_LENGTH;

exports.SHIFT_START_HOUR = [null, 6, 14, 22];

exports.getShiftInfo = date =>
{
  if (date)
  {
    if (date instanceof Date)
    {
      date = date.getTime();
    }
    else if (moment.isMoment(date) && date.isValid())
    {
      date = moment.valueOf();
    }
    else if (typeof date !== 'number')
    {
      throw new Error(`The 'date' parameter must be a valid date, time or moment.`);
    }
  }
  else
  {
    date = Date.now();
  }

  const shiftMoment = moment(date);
  const h = shiftMoment.hours();
  const shiftInfo = {
    moment: shiftMoment,
    date: null,
    ymd: '',
    startTime: null,
    endTime: null,
    startHour: 0,
    no: 0
  };

  if (h >= exports.SHIFT_START_HOUR[1] && h < exports.SHIFT_START_HOUR[2])
  {
    shiftInfo.no = 1;
  }
  else if (h >= exports.SHIFT_START_HOUR[2] && h < exports.SHIFT_START_HOUR[3])
  {
    shiftInfo.no = 2;
  }
  else
  {
    shiftInfo.no = 3;

    if (h < 6)
    {
      shiftMoment.subtract(1, 'days');
    }
  }

  shiftInfo.startHour = exports.SHIFT_START_HOUR[shiftInfo.no];

  shiftInfo.moment.hours(shiftInfo.startHour).startOf('hour');

  shiftInfo.date = shiftInfo.moment.toDate();
  shiftInfo.ymd = formatDate(shiftInfo.date);
  shiftInfo.startTime = shiftInfo.date.getTime();
  shiftInfo.endTime = shiftInfo.startTime + exports.SHIFT_LENGTH * 3600 * 1000;

  return shiftInfo;
};

exports.getCurrentShiftInfo = () =>
{
  return exports.getShiftInfo(Date.now());
};

exports.getCurrentDate = (utc) =>
{
  const currentDate = moment();

  if (currentDate.hours() < exports.SHIFT_START_HOUR[1])
  {
    currentDate.subtract(1, 'days');
  }

  currentDate.startOf('day');

  if (utc)
  {
    return moment.utc(Date.UTC(currentDate.year(), currentDate.month(), currentDate.date()));
  }

  return currentDate;
};
