// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const _ = require('lodash');

module.exports = (app, module) =>
{
  const express = app[module.config.expressId];
  const user = app[module.config.userId];

  express.get('/sockets', user.auth('SUPER'), (req, res) =>
  {
    const sockets = [];
    const loginFilter = (req.query.login || '').trim().toLocaleLowerCase();
    const hostFilter = (req.query.host || '').trim().toLocaleLowerCase();
    const nameFilter = (req.query.name || '').trim().toLocaleLowerCase();

    _.forEach(module.sockets.connected, (socket) =>
    {
      const handshake = socket.handshake;
      const query = handshake.query || {};
      const socketUser = handshake.user || {};
      const login = socketUser.login;
      const host = query.COMPUTERNAME || query['X-WMES-CNAME'] || '';

      if (filterSocket(loginFilter, login)
        || filterSocket(hostFilter, host)
        || filterSocket(nameFilter, socketUser.searchName))
      {
        return;
      }

      sockets.push({
        _id: socket.id,
        host,
        ip: socketUser.ipAddress,
        user: socketUser._id,
        login,
        name: `${socketUser.lastName} ${socketUser.firstName}`.trim(),
        connectedAt: new Date(handshake.connectedAt),
        instance: query['X-WMES-INSTANCE'] || '',
        app: query['X-WMES-APP'] || '',
        line: query['X-WMES-LINE'] || ''
      });
    });

    sockets.sort((a, b) =>
    {
      const cmp = a.login.localeCompare(b.login);

      return cmp === 0 ? a._id.localeCompare(b._id) : cmp;
    });

    res.json({
      totalCount: sockets.length,
      collection: sockets
    });
  });

  function filterSocket(filter, value)
  {
    return filter !== '' && (typeof value !== 'string' || !value.toLocaleLowerCase().includes(filter));
  }
};
