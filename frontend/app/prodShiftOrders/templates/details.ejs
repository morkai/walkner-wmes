<div>
  <div class="panel panel-<%- model.mechOrder || !model.sapTaktTime ? 'primary' : model.taktTimeOk ? 'success' : 'warning' %>">
    <div class="panel-heading"><%- panelTitle %></div>
    <div class="panel-details row">
      <div class="col-md-4">
        <%- helpers.props(model, [
          {id: '!order', value: function(orderNo)
          {
            if (model.orderUrl)
            {
              return '<a href="' + model.orderUrl + '">' + model.order + '</a>';
            }

            return orderNo;
          }},
          '!operation',
          {
            id: 'quantityDoneSap',
            value:  model.quantityDone
              + ' / ' + (model.orderData.qty || '?')
              + ' [' + (model.orderData.unit || '?') + ']'
          },
          {
            id: 'workerCountSap',
            value:  model.workerCount
              + ' / ' + model.workerCountSap
              + ' [' + helpers.t('unit:workerCount') + ']'
          },
          {
            id: 'taktTime',
            visible: user.isAllowedTo('PROD_DATA:VIEW:EFF'),
            value:  function()
            {
              var value = model.taktTime + ' / ' + model.taktTimeSap + ' [' + helpers.t('unit:taktTime') + ']';

              if (model.taktTimeEff)
              {
                value += ' (' + model.taktTimeEff + '%)';
              }

              return value;
            }
          },
          {id: 'efficiency', visible: user.isAllowedTo('PROD_DATA:VIEW:EFF')},
          {id: 'planOrderGroup', visible: !model.mechOrder}
        ]) %>
      </div>
      <div class="col-md-4">
        <%- helpers.props(model, [
          {id: '!pressWorksheet', value: function(pw)
          {
            if (pw)
            {
              if (user.isAllowedTo('PRESS_WORKSHEETS:VIEW'))
              {
                return '<a href="#pressWorksheets/' + model.pressWorksheet + '">' + t('core', 'BOOL:true') + '</a>';
              }

              return t('core', 'BOOL:true');
            }

            return t('core', 'BOOL:false');
          }},
          '!prodShift',
          'startedAt',
          'finishedAt',
          'duration',
          '!creator'
        ]) %>
      </div>
      <div class="col-md-4">
        <%- helpers.props(model, {
          props: [
            {id: 'division', label: t('core', 'ORG_UNIT:division')},
            {id: 'subdivision', label: t('core', 'ORG_UNIT:subdivision')},
            {id: 'mrpControllers', label: t('core', 'ORG_UNIT:mrpController')},
            {id: 'prodFlow', label: t('core', 'ORG_UNIT:prodFlow')},
            {id: 'workCenter', label: t('core', 'ORG_UNIT:workCenter')},
            'prodLine'
          ]
        }) %>
      </div>
    </div>
  </div>
  <% if (model.losses && model.losses.length) { %>
  <div class="panel panel-warning">
    <div class="panel-heading">
      <%- helpers.t('PANEL:TITLE:losses') %>
    </div>
    <table class="table table-bordered table-condensed table-hover">
      <thead>
        <tr>
          <th class="is-min"><%- helpers.t('losses:reason') %></th>
          <th class="is-min"><%- helpers.t('losses:quantity') %></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <% model.losses.forEach(function(loss) { %>
        <tr>
          <td class="is-min"><%= loss.label %></td>
          <td class="is-number"><%= loss.count %></td>
          <td></td>
        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <% } %>
</div>
